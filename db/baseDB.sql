DROP TABLE IF EXISTS "activity";
CREATE TABLE activity ( ACTY_COD CHAR(3) NOT NULL , UNIT_COD CHAR(3) NULL , ACTY_DES VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LZH VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LSW VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LRU VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LPT VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LNL VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LKO VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LJA VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LIT VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LES VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_LDE VARCHAR(20) NULL DEFAULT 'Without description' , ACTY_TYP CHAR(1) NULL DEFAULT 'C' , ACTY_CTY CHAR(1) NULL DEFAULT 'O' , ACTY_IO CHAR(1) NULL DEFAULT 'I' , PRIMARY KEY (ACTY_COD)  );
INSERT INTO "activity" VALUES('001','002','Land preparation',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Preparar la tierra',NULL,'C','O','I');
INSERT INTO "activity" VALUES('002','002','Planting',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Plantar',NULL,'C','P','I');
INSERT INTO "activity" VALUES('003',NULL,'Fertilizing',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fertilizaci',NULL,'C','F','I');
INSERT INTO "activity" VALUES('004','002','Weeding',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Deshierbar',NULL,'C','O','I');
INSERT INTO "activity" VALUES('005','002','Pest/Disease control',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Control de pestes',NULL,'C','O','I');
INSERT INTO "activity" VALUES('006','002','Harvesting',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cosechar',NULL,'C','H','O');
INSERT INTO "activity" VALUES('007','002','Silage making',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Creacion de Silages',NULL,'C','O','I');
INSERT INTO "activity" VALUES('008','002','Hay Making',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Creacion de heno',NULL,'C','O','I');
INSERT INTO "activity" VALUES('009','006','Specialised manageme',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manejo especualizado',NULL,'C','F','I');
INSERT INTO "activity" VALUES('010','006','Marketing specific p',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O','O','I');
INSERT INTO "activity" VALUES('011','006','Tehering',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Tehering',NULL,'L','O','I');
INSERT INTO "activity" VALUES('012','006','Grazing/herding',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pastoreo',NULL,'L','O','I');
INSERT INTO "activity" VALUES('013','006','Mulching',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Mulching',NULL,'C','P','I');
INSERT INTO "activity" VALUES('014','005','Stallfeeding',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Alimentacion animal',NULL,'L','O','I');
INSERT INTO "activity" VALUES('015','005','Manure collection',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Recolec. de boÃ±Â©Â§Â¡',NULL,'L','O','I');
INSERT INTO "activity" VALUES('016','006','Medication',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Medicaci',NULL,'L','O','I');
INSERT INTO "activity" VALUES('017','006','Milking',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Orde',NULL,'L','O','I');
INSERT INTO "activity" VALUES('018','006','General management',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Control general',NULL,'L','O','I');
INSERT INTO "activity" VALUES('019','006','Vaccination',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Vacunaci',NULL,'L','O','I');
INSERT INTO "activity" VALUES('020','006','Marketing of animal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Mercadeo de animales',NULL,'L','O','I');
INSERT INTO "activity" VALUES('021','006','Milk processing',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Proces de leche',NULL,'O','O','I');
INSERT INTO "activity" VALUES('022','006','Threshing',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Threshing',NULL,'C','O','I');
INSERT INTO "activity" VALUES('023','006','Marketing of crops',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Mercadeo de cultivos',NULL,'O','O','I');
INSERT INTO "activity" VALUES('024','006','Marketing of vegetab',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Mercad de vegetales',NULL,'O','O','I');
INSERT INTO "activity" VALUES('025','006','Social issues',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sociales',NULL,'O','O','I');
INSERT INTO "activity" VALUES('026','006','Fetching water',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Acarreo de agua',NULL,'O','O','I');
INSERT INTO "activity" VALUES('027','006','Sticking',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sticking',NULL,'C','F','I');
INSERT INTO "activity" VALUES('028','006','Packing',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Empacar',NULL,'O','O','I');
INSERT INTO "activity" VALUES('029','006','Fuel collection',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Recolec. de gasolina',NULL,'O','O','I');
INSERT INTO "activity" VALUES('030','006','Marketing of milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Mercadeo de leche',NULL,'O','O','I');
INSERT INTO "activity" VALUES('035','006','Drying',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Secado',NULL,'C','F','I');
INSERT INTO "activity" VALUES('036','006','House keeping',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Ama/o de casa',NULL,'O','O','I');
INSERT INTO "activity" VALUES('037','006','Processing',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Procesamiento',NULL,'C','O','I');
INSERT INTO "activity" VALUES('040','006','manure application',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Aplic. de boÃ±Â©Â§Â¡',NULL,'C','F','I');
INSERT INTO "activity" VALUES('043','006','Burning',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Quemado',NULL,'C','O','I');
INSERT INTO "activity" VALUES('044','006','Shelling',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cubrir',NULL,'C','F','I');
INSERT INTO "activity" VALUES('045','006','Bird scaring',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Espantar pajaros',NULL,'C','O','I');
INSERT INTO "activity" VALUES('046','006','Feeding',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Alimentancion',NULL,'L','O','I');
INSERT INTO "activity" VALUES('047','006','Cleaning sheds',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cleaning sheds',NULL,'L','O','I');
INSERT INTO "activity" VALUES('048','008','Irrigation',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Irrigaci',NULL,'C','O','I');
INSERT INTO "activity" VALUES('050','006','Gen. Management',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manejo general',NULL,'C','O','I');
INSERT INTO "activity" VALUES('051','007','Observation',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Observaci',NULL,'C','O','I');
INSERT INTO "activity" VALUES('052','006','Forage collection',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Recolec. de forrajes',NULL,'L','O','I');
INSERT INTO "activity" VALUES('053',NULL,'Watering',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Regado',NULL,'L','O','I');
INSERT INTO "activity" VALUES('055',NULL,'Pesticide sistemic',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('056',NULL,'Pesticide foliar',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('057',NULL,'Herbicide',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('058','002','Bag/stores',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('059','009','Pricking',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('060',NULL,'Storing',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('061',NULL,'Seed nursery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('062',NULL,'Prunning/thinning',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'C','O','I');
INSERT INTO "activity" VALUES('063',NULL,'Other',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O','O','I');
INSERT INTO "activity" VALUES('41',NULL,'Threshing',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Threshing',NULL,'O','O','I');
INSERT INTO "activity" VALUES('42',NULL,'Transporting',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Transporte',NULL,'O','O','I');
DROP TABLE IF EXISTS "actymethods";
CREATE TABLE actymethods ( ACTY_COD CHAR(3) NOT NULL , MET_COD VARCHAR(5) NOT NULL , MET_DES VARCHAR(60) NULL DEFAULT 'Without description' , MET_LZH VARCHAR(60) NULL DEFAULT 'Without description' , MET_LSW VARCHAR(60) NULL DEFAULT 'Without description' , MET_LRU VARCHAR(60) NULL DEFAULT 'Without description' , MET_LPT VARCHAR(60) NULL DEFAULT 'Without description' , MET_LNL VARCHAR(60) NULL DEFAULT 'Without description' , MET_LKO VARCHAR(60) NULL DEFAULT 'Without description' , MET_LJA VARCHAR(60) NULL DEFAULT 'Without description' , MET_LIT VARCHAR(60) NULL DEFAULT 'Without description' , MET_LFR VARCHAR(60) NULL DEFAULT 'Without description' , MET_LES VARCHAR(60) NULL DEFAULT 'Without description' , MET_LDE VARCHAR(60) NULL DEFAULT 'Without description' , PRIMARY KEY (ACTY_COD, MET_COD)  );
INSERT INTO "actymethods" VALUES('001','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('001','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('002','PM001','Dry seed (Planting)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Semilla secas',NULL);
INSERT INTO "actymethods" VALUES('002','PM002','Transplants',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Transplante',NULL);
INSERT INTO "actymethods" VALUES('002','PM003','Vegetative cuttings',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Corte vegetal',NULL);
INSERT INTO "actymethods" VALUES('002','PM004','Pregerminated seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Semilla pregerm',NULL);
INSERT INTO "actymethods" VALUES('003','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('003','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('004','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('004','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('005','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('005','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('006','HA001','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('006','HA002','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('007','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('007','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('008','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('008','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('009','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('009','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('013','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('013','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('022','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('022','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('027','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('027','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('035','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('035','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('037','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('037','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('040','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('040','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('043','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('043','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('044','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('044','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('045','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('045','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('046','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('046','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
INSERT INTO "actymethods" VALUES('048','00001','Manual',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manual',NULL);
INSERT INTO "actymethods" VALUES('048','00002','Machinery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maquinado',NULL);
DROP TABLE IF EXISTS "actyunits";
CREATE TABLE actyunits ( UNIT_COD CHAR(3) NOT NULL , UNIT_DES VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LZH VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LSW VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LRU VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LPT VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LNL VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LKO VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LJA VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LIT VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LFR VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LES VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_LDE VARCHAR(60) NULL DEFAULT 'Without description' , UNIT_ABR VARCHAR(20) NULL DEFAULT 'Without description' , PRIMARY KEY (UNIT_COD) );
INSERT INTO "actyunits" VALUES('001','Kilograms of dry mater per month',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kilogramos de materia seca por mes',NULL,'kg DM');
INSERT INTO "actyunits" VALUES('002','Kilograms per plot',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kilogramos por plot',NULL,'kg/plot');
INSERT INTO "actyunits" VALUES('003','Kilograms of dry mater per hectarea per month',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kilogramos de materia seca por hec por mes',NULL,'kg DM/ha/month');
INSERT INTO "actyunits" VALUES('004','Kilograms of dry mater per plot',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kilogramos de materia seca por plot',NULL,'kg DM/plot');
INSERT INTO "actyunits" VALUES('005','Kilograms per hectarea per month',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kilogramos de materia seca por mes',NULL,'kg/ha/month');
INSERT INTO "actyunits" VALUES('006','Hours',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Horas',NULL,'h');
INSERT INTO "actyunits" VALUES('007','Mandays',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Horas hombre',NULL,'mandays');
INSERT INTO "actyunits" VALUES('008','Cubic metres /ha',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'m3/ha');
INSERT INTO "actyunits" VALUES('009','Hours per month',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Horas por mes',NULL,'h/month');
INSERT INTO "actyunits" VALUES('010','Kilograms of dry mater per hectarea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kilogramos de materia seca por hectarea',NULL,'kg DM/ha');
INSERT INTO "actyunits" VALUES('011','Kilograms per hectarea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kilogramos por hectarea',NULL,'kg/ha');
DROP TABLE IF EXISTS "agegrps";
CREATE TABLE agegrps ( vecpos INT NOT NULL , grptyp INT NULL , typcod VARCHAR(45) NULL , vfrom DECIMAL(7,3) NULL , vto DECIMAL(7,3) NULL , energy DECIMAL(7,3) NULL , protein DECIMAL(7,3) NULL , PRIMARY KEY (vecpos) );
INSERT INTO "agegrps" VALUES(1,1,'man',18,30,13.2,52);
INSERT INTO "agegrps" VALUES(2,1,'woman',18,30,10.4,45);
INSERT INTO "agegrps" VALUES(3,1,'teenager',8,10,8.8,27);
INSERT INTO "agegrps" VALUES(4,1,'child',0,1,3.8,14);
INSERT INTO "agegrps" VALUES(5,2,'man',31,59,12.6,52);
INSERT INTO "agegrps" VALUES(6,2,'woman',31,59,10.2,45);
INSERT INTO "agegrps" VALUES(7,2,'teenager',11,12,9.2,34);
INSERT INTO "agegrps" VALUES(8,2,'child',2,3,5.5,15);
INSERT INTO "agegrps" VALUES(9,3,'man',60,79,9.6,52);
INSERT INTO "agegrps" VALUES(10,3,'woman',60,79,8.2,45);
INSERT INTO "agegrps" VALUES(11,3,'teenager',13,14,10,43);
INSERT INTO "agegrps" VALUES(12,3,'child',4,5,6.4,17);
INSERT INTO "agegrps" VALUES(13,4,'man',80,999,9.6,52);
INSERT INTO "agegrps" VALUES(14,4,'woman',80,999,8.2,45);
INSERT INTO "agegrps" VALUES(15,4,'teenager',15,17,11.5,55);
INSERT INTO "agegrps" VALUES(16,4,'child',6,7,7.5,21);
DROP TABLE IF EXISTS "country";
CREATE TABLE country ( CNTY_COD CHAR(3) NOT NULL , CNTY_NAM VARCHAR(20) NULL DEFAULT 'Without name' , CURRDES VARCHAR(30) NULL DEFAULT 'Without description' , CURRSYMBOL VARCHAR(8) NULL DEFAULT 'No Sym' , CURRCODE VARCHAR(4) NULL DEFAULT 'NONE' , PRIMARY KEY (CNTY_COD) );
INSERT INTO "country" VALUES('AD','Andorra',NULL,NULL,NULL);
INSERT INTO "country" VALUES('AE','United arab emirates','dirham','Dh','AED');
INSERT INTO "country" VALUES('AF','Afghanistan','Afghani','Afg','AFA');
INSERT INTO "country" VALUES('AG','Antigua and Barbuda','Dollar','EC$','XCD');
INSERT INTO "country" VALUES('AI','Anguilla','Dollar','EC$','XCD');
INSERT INTO "country" VALUES('AL','Albania','Lek','L','ALL');
INSERT INTO "country" VALUES('AM','Armenia','Dram',NULL,'AMD');
INSERT INTO "country" VALUES('AN','Netherlands Antilles','Guilder','NAf.','ANG');
INSERT INTO "country" VALUES('AO','Angola','Kwanza','Kz','AOA');
INSERT INTO "country" VALUES('AQ','Antarctica',NULL,NULL,NULL);
INSERT INTO "country" VALUES('AR','Argentina','Peso','$','ARS');
INSERT INTO "country" VALUES('AS','American Samoa','Dollar','$','USD');
INSERT INTO "country" VALUES('AT','Austria','Euro','?','EUR');
INSERT INTO "country" VALUES('AU','Australia','Dollar','A$','AUD');
INSERT INTO "country" VALUES('AW','Aruba','Guilder','Af.','AWG');
INSERT INTO "country" VALUES('AZ','Azerbaijan','manat',NULL,'AZM');
INSERT INTO "country" VALUES('BA','Bosnia and Herzegowi',NULL,NULL,NULL);
INSERT INTO "country" VALUES('BB','Barbados','dollar','Bds$','BBD');
INSERT INTO "country" VALUES('BD','Bangladesh','taka','Tk','BDT');
INSERT INTO "country" VALUES('BE','Belgium','Euro','?','EUR');
INSERT INTO "country" VALUES('BF','Burkina faso','franc','CFAF','XOF');
INSERT INTO "country" VALUES('BG','Bulgaria','leva','Lv','BGL');
INSERT INTO "country" VALUES('BH','Bahrain','dinar','BD','BHD');
INSERT INTO "country" VALUES('BI','Burundi','franc','FBu','BIF');
INSERT INTO "country" VALUES('BJ','Benin','franc','CFAF','XOF');
INSERT INTO "country" VALUES('BM','Bermuda','dollar','Bd$','BMD');
INSERT INTO "country" VALUES('BN','Brunei Darussalam',NULL,NULL,NULL);
INSERT INTO "country" VALUES('BO','Bolivia','boliviano','Bs','BOB');
INSERT INTO "country" VALUES('BR','Brazil','Real','R$','BRL');
INSERT INTO "country" VALUES('BS','Bahamas','dollar','B$','BSD');
INSERT INTO "country" VALUES('BT','Bhutan','ngultrum','Nu','BTN');
INSERT INTO "country" VALUES('BV','Bouvet island','Krone','NKr','NOK');
INSERT INTO "country" VALUES('BW','Botswana','pula','P','BWP');
INSERT INTO "country" VALUES('BY','Belarus',NULL,NULL,NULL);
INSERT INTO "country" VALUES('BZ','Belize','dollar','BZ$','BZD');
INSERT INTO "country" VALUES('CA','Canada','dollar','Can$','CAD');
INSERT INTO "country" VALUES('CC','Cocos (Keeling) isla',NULL,NULL,NULL);
INSERT INTO "country" VALUES('CF','Central African Repu',NULL,NULL,NULL);
INSERT INTO "country" VALUES('CG','Congo','franc','CFAF','XAF');
INSERT INTO "country" VALUES('CH','Switzerland','franc','SwF','CHF');
INSERT INTO "country" VALUES('CK','Cook islands','Dollar','NZ$','NZD');
INSERT INTO "country" VALUES('CL','Chile','peso','Ch$','CLP');
INSERT INTO "country" VALUES('CM','Cameroon','franc','CFAF','XAF');
INSERT INTO "country" VALUES('CN','China','yuan renminbi','Y','CNY');
INSERT INTO "country" VALUES('CO','Colombia','peso','Col$','COP');
INSERT INTO "country" VALUES('CR','Costa Rica','colon','C/','CRC');
INSERT INTO "country" VALUES('CU','Cuba','peso','Cu$','CUP');
INSERT INTO "country" VALUES('CV','Cape verde',NULL,NULL,NULL);
INSERT INTO "country" VALUES('CX','Christmas island','Dollar','A$','AUD');
INSERT INTO "country" VALUES('CY','Cyprus','pound',NULL,'CYP');
INSERT INTO "country" VALUES('CZ','Czech Republic','koruna','Kc (with','CZK');
INSERT INTO "country" VALUES('DE','Germany','Euro','?','EUR');
INSERT INTO "country" VALUES('DJ','Djibouti','franc','DF','DJF');
INSERT INTO "country" VALUES('DK','Denmark','Krone','Dkr','DKK');
INSERT INTO "country" VALUES('DM','Dominica','dollar','EC$','XCD');
INSERT INTO "country" VALUES('DO','Dominican Republic','Peso','RD$','DOP');
INSERT INTO "country" VALUES('DZ','Algeria','Dinar','DA','DZD');
INSERT INTO "country" VALUES('EC','Ecuador','sucre','S/','ECS');
INSERT INTO "country" VALUES('EE','Estonia','Kroon','KR','EEK');
INSERT INTO "country" VALUES('EG','Egypt','pound',NULL,'EGP');
INSERT INTO "country" VALUES('EH','Western Sahara','Dirham','Dh','MAD');
INSERT INTO "country" VALUES('ER','Eritrea','nakfa','Nfa','ERN');
INSERT INTO "country" VALUES('ES','Spain','Euro','?','EUR');
INSERT INTO "country" VALUES('ET','Ethiopia','birr','Br','ETB');
INSERT INTO "country" VALUES('FI','Finland','Euro','?','EUR');
INSERT INTO "country" VALUES('FJ','Fiji','dollar','F$','FJD');
INSERT INTO "country" VALUES('FK','Falkland islands (ma','Pound',NULL,'FKP');
INSERT INTO "country" VALUES('FM','Micronesia, Federate','Dollar','$','USD');
INSERT INTO "country" VALUES('FO','Faroe islands','Euro','?','EUR');
INSERT INTO "country" VALUES('FR','France','Euro','?','EUR');
INSERT INTO "country" VALUES('GA','Gabon','franc','CFAF','XAF');
INSERT INTO "country" VALUES('GB','United Kingdom','pound',NULL,'GBP');
INSERT INTO "country" VALUES('GD','Grenada','dollar','EC$','XCD');
INSERT INTO "country" VALUES('GE','Georgia','lari',NULL,'GEL');
INSERT INTO "country" VALUES('GF','French Guiana','Euro','?','EUR');
INSERT INTO "country" VALUES('GH','Ghana','new cedi',NULL,'GHC');
INSERT INTO "country" VALUES('GI','Gibraltar','pound',NULL,'GIP');
INSERT INTO "country" VALUES('GL','Greenland','Krone','Dkr','DKK');
INSERT INTO "country" VALUES('GM','Gambia','dalasi','D','GMD');
INSERT INTO "country" VALUES('GN','Guinea','syli','FG','GNS');
INSERT INTO "country" VALUES('GP','Guadeloupe','Euro','?','EUR');
INSERT INTO "country" VALUES('GQ','Equatorial Guinea','franc','CFAF','GQE');
INSERT INTO "country" VALUES('GR','Greece','Euro','?','EUR');
INSERT INTO "country" VALUES('GT','Guatemala','quetzal','Q','GTQ');
INSERT INTO "country" VALUES('GU','Guam','Dollar','$','USD');
INSERT INTO "country" VALUES('GW','Guinea-Bissau','Franc','CFAF','XOF');
INSERT INTO "country" VALUES('GY','Guyana','dollar','G$','GYD');
INSERT INTO "country" VALUES('HK','Hong kong','dollar','HK$','HKD');
INSERT INTO "country" VALUES('HN','Honduras','lempira','L','HNL');
INSERT INTO "country" VALUES('HR','Croatia','kuna','HRK','HRK');
INSERT INTO "country" VALUES('HT','Haiti','gourde','G','HTG');
INSERT INTO "country" VALUES('HU','Hungary','forint','Ft','HUF');
INSERT INTO "country" VALUES('ID','Indonesia','rupiah','Rp','IDR');
INSERT INTO "country" VALUES('IE','Ireland','Euro','?','EUR');
INSERT INTO "country" VALUES('IL','Israel','new shekel','NIS','ILS');
INSERT INTO "country" VALUES('IN','India','rupee','Rs','INR');
INSERT INTO "country" VALUES('IO','British Indian Ocean',NULL,NULL,NULL);
INSERT INTO "country" VALUES('IQ','Iraq','dinar','ID','IQD');
INSERT INTO "country" VALUES('IR','Iran','rial','Rls','IRR');
INSERT INTO "country" VALUES('IS','Iceland','kr','IKr','ISK');
INSERT INTO "country" VALUES('IT','Italy','Euro','?','EUR');
INSERT INTO "country" VALUES('JM','Jamaica','dollar','J$','JMD');
INSERT INTO "country" VALUES('JO','Jordan','dinar','JD','JOD');
INSERT INTO "country" VALUES('JP','Japan','yen',NULL,'JPY');
INSERT INTO "country" VALUES('KE','Kenya','shilling','KSh','KES');
INSERT INTO "country" VALUES('KG','Kyrgyzstan','som',NULL,'KGS');
INSERT INTO "country" VALUES('KH','Cambodia','new riel','CR','KHR');
INSERT INTO "country" VALUES('KI','Kiribati','Dollar','A$','AUD');
INSERT INTO "country" VALUES('KM','Comoros','franc','CF','KMF');
INSERT INTO "country" VALUES('KN','Saint Kitts and Nevi','Dollar','EC$','XCD');
INSERT INTO "country" VALUES('KP','Korea, Democratic Pe','Won','Wn','KPW');
INSERT INTO "country" VALUES('KR','Korea, Republic of','Won','W','KRW');
INSERT INTO "country" VALUES('KW','Kuwait','dinar','KD','KWD');
INSERT INTO "country" VALUES('KY','Cayman islands','dollar','CI$','KYD');
INSERT INTO "country" VALUES('KZ','Kazakhstan','tenge',NULL,'KZT');
INSERT INTO "country" VALUES('LB','Lebanon','Pound','L.L.','LBP');
INSERT INTO "country" VALUES('LC','Saint lucia','Dollar','EC$','XCD');
INSERT INTO "country" VALUES('LI','Liechtenstein','Franc','SwF','CHF');
INSERT INTO "country" VALUES('LK','Sri Lanka','rupee','SLRs','LKR');
INSERT INTO "country" VALUES('LR','Liberia','dollar','$','LRD');
INSERT INTO "country" VALUES('LS','Lesotho','Loti','L','LSL');
INSERT INTO "country" VALUES('LT','Lithuania','Litas',NULL,'LTL');
INSERT INTO "country" VALUES('LU','Luxembourg','Euro','?','EUR');
INSERT INTO "country" VALUES('LV','Latvia','lat','Ls','LVL');
INSERT INTO "country" VALUES('LY','Libyan Arab Jamahiri','Dinar','LD','LYD');
INSERT INTO "country" VALUES('MA','Morocco','dirham','DH','MAD');
INSERT INTO "country" VALUES('MC','Monaco','Euro','?','EUR');
INSERT INTO "country" VALUES('MD','Moldova, Republic of','Leu',NULL,'MDL');
INSERT INTO "country" VALUES('MG','Madagascar','Ariayry','FMG','MGF');
INSERT INTO "country" VALUES('MH','Marshall islands',NULL,NULL,NULL);
INSERT INTO "country" VALUES('ML','Mali','franc','CFAF','XOF');
INSERT INTO "country" VALUES('MM','Myanmar','kyat','K','MMK');
INSERT INTO "country" VALUES('MN','Mongolia','Tugrik','Tug','MNT');
INSERT INTO "country" VALUES('MO','Macau','Pataca','P','MOP');
INSERT INTO "country" VALUES('MP','Northern Mariana isl',NULL,NULL,NULL);
INSERT INTO "country" VALUES('MQ','Martinique','Euro','?','EUR');
INSERT INTO "country" VALUES('MR','Mauritania','ouguiya','UM','MRO');
INSERT INTO "country" VALUES('MS','Montserrat','dollar','EC$','XCD');
INSERT INTO "country" VALUES('MT','Malta','Lira','Lm','MTL');
INSERT INTO "country" VALUES('MU','Mauritius','rupee','Mau Rs','MUR');
INSERT INTO "country" VALUES('MV','Maldives','rufiyaa','Rf','MVR');
INSERT INTO "country" VALUES('MW','Malawi','kwacha','MK','MWK');
INSERT INTO "country" VALUES('MX','Mexico','peso','Mex$','MXN');
INSERT INTO "country" VALUES('MY','Malaysia','ringgit','RM','MYR');
INSERT INTO "country" VALUES('MZ','Mozambique','metical','Mt','MZM');
INSERT INTO "country" VALUES('NA','Namibia','dollar','N$','NAD');
INSERT INTO "country" VALUES('NC','New Caledonia','franc','CFPF','XPF');
INSERT INTO "country" VALUES('NE','Niger','franc','CFAF','XOF');
INSERT INTO "country" VALUES('NF','Norfolk island','Dolalr','A$','AUD');
INSERT INTO "country" VALUES('NG','Nigeria','naira','N','NGN');
INSERT INTO "country" VALUES('NI','Nicaragua','gold cordoba','C$','NIO');
INSERT INTO "country" VALUES('NL','Netherlands','Euro','?','EUR');
INSERT INTO "country" VALUES('NO','Norway','Krone','NKr','NOK');
INSERT INTO "country" VALUES('NP','Nepal','rupee','NRs','NPR');
INSERT INTO "country" VALUES('NR','Nauru','Dollar','A$','AUD');
INSERT INTO "country" VALUES('NU','Niue','Dollar','NZ$','NZD');
INSERT INTO "country" VALUES('NZ','New Zealand','dollar','NZ$','NZD');
INSERT INTO "country" VALUES('OM','Oman','rial','RO','OMR');
INSERT INTO "country" VALUES('PA','Panama','balboa','B','PAB');
INSERT INTO "country" VALUES('PE','Peru','new sol','S/.','PEN');
INSERT INTO "country" VALUES('PF','French Polynesia','franc','CFPF','XPF');
INSERT INTO "country" VALUES('PG','Papua New Guinea','kina','K','PGK');
INSERT INTO "country" VALUES('PH','Philippines','peso','P-','PHP');
INSERT INTO "country" VALUES('PK','Pakistan','rupee','Rs','PKR');
INSERT INTO "country" VALUES('PL','Poland','zloty','Z-','PLN');
INSERT INTO "country" VALUES('PM','St. Pierre and Mique',NULL,NULL,NULL);
INSERT INTO "country" VALUES('PN','Pitcairn','Dolalr','NZ$','NZD');
INSERT INTO "country" VALUES('PR','Puerto Rico','Dollar','$','USD');
INSERT INTO "country" VALUES('PT','Portugal','Euro','?','EUR');
INSERT INTO "country" VALUES('PW','Palau','Dollar','$','USD');
INSERT INTO "country" VALUES('PY','Paraguay','guarani','G/','PYG');
INSERT INTO "country" VALUES('QA','Qatar','riyal','QR','QAR');
INSERT INTO "country" VALUES('RE','Reunion','Euro','?','EUR');
INSERT INTO "country" VALUES('RO','Romania','Leu','L','ROL');
INSERT INTO "country" VALUES('RU','Russian Federation','Ruble','R','RUB');
INSERT INTO "country" VALUES('RW','Rwanda','franc','RF','RWF');
INSERT INTO "country" VALUES('SA','Saudi Arabia','riyal','SRls','SAR');
INSERT INTO "country" VALUES('SB','Solomon islands','Dollar','SI$','SBD');
INSERT INTO "country" VALUES('SC','Seychelles','rupee','SR','SCR');
INSERT INTO "country" VALUES('SD','Sudan','Dinar',NULL,'SDP');
INSERT INTO "country" VALUES('SE','Sweden','Krona','Sk','SEK');
INSERT INTO "country" VALUES('SG','Singapore','dollar','S$','SGD');
INSERT INTO "country" VALUES('SH','St. Helena','pound',NULL,'SHP');
INSERT INTO "country" VALUES('SI','Slovenia','tolar','SlT','SIT');
INSERT INTO "country" VALUES('SK','Slovakia','koruna','Sk','SKK');
INSERT INTO "country" VALUES('SL','Sierra Leone','leone','Le','SLL');
INSERT INTO "country" VALUES('SM','San Marino','Euro','?','EUR');
INSERT INTO "country" VALUES('SN','Senegal','franc','CFAF','XOF');
INSERT INTO "country" VALUES('SO','Somalia','shilling','So. Sh.','SOS');
INSERT INTO "country" VALUES('SR','Suriname','Guilder','Sf.','SRG');
INSERT INTO "country" VALUES('ST','Sao Tome and Princip','Dobra','Db','STD');
INSERT INTO "country" VALUES('SV','El Salvador','colon','C/','SVC');
INSERT INTO "country" VALUES('SY','Syrian Arab Republic','Pound',NULL,'SYP');
INSERT INTO "country" VALUES('SZ','Swaziland','Lilangeni','L','SZL');
INSERT INTO "country" VALUES('TC','Turks and Caicos Isl',NULL,NULL,NULL);
INSERT INTO "country" VALUES('TD','Chad','franc','CFAF','XAF');
INSERT INTO "country" VALUES('TF','French Southern Terr',NULL,NULL,NULL);
INSERT INTO "country" VALUES('TG','Togo','franc','CFAF','XOF');
INSERT INTO "country" VALUES('TH','Thailand','baht','Bht or B','THB');
INSERT INTO "country" VALUES('TJ','Tajikistan','Somoni',NULL,'TJS');
INSERT INTO "country" VALUES('TK','Tokelau','Dollar','NZ$','NZD');
INSERT INTO "country" VALUES('TL','East Timor','Rupiah','Rp','IDR');
INSERT INTO "country" VALUES('TM','Turkmenistan','manat',NULL,'TMM');
INSERT INTO "country" VALUES('TN','Tunisia','dinar','TD','TND');
INSERT INTO "country" VALUES('TR','Turkey','lira','TL','TRL');
INSERT INTO "country" VALUES('TT','Trinidad and Tobago','dollar','TT$','TTD');
INSERT INTO "country" VALUES('TV','Tuvalu','Dollar','A$','AUD');
INSERT INTO "country" VALUES('TW','Taiwan','new dollar','NT$','TWD');
INSERT INTO "country" VALUES('TZ','Tanzania','shilling','TSh','TZS');
INSERT INTO "country" VALUES('UA','Ukraine','Hryvnia',NULL,'UAH');
INSERT INTO "country" VALUES('UG','Uganda','shilling','USh','UGX');
INSERT INTO "country" VALUES('US','United States','Dollar','$','USD');
INSERT INTO "country" VALUES('UY','Uruguay','Peso','N$U','UYU');
INSERT INTO "country" VALUES('UZ','Uzbekistan','som',NULL,'UZS');
INSERT INTO "country" VALUES('VC','Saint Vincent and th','Dollar','EC$','XCD');
INSERT INTO "country" VALUES('VE','Venezuela','bolivar','Bs','VEB');
INSERT INTO "country" VALUES('VG','Virgin islands (Brit',NULL,NULL,NULL);
INSERT INTO "country" VALUES('VI','Virgin islands (U.S.','Dollar','$','USD');
INSERT INTO "country" VALUES('VN','Viet Nam','Dong','D','VND');
INSERT INTO "country" VALUES('VU','Vanuatu','vatu','VT','VUV');
INSERT INTO "country" VALUES('WS','Samoa',NULL,NULL,NULL);
INSERT INTO "country" VALUES('YE','Yemen','rial','YRls','YER');
INSERT INTO "country" VALUES('YT','Mayotte',NULL,NULL,NULL);
INSERT INTO "country" VALUES('YU','Yugoslavia','dinar','Din','YUM');
INSERT INTO "country" VALUES('ZA','South Africa','rand','R','ZAR');
INSERT INTO "country" VALUES('ZM','Zambia','kwacha','ZK','ZMK');
INSERT INTO "country" VALUES('ZR','Zaire',NULL,NULL,NULL);
INSERT INTO "country" VALUES('ZW','Zimbabwe','dollar','Z$','ZWD');
DROP TABLE IF EXISTS "cpprods";
CREATE TABLE cpprods ( PROD_COD CHAR(3) NOT NULL , PROD_DES VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LZH VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LSW VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LRU VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LPT VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LNL VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LKO VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LJA VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LIT VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LFR VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LES VARCHAR(60) NULL DEFAULT 'Without description' , PROD_LDE VARCHAR(60) NULL DEFAULT 'Without description' , PRIMARY KEY (PROD_COD) );
INSERT INTO "cpprods" VALUES('001','Pulp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pulpa',NULL);
INSERT INTO "cpprods" VALUES('002','Cobs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Mazorca',NULL);
INSERT INTO "cpprods" VALUES('003','Grain (green)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Granos verdes',NULL);
INSERT INTO "cpprods" VALUES('004','Pulo',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pulo',NULL);
INSERT INTO "cpprods" VALUES('005','Kernel',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kernel',NULL);
INSERT INTO "cpprods" VALUES('006','Tuber',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Tuberculo',NULL);
INSERT INTO "cpprods" VALUES('007','Grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Granos',NULL);
INSERT INTO "cpprods" VALUES('008','Fruit',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fruta',NULL);
INSERT INTO "cpprods" VALUES('009','Vegetable',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Vegetal',NULL);
INSERT INTO "cpprods" VALUES('010','Seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Semillas',NULL);
INSERT INTO "cpprods" VALUES('011','Husks',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Husks',NULL);
INSERT INTO "cpprods" VALUES('012','Kocho',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kocho',NULL);
INSERT INTO "cpprods" VALUES('013','Bula',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Bula',NULL);
INSERT INTO "cpprods" VALUES('014','Nut',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Semilla (nut)',NULL);
INSERT INTO "cpprods" VALUES('015','Paddy rice',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Arroz',NULL);
INSERT INTO "cpprods" VALUES('016','Seedlings',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Seedlings',NULL);
INSERT INTO "cpprods" VALUES('017','Other',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Otro',NULL);
INSERT INTO "cpprods" VALUES('018','Cane',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Ca',NULL);
INSERT INTO "cpprods" VALUES('019','Leaves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hojas',NULL);
INSERT INTO "cpprods" VALUES('020','Pods',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pods',NULL);
INSERT INTO "cpprods" VALUES('021','Bulb',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Bulb',NULL);
INSERT INTO "cpprods" VALUES('022','Root',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Raiz',NULL);
INSERT INTO "cpprods" VALUES('023','Flower',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Flor',NULL);
INSERT INTO "cpprods" VALUES('025','Grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Zacate',NULL);
INSERT INTO "cpprods" VALUES('026','Stem',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Stem',NULL);
INSERT INTO "cpprods" VALUES('027','Fiber',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fibra',NULL);
INSERT INTO "cpprods" VALUES('028','Bark',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Bark',NULL);
INSERT INTO "cpprods" VALUES('029','Timber',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Le',NULL);
INSERT INTO "cpprods" VALUES('030','Sucker',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
DROP TABLE IF EXISTS "crop";
CREATE TABLE crop ( CROP_COD CHAR(3) NOT NULL , CROP_DES VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LZH VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LSW VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LRU VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LPT VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LNL VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LKO VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LJA VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LIT VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LFR VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LES VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LDE VARCHAR(30) NULL DEFAULT 'Without description' , VEGETABLE CHAR(1) NULL DEFAULT 'N' , SHOWINLIST CHAR(1) NULL DEFAULT 'Y' , PRIMARY KEY (CROP_COD) );
INSERT INTO "crop" VALUES('(V1','Fruit/veg Orchard',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Huerta de vegetales',NULL,'N','N');
INSERT INTO "crop" VALUES('(V2','Fruit/veg Orchard',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Huerta de vegetales',NULL,'N','N');
INSERT INTO "crop" VALUES('(V3','Fruit/veg Orchard',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Huerta de vegetales',NULL,'N','N');
INSERT INTO "crop" VALUES('(V4','Fruit/veg Orchard',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Huerta de vegetales',NULL,'N','N');
INSERT INTO "crop" VALUES('(V5','Fruit/veg Orchard',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Huerta de vegetales',NULL,'N','N');
INSERT INTO "crop" VALUES(')FO','Fallow',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Follow',NULL,'N','N');
INSERT INTO "crop" VALUES('001','Test',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Test',NULL,'Y',NULL);
INSERT INTO "crop" VALUES('013','Test',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Test',NULL,'Y',NULL);
INSERT INTO "crop" VALUES('015','Gherkins',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Gherkins',NULL,'N','Y');
INSERT INTO "crop" VALUES('016','Pomelos',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pomelos',NULL,'N','Y');
INSERT INTO "crop" VALUES('017','Nectarines',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Nectarines',NULL,'N','Y');
INSERT INTO "crop" VALUES('018','Limes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Limes',NULL,'N','Y');
INSERT INTO "crop" VALUES('019','Brocoly',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Brocoly',NULL,'Y','Y');
INSERT INTO "crop" VALUES('020','CouliFlower',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CouliFlower',NULL,'Y','Y');
INSERT INTO "crop" VALUES('021','Radish',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Radish',NULL,'Y','Y');
INSERT INTO "crop" VALUES('022','Faba beans',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Faba beans',NULL,'Y','Y');
INSERT INTO "crop" VALUES('023','Pepper (Spice)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pepper (Spice)',NULL,'N','Y');
INSERT INTO "crop" VALUES('025','Jak',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jak',NULL,'N','Y');
INSERT INTO "crop" VALUES('026','Manioc',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manioc',NULL,'N','Y');
INSERT INTO "crop" VALUES('027','Ladies Finger',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Ladies Finger',NULL,'N','Y');
INSERT INTO "crop" VALUES('028','Gliricidia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','Y');
INSERT INTO "crop" VALUES('029','Weeds',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','Y');
INSERT INTO "crop" VALUES('030','Grasses, various',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','Y');
INSERT INTO "crop" VALUES('031','Gboma',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','Y');
INSERT INTO "crop" VALUES('032','Atoma',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','Y');
INSERT INTO "crop" VALUES('033','Cocoyam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','Y');
INSERT INTO "crop" VALUES('AE','Areca Nuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Areca Nuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('AL','Alfalfa/Lucerne',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Alfalfa/Lucerne',NULL,'N','Y');
INSERT INTO "crop" VALUES('AM','Almonds',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Almendras',NULL,'N','Y');
INSERT INTO "crop" VALUES('AN','Anise, Fennel',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Anise, Fennel',NULL,'N','Y');
INSERT INTO "crop" VALUES('AO','Arrow Root',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Arrow Root',NULL,'Y','Y');
INSERT INTO "crop" VALUES('AP','Apples',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Manzanas',NULL,'Y','Y');
INSERT INTO "crop" VALUES('AR','Apricots',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Apricots',NULL,'Y','Y');
INSERT INTO "crop" VALUES('AS','Asparagus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Esparragos',NULL,'Y','Y');
INSERT INTO "crop" VALUES('AT','Artichokes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Artichokes',NULL,'Y','Y');
INSERT INTO "crop" VALUES('AU','Aubergine',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Aubergine',NULL,'Y','Y');
INSERT INTO "crop" VALUES('AV','Avocados',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Aguacates',NULL,'Y','Y');
INSERT INTO "crop" VALUES('BA','Barley',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Barley',NULL,'N','Y');
INSERT INTO "crop" VALUES('BB','Broad Beans',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Frijoles',NULL,'N','Y');
INSERT INTO "crop" VALUES('BC','brachiaria',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'brachiaria',NULL,'N','Y');
INSERT INTO "crop" VALUES('BG','Bahia Grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Bahia Grass',NULL,'N','Y');
INSERT INTO "crop" VALUES('BK','Buckwheat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Buckwheat',NULL,'N','Y');
INSERT INTO "crop" VALUES('BM','Bambara beans',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Frijoles Bambara',NULL,'Y','Y');
INSERT INTO "crop" VALUES('BN','Beans',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Frijoles',NULL,'N','Y');
INSERT INTO "crop" VALUES('BR','Beetroot',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Beetroot',NULL,'Y','Y');
INSERT INTO "crop" VALUES('BS','Beet sugar',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Beet sugar',NULL,'N','Y');
INSERT INTO "crop" VALUES('BT','Beet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Beet',NULL,'Y','Y');
INSERT INTO "crop" VALUES('BU','Millet, bulrash',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Millet, bulrash',NULL,NULL,'Y');
INSERT INTO "crop" VALUES('BW','Broad leaf weeds',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Broad leaf weeds',NULL,'N','Y');
INSERT INTO "crop" VALUES('BX','Bananas',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Bananas',NULL,'N','Y');
INSERT INTO "crop" VALUES('BZ','Brazil nuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Brazil nuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('CA','Canary seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Canary seed',NULL,'N','Y');
INSERT INTO "crop" VALUES('CB','Cabbage',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Repollo',NULL,'N','Y');
INSERT INTO "crop" VALUES('CC','Cocoa beans',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Granos de cocoa',NULL,'N','Y');
INSERT INTO "crop" VALUES('CD','Cranberries',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cranberries',NULL,'N','Y');
INSERT INTO "crop" VALUES('CE','Celery',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Celery',NULL,'Y','Y');
INSERT INTO "crop" VALUES('CF','Cauliflower',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Coliflor',NULL,'Y','Y');
INSERT INTO "crop" VALUES('CG','Cucumbers',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cucumbers',NULL,'Y','Y');
INSERT INTO "crop" VALUES('CH','Chickpea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Chickpea',NULL,'N','Y');
INSERT INTO "crop" VALUES('CI','Cherries',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cherries',NULL,'N','Y');
INSERT INTO "crop" VALUES('CJ','Cloves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cloves',NULL,'N','Y');
INSERT INTO "crop" VALUES('CK','Chillies',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Chiles',NULL,'Y','Y');
INSERT INTO "crop" VALUES('CL','Cashewapple',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cashewapple',NULL,'N','Y');
INSERT INTO "crop" VALUES('CM','Cinnamon',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cinnamon',NULL,'N','Y');
INSERT INTO "crop" VALUES('CN','Canola',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Canola',NULL,'N','Y');
INSERT INTO "crop" VALUES('CO','Cotton',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Algodon',NULL,'N','Y');
INSERT INTO "crop" VALUES('CP','Cowpea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cowpea',NULL,'N','Y');
INSERT INTO "crop" VALUES('CQ','Coconuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cocos',NULL,'N','Y');
INSERT INTO "crop" VALUES('CR','Carrot',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Zanahoria',NULL,'Y','Y');
INSERT INTO "crop" VALUES('CS','Cassava',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Yuca',NULL,'N','Y');
INSERT INTO "crop" VALUES('CT','Beans, castor',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Beans, castor',NULL,'N','Y');
INSERT INTO "crop" VALUES('CU','Cantaloupes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cantaloupes',NULL,'Y','Y');
INSERT INTO "crop" VALUES('CV','Chestnuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Chestnuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('CW','Cashew nuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cashew nuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('CX','Carobs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Carobs',NULL,'N','Y');
INSERT INTO "crop" VALUES('CY','Chicory roots',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Chicory roots',NULL,'Y','Y');
INSERT INTO "crop" VALUES('CZ','Coffee',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Caf',NULL,'N','Y');
INSERT INTO "crop" VALUES('DA','Dates',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Dates',NULL,'N','Y');
INSERT INTO "crop" VALUES('EG','Eggplants',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Berenjena',NULL,'Y','Y');
INSERT INTO "crop" VALUES('EN','Enset',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Enset',NULL,'N','Y');
INSERT INTO "crop" VALUES('FA','Fallow',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fallow',NULL,'N','Y');
INSERT INTO "crop" VALUES('FC','Fritcale',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fritcale',NULL,'N','Y');
INSERT INTO "crop" VALUES('FG','Figs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Figs',NULL,'N','Y');
INSERT INTO "crop" VALUES('FM','Millet, finger',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Millet, finger',NULL,NULL,'Y');
INSERT INTO "crop" VALUES('FN','Fonio',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fonio',NULL,'N','Y');
INSERT INTO "crop" VALUES('FX','Flax',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Flax',NULL,'N','Y');
INSERT INTO "crop" VALUES('GE','Green Grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Green Grass',NULL,'N','Y');
INSERT INTO "crop" VALUES('GG','Ginger',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Gengibre',NULL,'N','Y');
INSERT INTO "crop" VALUES('GL','Garlic',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Ajos',NULL,'Y','Y');
INSERT INTO "crop" VALUES('GN','Groundnuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Groundnuts',NULL,NULL,'Y');
INSERT INTO "crop" VALUES('GO','Gooseberries',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Gooseberries',NULL,'N','Y');
INSERT INTO "crop" VALUES('GP','Grapefruits',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Grapefruits',NULL,'N','Y');
INSERT INTO "crop" VALUES('GR','Grapes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Grapes',NULL,'N','Y');
INSERT INTO "crop" VALUES('GU','Gum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Gum',NULL,'N','Y');
INSERT INTO "crop" VALUES('GW','Grass weeds',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Grass weeds',NULL,'N','Y');
INSERT INTO "crop" VALUES('HE','Hemp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hemp',NULL,'N','Y');
INSERT INTO "crop" VALUES('HO','Hops',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hops',NULL,'N','Y');
INSERT INTO "crop" VALUES('HS','Hempseed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hempseed',NULL,'N','Y');
INSERT INTO "crop" VALUES('HZ','Hazelnuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hazelnuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('JU','Jute',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Jute',NULL,'N','Y');
INSERT INTO "crop" VALUES('k','kales',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'kales',NULL,'N','Y');
INSERT INTO "crop" VALUES('KL','Kolanuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kolanuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('KN','Karite nuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Karite nuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('KP','Kapok fibre',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kapok fibre',NULL,'N','Y');
INSERT INTO "crop" VALUES('KW','Kiwi fruit',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Kiwi',NULL,'N','Y');
INSERT INTO "crop" VALUES('LE','Lettuce',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Lechuga',NULL,'Y','Y');
INSERT INTO "crop" VALUES('LK','leek',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'leek',NULL,'N','Y');
INSERT INTO "crop" VALUES('LL','Lemons',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Limones',NULL,'N','Y');
INSERT INTO "crop" VALUES('LN','Linseed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Linseed',NULL,'N','Y');
INSERT INTO "crop" VALUES('LP','Lupins',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Lupins',NULL,'N','Y');
INSERT INTO "crop" VALUES('LT','Lentils',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Lentils',NULL,'N','Y');
INSERT INTO "crop" VALUES('MA','Mate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Mate',NULL,'N','Y');
INSERT INTO "crop" VALUES('MD','Mustard seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Semillas de mostasa',NULL,'N','Y');
INSERT INTO "crop" VALUES('MG','Mangoes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Magos',NULL,'N','Y');
INSERT INTO "crop" VALUES('ML','Millet, pearl',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Millet, pearl',NULL,NULL,'Y');
INSERT INTO "crop" VALUES('MS','Melonseed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Melonseed',NULL,'N','Y');
INSERT INTO "crop" VALUES('MT','Millet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Millet',NULL,'N','Y');
INSERT INTO "crop" VALUES('MU','Mushrooms',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hongos',NULL,'N','Y');
INSERT INTO "crop" VALUES('MZ','Maize',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Maiz',NULL,'N','Y');
INSERT INTO "crop" VALUES('Ng','Napier grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Napier grass',NULL,'N','Y');
INSERT INTO "crop" VALUES('NM','Nutmeg',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Nutmeg',NULL,'N','Y');
INSERT INTO "crop" VALUES('np','napier grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'napier grass',NULL,'N','Y');
INSERT INTO "crop" VALUES('NS','Niger seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Niger seed',NULL,'N','Y');
INSERT INTO "crop" VALUES('OA','Oats',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Oats',NULL,'N','Y');
INSERT INTO "crop" VALUES('OK','Okra',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Okra',NULL,'Y','Y');
INSERT INTO "crop" VALUES('OL','Olives',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Olivos',NULL,'N','Y');
INSERT INTO "crop" VALUES('ON','Onions',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cebolla',NULL,'Y','Y');
INSERT INTO "crop" VALUES('OR','Oranges',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Naranjas',NULL,'N','Y');
INSERT INTO "crop" VALUES('PA','Pasture',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pasto',NULL,'N','Y');
INSERT INTO "crop" VALUES('PC','Pistachios',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pistachos',NULL,'N','Y');
INSERT INTO "crop" VALUES('PE','Pea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pea',NULL,'N','Y');
INSERT INTO "crop" VALUES('PF','Palm fruit',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Palm fruit',NULL,'N','Y');
INSERT INTO "crop" VALUES('PH','Peaches',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Peaches',NULL,'N','Y');
INSERT INTO "crop" VALUES('PI','Pineapple',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pi',NULL,'N','Y');
INSERT INTO "crop" VALUES('PK','Pumpkins',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pumpkins',NULL,'Y','Y');
INSERT INTO "crop" VALUES('PL','Plantains',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Plantains',NULL,'N','Y');
INSERT INTO "crop" VALUES('PM','Peppermint',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pimienta',NULL,'N','Y');
INSERT INTO "crop" VALUES('PN','Peanut',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Peanut',NULL,'N','Y');
INSERT INTO "crop" VALUES('PO','Poppy seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Poppy seed',NULL,'N','Y');
INSERT INTO "crop" VALUES('PP','Pigeon pea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pigeon pea',NULL,'N','Y');
INSERT INTO "crop" VALUES('PR','Pepper (Chillie)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Chiles dulces',NULL,'N','Y');
INSERT INTO "crop" VALUES('PS','Pears',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Peras',NULL,'N','Y');
INSERT INTO "crop" VALUES('PT','Potato',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Papas',NULL,'Y','Y');
INSERT INTO "crop" VALUES('PU','Plums',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Plums',NULL,'N','Y');
INSERT INTO "crop" VALUES('PX','Persimmons',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Persimmons',NULL,'N','Y');
INSERT INTO "crop" VALUES('PY','Papayas',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Papayas',NULL,'N','Y');
INSERT INTO "crop" VALUES('QI','Quinoa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Quinoa',NULL,'N','Y');
INSERT INTO "crop" VALUES('QU','Quinces',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Quinces',NULL,'N','Y');
INSERT INTO "crop" VALUES('RA','Ramie',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Ramie',NULL,'N','Y');
INSERT INTO "crop" VALUES('RB','Raspberries',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Raspberries',NULL,'N','Y');
INSERT INTO "crop" VALUES('RC','Red clover',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Red clover',NULL,'N','Y');
INSERT INTO "crop" VALUES('RI','Rice',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Arroz',NULL,'N','Y');
INSERT INTO "crop" VALUES('RS','Rapeseed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Rapeseed',NULL,'N','Y');
INSERT INTO "crop" VALUES('RU','Rubber',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Rubber',NULL,'N','Y');
INSERT INTO "crop" VALUES('RY','Rye',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Rye',NULL,'N','Y');
INSERT INTO "crop" VALUES('S','Sugarcane',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CaÃ±Â¡Â Â¤e azucar',NULL,'N','Y');
INSERT INTO "crop" VALUES('SB','Soyabean',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Soya',NULL,NULL,'Y');
INSERT INTO "crop" VALUES('SC','Sugarcane',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sugarcane',NULL,'N','Y');
INSERT INTO "crop" VALUES('SE','Cotton Seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Cotton Seed',NULL,'N','Y');
INSERT INTO "crop" VALUES('SF','Safflower Seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Safflower Seed',NULL,'N','Y');
INSERT INTO "crop" VALUES('SG','Sorghum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sorgo',NULL,'N','Y');
INSERT INTO "crop" VALUES('SH','Spinach',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Espinaca',NULL,'Y','Y');
INSERT INTO "crop" VALUES('SI','Sisal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sisal',NULL,'N','Y');
INSERT INTO "crop" VALUES('SP','Sweet Potatoes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Yanp',NULL,'N','Y');
INSERT INTO "crop" VALUES('SQ','Squash',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Squash',NULL,'Y','Y');
INSERT INTO "crop" VALUES('SR','String beans',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'String beans',NULL,'N','Y');
INSERT INTO "crop" VALUES('SS','Sesame Seed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sesame Seed',NULL,'N','Y');
INSERT INTO "crop" VALUES('ST','Shrubs/trees',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Shrubs/trees',NULL,'N','Y');
INSERT INTO "crop" VALUES('SU','Sunflower',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sunflower',NULL,'N','Y');
INSERT INTO "crop" VALUES('SW','Strawberries',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Strawberries',NULL,'N','Y');
INSERT INTO "crop" VALUES('SX','Spices',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Especies',NULL,'Y','Y');
INSERT INTO "crop" VALUES('TB','Tobacco',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Tabaco',NULL,NULL,'Y');
INSERT INTO "crop" VALUES('TE','Tea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Te',NULL,'N','Y');
INSERT INTO "crop" VALUES('TF','Teff',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Teff',NULL,'N','Y');
INSERT INTO "crop" VALUES('TG','Tung nuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Tung nuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('TH','Thurston grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Thurston grass',NULL,'N','Y');
INSERT INTO "crop" VALUES('TM','Tomato',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Tomate',NULL,'Y','Y');
INSERT INTO "crop" VALUES('TN','Tanier (Xanthosoma)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Tanier (Xanthosoma)',NULL,'N','Y');
INSERT INTO "crop" VALUES('TR','Taro (Colocasia)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Taro (Colocasia)',NULL,'N','Y');
INSERT INTO "crop" VALUES('TT','Triticale',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Triticale',NULL,'N','Y');
INSERT INTO "crop" VALUES('VA','Vanilla',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Vainilla',NULL,'N','Y');
INSERT INTO "crop" VALUES('VB','Bean, velvet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Bean, velvet',NULL,NULL,'Y');
INSERT INTO "crop" VALUES('VE','Vegetables, assorted orchard',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Vegetables, assorted orchard',NULL,'Y','Y');
INSERT INTO "crop" VALUES('VT','Vetches',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Vetches',NULL,'N','Y');
INSERT INTO "crop" VALUES('WA','Walnuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Walnuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('WH','Wheat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Wheat',NULL,'N','Y');
INSERT INTO "crop" VALUES('WM','Watermelons',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Watermelons',NULL,'N','Y');
INSERT INTO "crop" VALUES('wp','Peppers, sweet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Peppers, sweet',NULL,'N','Y');
INSERT INTO "crop" VALUES('XB','Bambara Nuts',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Bambara Nuts',NULL,'N','Y');
INSERT INTO "crop" VALUES('XC','Coir',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Coir',NULL,'N','Y');
INSERT INTO "crop" VALUES('XP','Grass Pea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Grass Pea',NULL,'N','Y');
INSERT INTO "crop" VALUES('XR','Currants',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Currants',NULL,'N','Y');
INSERT INTO "crop" VALUES('XX','Orchard multispecies',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Orchard multispecies',NULL,'Y','Y');
INSERT INTO "crop" VALUES('YA','Yautia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Yautia',NULL,'N','Y');
INSERT INTO "crop" VALUES('YM','Yams',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Yams',NULL,'N','Y');
DROP TABLE IF EXISTS "cropfora";
CREATE TABLE cropfora ( CROP_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , ENERGY DECIMAL(7,3) NULL DEFAULT 0 , PROTEIN DECIMAL(7,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(7,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(7,3) NULL DEFAULT 0 , NDF DECIMAL(7,3) NULL DEFAULT 0 , DIGESTI DECIMAL(7,3) NULL DEFAULT 0 , ANENERGY DECIMAL(7,3) NULL DEFAULT 0 , USDAR VARCHAR(20) NULL DEFAULT 'Without description' , USDAC VARCHAR(20) NULL DEFAULT 'Without description' , SNITROGEN DECIMAL(7,3) NULL DEFAULT 0 , ASH DECIMAL(7,3) NULL DEFAULT 0 , PRIMARY KEY (CROP_COD, FORA_COD)  );
INSERT INTO "cropfora" VALUES('019','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('021','001',2.35,0.22,2.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('022','001',3.8,0.12,2.14,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('025','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('026','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('028','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('029','031',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('030','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('AL','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('AM','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('AO','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BA','028',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BB','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BC','011',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BC','018',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BK','028',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BM','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BN','001',3.72,0.25,2.75,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BN','010',1.19,0.21,2.93,67.04,0,0,0,0,66.1,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BN','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BX','001',1.9,0.12,2.19,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BX','002',0.73,0.18,4.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BX','011',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BX','018',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BX','029',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BX','033',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('BZ','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CB','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CE','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CH','001',4.17,0.27,2.88,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CH','010',1.02,0,0,67.7,0,0,0,0,58.5,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CO','025',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CO','026',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CP','001',2.89,0.11,2.1,47.03,0,0,0,0,46.3,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CP','002',1.61,0,0,45.95,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CP','010',1.8,0,0,0,0,0,0,0,60,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CP','026',2.89,0.11,2.1,40,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CP','032',2.09,0,0,38.55,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CQ','001',0.93,0.13,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CQ','011',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CQ','018',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CQ','030',0.77,0.08,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CR','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CS','030',2.98,0.19,0.73,55.26,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CT','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CY','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CZ','001',2.8,0.19,2.75,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('CZ','030',2.03,0.18,2.75,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('GN','001',3.11,0.17,2.41,0,0,0,0,0,36.7,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('GN','002',1.73,0,0,0,0,0,0,0,49.7,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('GN','026',2.78,0,0,47,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('GN','027',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('GN','029',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('MT','010',0,0,0,42,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('MZ','001',1.66,0.26,2.04,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('MZ','010',0.68,0.06,1.22,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('MZ','030',0.41,0.05,0.81,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('MZ','031',1,0.13,2.06,42.6,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('MZ','032',0.89,0.09,0.46,35.9,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('Ng','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('np','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PE','001',3.64,0.16,2.05,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PE','010',1.37,0.08,1.11,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PE','031',2.29,0,0,44.5,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PI','011',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PI','018',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PI','026',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PL','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PL','033',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PP','001',3.66,0.2,1.59,0,0,0,0,0,45.37,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PP','002',0,0,0,0,0,0,0,0,71.5,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PP','030',1.66,0.1,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PP','031',4.1,0,0,0,0,0,0,0,44.91,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('PT','027',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('QI','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','001',2.72,0,0,41,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','010',0.88,0.05,0.86,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','011',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','018',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','024',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','026',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','030',0.61,0.04,0.88,46,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','031',0.74,0.07,2.34,36.2,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RI','032',0.84,0,0,52.6,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('RY','028',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('S','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SB','001',3.83,0.15,2.16,42.9,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SB','002',2.39,0,0,44.9,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SB','010',1.07,0.2,1.78,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SB','030',1.3,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SB','032',1.41,0.09,0,42.5,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SC','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SG','001',0.63,0.1,1.4,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SG','010',0.6,0.06,1.44,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SP','001',2.32,0.36,4.69,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SP','011',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SP','027',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SU','001',2.41,0.18,2.93,30.6,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('SU','024',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('TE','030',1.37,0.3,1.23,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('TH','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('TM','010',2.07,0.23,3.05,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('TM','027',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('TT','028',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('VB','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('VT','027',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('WH','002',0.67,0.09,1.12,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('WH','010',0.37,0.03,0.4,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('WH','028',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('WH','031',0.55,0.09,0,42.9,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropfora" VALUES('XB','001',3.59,0.19,1.99,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
DROP TABLE IF EXISTS "croplabour";
CREATE TABLE croplabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "cropman";
CREATE TABLE cropman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD)  );
DROP TABLE IF EXISTS "cropmanfert";
CREATE TABLE cropmanfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, NMONTH, FERTYP_COD)  );
DROP TABLE IF EXISTS "cropmanheap";
CREATE TABLE cropmanheap ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , HEAP_COD CHAR(3) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , QTYAPP DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, NMONTH, HEAP_COD)  );
DROP TABLE IF EXISTS "cropmanlabour";
CREATE TABLE cropmanlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PERS_COD)  );
DROP TABLE IF EXISTS "cropmanperiods";
CREATE TABLE cropmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, period_id)  );
DROP TABLE IF EXISTS "cropmanprchfert";
CREATE TABLE cropmanprchfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FERTYP_COD)  );
DROP TABLE IF EXISTS "cropmanprchfertperiods";
CREATE TABLE cropmanprchfertperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FERTYP_COD, period_id)  );
DROP TABLE IF EXISTS "cropmantim";
CREATE TABLE cropmantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PLANDENS DECIMAL(12,3) NULL DEFAULT 0 , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, NMONTH)  );
DROP TABLE IF EXISTS "cropprods";
CREATE TABLE cropprods ( CROP_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , ENERGY DECIMAL(7,3) NULL DEFAULT 0 , PROTEIN DECIMAL(7,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(7,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(7,3) NULL DEFAULT 0 , NDF DECIMAL(7,3) NULL DEFAULT 0 , DIGESTI DECIMAL(7,3) NULL DEFAULT 0 , ANENERGY DECIMAL(7,4) NULL DEFAULT 0 , USADR VARCHAR(20) NULL DEFAULT 'Without description' , USADC VARCHAR(20) NULL DEFAULT 'Without description' , SNITROGEN DECIMAL(7,3) NULL DEFAULT 0 , ASH DECIMAL(7,3) NULL DEFAULT 0 , PRIMARY KEY (CROP_COD, PROD_COD)  );
INSERT INTO "cropprods" VALUES('016','008',0.101,0.008,0.14,0,1.34,6.3,9.11,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('017','008',0.17,0.026,0.2,0,1.85,10.6,12.41,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('018','008',0.048,0.014,0.12,0,0.67,3,9.21,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('019','009',0.4,0.07,0.33,0,1.09,25,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('020','009',0.47,0.06,0.3,0,1.3,29.5,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('021','009',0.096,0.02,0.23,0,0.46,6,4.73,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('022','010',0,0.53,1.26,0,15.87,0,86.56,24.77,14.36,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('023','010',1.752,0.17,1.26,0,10.67,109.5,89.49,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('025','008',0,0,0,0,3.93,14.7,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('025','017',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('026','017',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('027','017',0.32,0.063,0.3,0,1.29,20,9.83,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('031','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('032','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('033','006',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('033','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AE','014',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AL','009',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AL','010',0.753,0.07,0.079,0,1.21,39.9,8.86,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AL','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AM','006',0,0,0,0,2.8,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AM','009',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AM','010',4.104,0.47,0.73,0,24.18,212.6,94.75,21.08,4.72,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AM','011',0,0.16,2.29,0,0,0,87.53,0.51,29.28,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AN','010',3.321,0.44,1.44,0,14.11,176,90.46,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AN','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AO','006',0.678,0.098,0.45,0,2.71,42.4,19.25,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AO','009',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AP','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AP','008',0.048,0.011,0.107,0,2.05,3,14.44,0.25,1.56,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AR','008',0.128,0.023,0.26,0,1.97,8,13.65,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AS','009',0.224,0.052,0.202,0,0.58,14,6.78,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AT','009',0.24,0.09,0.37,0,2.05,15,15.06,2.21,5.15,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AT','021',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AU','009',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AV','008',0.192,0.052,0.85,0,4.6,12,26.77,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('AV','009',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BA','007',1.553,0.26,0.45,0,13.89,110,90.56,10.29,18.3,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BB','010',4.928,0.42,1.06,0,14.25,261.2,89.02,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BC','025',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BG','025',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BK','007',2.12,0.35,0.46,0,14.35,132.5,90.25,12.19,21.6,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BM','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BN','010',3.34,0.46,1.33,0,5.73,82.1,86.1,21.36,13.89,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BR','009',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BT','009',0.208,0.04,0.32,0,1.37,13,12.42,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BX','008',0.144,0.022,0.36,0,2.8,9,25.09,1.04,2.26,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BX','017',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('BZ','014',0,0,0,0,27.11,148,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CA','010',0,0,0,0,0,0,89.83,1.568,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CB','009',0.176,0.023,0.25,43.2,0.71,11,7.85,1.93,1.46,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CC','007',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CD','008',0.064,0.013,0.085,0,2.01,4,12.87,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CE','009',0.112,0.024,0.26,0,0.5,7,4.57,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CF','009',0.317,0.04,0.3,0,1.03,19.8,8.09,2.23,1.73,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CG','009',0.096,0.024,0.147,0,0.42,6,4.77,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CH','010',3.642,0.37,0.87,0,15.25,193,88.47,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CI','008',0.16,0.021,0.22,0,2.26,10,17.75,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CK','008',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CO','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CP','010',4.5,0.053,0.43,0,14.35,238.5,22.8,21.29,12.5,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CP','019',0.656,0.009,0.455,0,1.21,41,10.22,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CP','020',0.42,0.05,0.2,0,1.42,26,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CQ','008',6.1,0.72,0.98,0,6.74,19,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CR','009',0.16,0.035,0.32,43.2,1.55,10,11.71,0.91,1.04,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CS','006',0.144,0.027,0.27,0,4.56,9,40.32,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CT','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CU','008',0,0,0,0,2.01,0,14,0.143,4.52,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CV','014',0.792,0.096,0.45,0,9.37,42,56.05,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CW','014',3.438,0.59,0.66,0,23.69,182.2,94.8,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CW','026',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CX','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CX','020',0,0,0,0,0,0,83.15,0.884,32.23,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CY','006',0.224,0.06,0.29,0,3.05,14,20,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CY','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CY','022',0.224,0.061,0.29,0,3.05,14,20,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CY','023',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('CZ','007',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('DA','008',0.29,0.062,0.7,0,11.6,18.1,78.68,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('EG','009',0.16,0.025,0.23,0,0.84,10,7.59,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('EN','012',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('EN','013',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('GG','022',0.291,0.034,0.415,0,3.33,18.2,21.11,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('GL','021',1.018,0.15,0.4,0,6.23,63.6,41.42,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('GN','014',3.434,0.6,0.82,0,16.22,182,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('GO','008',0.16,0.027,0.198,0,1.76,10,12.13,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('GP','008',0.064,0.008,0.14,0,1.046,4,9.11,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('GR','008',0.112,0.02,0.19,0,2.6,7,19.46,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('GU','026',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('HZ','014',2.821,0.29,0.68,0,26.29,149.5,94.69,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('KL','014',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('KN','014',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('KW','008',0.182,0.034,0.31,0,2.55,11.4,16.93,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('LE','009',0.144,0.03,0.216,0,0.418,9,4.76,1.16,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('LL','008',0.08,0.015,0.145,0,1.046,5,12.6,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('LT','010',5.294,0.46,0.905,0,14.13,280.6,88.81,23.45,15.71,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MA','017',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MD','010',3.99,0.84,0.68,0,19.62,249.4,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MG','008',0.064,0.011,0.16,0,1.67,4,18.29,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MG','017',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MT','007',1.552,0.28,0.19,0,14.83,97,91.33,14.18,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MU','009',0.498,0.085,0.314,0,0.93,31.1,7.54,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MZ','002',0,0.08,0.66,0,16.84,0,90.89,4.75,78.71,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MZ','003',0.208,0,0,0,1.46,13,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MZ','007',1.52,0.21,0.29,0,14.89,95,89.63,8.42,10.41,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('MZ','011',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('NS','010',0,0.64,0.85,0,0,0,93.4,20.09,23.69,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('OK','009',0.32,0.063,0.3,0,1.29,20,9.83,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('ON','021',0.208,0.027,0.14,39.75,1.55,13,11.46,1.16,1.31,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('OR','008',0.096,0.022,0.196,0,1.34,6,17.7,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PC','014',3.889,0.49,1.03,0,23.32,206.1,96.03,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PE','010',0.45,0.4,0.95,0,15.97,0,86.49,20.81,12.31,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PF','008',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PI','008',0.048,0.008,0.12,0,1.26,3,13.54,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PK','009',0.144,0.044,0.34,0,0.96,9,8.4,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PK','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PK','019',0.504,0.1,0.44,0,0.79,31.5,7.12,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PK','023',0.165,0.049,0.17,0,0.63,10.3,4.85,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PL','008',0.128,0.034,0.5,0,3.14,8,34.72,1.01,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PL','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PM','019',0.6,0.073,0.57,0,2.93,37.5,21.35,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PN','014',3.333,0.38,0.71,0,16.22,182,93.5,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PO','010',3.404,0.85,0.7,0,22.31,180.4,93.22,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PP','010',4.094,0.37,1.39,0,14.35,217,89.41,18.14,13.78,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PR','009',0.299,0.043,0.32,0,1.79,18.7,11.98,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PS','008',0.064,0.011,0.12,0,2.09,4,16.29,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PT','006',0.272,0.038,0.41,0,2.93,17,16.71,2.18,1.47,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PU','008',0.128,0.016,0.16,0,2.51,8,12.77,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PX','008',0.096,0.026,0.31,0,2.43,6,35.6,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('PY','008',0.064,0.005,0.26,0,1.09,4,11.17,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('QI','010',2.264,0.41,0.74,0,13.35,120,90.7,13.18,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('QU','008',0.08,0.017,0.2,0,1.88,5,16.2,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RA','027',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RB','008',0.208,0.029,0.15,0,2.76,13,14.25,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RC','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RI','007',12.605,0.11,0.11,0,14.93,75,88.38,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RI','011',22.437,1.68,1.48,0,13.22,133.5,93.87,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RI','015',0,0,0,0,14.7,62,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RS','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RU','028',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('RY','007',2.532,0.37,0.26,0,14.02,147.6,89.05,8.99,11.69,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('S','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('S','026',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SB','010',7.17,0.7,1.8,0,14,380,90,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SC','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SC','018',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SE','010',5.21,0.59,1.05,0,21.37,325.9,90.57,21.18,40.74,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SF','005',2.589,0.64,0.69,0,21.63,161.8,94.38,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SF','010',6.721,0.64,0.068,0,14.31,356.2,93.59,15.45,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SG','007',1.616,0.29,0.35,0,14.6,101,90.8,9.39,9.79,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SH','009',0.288,0,0,0,0.71,18,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SH','019',0.458,0.049,0.56,0,0.92,28.6,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SI','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SI','027',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SP','006',0.176,0.04,0.29,0,4.05,11,30.2,1.12,3.42,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SQ','009',0.194,0.038,0.26,0,0.69,12.1,5.36,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SQ','010',4.63,1.17,0.81,0,22.64,245.4,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SR','007',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SR','009',0,0,0,0,1.3,18.2,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SR','010',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SS','010',3.415,0.63,0.47,0,24,181,95.31,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SU','010',4.302,0.71,0.69,0,23.85,228,94.64,15.64,24.7,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SU','023',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SW','008',0.128,0.024,0.15,0,1.46,8,9.05,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('SX','010',1.149,0.11,1.04,0,10.99,60.9,91.44,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TB','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TE','019',2.4,0.31,1.57,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TF','007',0,0,0,0,15.35,154,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TF','012',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TF','013',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TG','014',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TM','009',0.176,0.03,0.21,0,0.79,11,5.22,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TN','019',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TR','022',0.24,0.084,0.59,0,3.59,15,29.36,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('TT','007',2.088,0.36,0.33,0,14.06,130.5,89.49,10.31,12.11,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('VA','020',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('VB','010',0,0,0,0,15.06,249,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('VE','009',0,0,0,0,0.92,14,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('VT','010',0,0.43,0,0,16.91,0,88.21,24.61,13.84,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('WA','014',2.874,0.35,0.44,0,27.38,152.3,95.93,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('WH','007',1.81,0.36,0.43,0,14.31,113.1,90.43,12.5,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('WM','008',0.098,0.011,0.11,0,1.27,6.1,8.55,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('wp','009',0.138,0.02,0.18,0,0.84,8.6,6.11,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('XB','014',0,0,0,0,15.35,188,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('XX','009',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('YM','006',0.336,0.055,0.82,0,3.76,21,30.4,1.75,0,0,0,NULL,NULL,0,0);
INSERT INTO "cropprods" VALUES('YM','016',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
DROP TABLE IF EXISTS "crpforalabour";
CREATE TABLE crpforalabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "crpforaman";
CREATE TABLE crpforaman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NDF DECIMAL(12,3) NULL DEFAULT 0 , DIGESTI DECIMAL(12,3) NULL DEFAULT 0 , ANENERGY DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD)  );
DROP TABLE IF EXISTS "crpforamanfeed";
CREATE TABLE crpforamanfeed ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "crpforamanfeedperiods";
CREATE TABLE crpforamanfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "crpforamanperiods";
CREATE TABLE crpforamanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD, period_id)  );
DROP TABLE IF EXISTS "crpforamansold";
CREATE TABLE crpforamansold ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD, MARK_COD)  );
DROP TABLE IF EXISTS "crpforamansoldperiods";
CREATE TABLE crpforamansoldperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "crpforamantim";
CREATE TABLE crpforamantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , YIELD DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , ST CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , PORST DECIMAL(12,3) NULL DEFAULT 0 , POROT DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD, NMONTH)  );
DROP TABLE IF EXISTS "crpprodlabour";
CREATE TABLE crpprodlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "crpprodman";
CREATE TABLE crpprodman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NDF DECIMAL(12,3) NULL DEFAULT 0 , DIGESTI DECIMAL(12,3) NULL DEFAULT 0 , ANENERGY DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD)  );
DROP TABLE IF EXISTS "crpprodmanfeed";
CREATE TABLE crpprodmanfeed ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "crpprodmanfeedperiods";
CREATE TABLE crpprodmanfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "crpprodmanperiods";
CREATE TABLE crpprodmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "crpprodmansold";
CREATE TABLE crpprodmansold ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD, MARK_COD)  );
DROP TABLE IF EXISTS "crpprodmansoldperiods";
CREATE TABLE crpprodmansoldperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "crpprodmantim";
CREATE TABLE crpprodmantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , YIELD DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , ST CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , PORST DECIMAL(12,3) NULL DEFAULT 0 , POROT DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD, NMONTH)  );
DROP TABLE IF EXISTS "drainage";
CREATE TABLE drainage ( DRAIN_COD VARCHAR(5) NOT NULL , DRAIN_DES VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LZH VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LSW VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LRU VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LPT VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LNL VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LKO VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LJA VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LIT VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LFR VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LES VARCHAR(30) NULL DEFAULT 'Without description' , DRAIN_LDE VARCHAR(30) NULL DEFAULT 'Without description' , PRIMARY KEY (DRAIN_COD) );
INSERT INTO "drainage" VALUES('DR000','No drainage',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "drainage" VALUES('DR001','Ditches',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "drainage" VALUES('DR002','Sub-surface tiles',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "drainage" VALUES('DR003','Surface furrows',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
DROP TABLE IF EXISTS "farmassets";
CREATE TABLE farmassets ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , PROD_DES VARCHAR(30) NULL DEFAULT 'Without description' , TOTVALUE DECIMAL(11,3) NULL DEFAULT 0 , ANUALDEP DECIMAL(11,3) NULL DEFAULT 0 , PRCHYEAR DECIMAL(11,3) NULL DEFAULT 0 , DISPVALUE DECIMAL(11,3) NULL DEFAULT 0 , ANUMANT DECIMAL(11,3) NULL DEFAULT 0 , NUMOWNED DECIMAL(11,3) NULL DEFAULT 0 , NOWNMALE DECIMAL(11,3) NULL DEFAULT 0 , NOWNFEMALE DECIMAL(11,3) NULL DEFAULT 0 , NOWNBOTH DECIMAL(11,3) NULL DEFAULT 0 , NOWNOTHERS DECIMAL(11,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PROD_COD)  );
DROP TABLE IF EXISTS "feedgroups";
CREATE TABLE feedgroups ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , GROUP_DES VARCHAR(30) NULL DEFAULT 'Without description' , GROUP_TYP CHAR(3) NULL DEFAULT 'ONE' , GROUP_CRIE CHAR(3) NULL DEFAULT 'NON' , NUMANIM DECIMAL(7,0) NULL DEFAULT 0 , INIWEIGHT DECIMAL(7,0) NULL DEFAULT 0 , FINWEIGHT DECIMAL(7,0) NULL DEFAULT 0 , FROMDAYS DECIMAL(7,0) NULL DEFAULT 0 , TODAYS DECIMAL(7,0) NULL DEFAULT 0 , FROMPARTOS DECIMAL(7,0) NULL DEFAULT 0 , TOPARTOS DECIMAL(7,0) NULL DEFAULT 0 , FROMMONTHS DECIMAL(7,0) NULL DEFAULT 0 , TOMONTHS DECIMAL(7,0) NULL DEFAULT 0 , FROMKILOS DECIMAL(7,0) NULL DEFAULT 0 , TOKILOS DECIMAL(7,0) NULL DEFAULT 0 , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "feedgroupslabour";
CREATE TABLE feedgroupslabour ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, PERS_COD)  );
DROP TABLE IF EXISTS "ferttype";
CREATE TABLE ferttype ( FERTYP_COD VARCHAR(5) NOT NULL , FERTYP_DES VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LZH VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LSW VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LRU VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LPT VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LNL VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LKO VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LJA VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LIT VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LFR VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LES VARCHAR(30) NULL DEFAULT 'Without description' , FERTYP_LDE VARCHAR(30) NULL DEFAULT 'Without description' , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , MANURE CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (FERTYP_COD) );
INSERT INTO "ferttype" VALUES('00001','Compound 15:15:15',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,15,15,15,0,'N');
INSERT INTO "ferttype" VALUES('00002','Compound D',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,8,7,7,0,'N');
INSERT INTO "ferttype" VALUES('00003','Zim manure',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.1,0.2,2,30,'Y');
INSERT INTO "ferttype" VALUES('FE001','Ammonium nitrate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,34,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE002','Ammonium sulfate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,21,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE003','Ammonium-nitrate-sulfate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,30,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE004','Anhydrous ammonia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,82,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE005','Urea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,45,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE006','Diammnoium phosphate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,18,20.102,0,0,'N');
INSERT INTO "ferttype" VALUES('FE007','Monoammonium phosphate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,11,20.976,0,0,'N');
INSERT INTO "ferttype" VALUES('FE008','Calcium nitrate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,15,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE009','Aqua ammonia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,20,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE010','Urea ammonium nitrate solution',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,32,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE011','Calcium ammonium nitrate solut',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,25,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE012','Ammonium polyphosphate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,10,14.858,0,0,'N');
INSERT INTO "ferttype" VALUES('FE013','Single superphosphate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,8.085,0,0,'N');
INSERT INTO "ferttype" VALUES('FE014','Triple superphosphate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,20.102,0,0,'N');
INSERT INTO "ferttype" VALUES('FE015','Liquid phosphoric acid',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,32.8,0,0,'N');
INSERT INTO "ferttype" VALUES('FE016','Potassium chloride',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,49.8,0,'N');
INSERT INTO "ferttype" VALUES('FE017','Potassium nitrate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,13,0,36.52,0,'N');
INSERT INTO "ferttype" VALUES('FE018','Potassium sulfate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,43.16,0,'N');
INSERT INTO "ferttype" VALUES('FE019','Urea super granules',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,40,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE020','Dolomitic limestone',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE021','Rock phosphate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,13.547,0,0,'N');
INSERT INTO "ferttype" VALUES('FE022','Calcitic limestone',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE024','Rhizobium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE026','Calcium hydroxide',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE20','Agro sulfate',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'N');
INSERT INTO "ferttype" VALUES('FE21','Potash',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,51.46,0,'N');
INSERT INTO "ferttype" VALUES('FE22','Agro Urea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,21,0,0,0,'N');
INSERT INTO "ferttype" VALUES('RE001','Crop residue',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'N');
INSERT INTO "ferttype" VALUES('RE002','Green fallow',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'N');
INSERT INTO "ferttype" VALUES('RE003','Green Manure',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.01,0.365,0.568,35.2,'Y');
INSERT INTO "ferttype" VALUES('RE004','Barnyard Manure (Cattle)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.5,0.656,0.996,60,'Y');
INSERT INTO "ferttype" VALUES('RE005','Barnyard Manure (Sheep)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.6,0.131,0.166,18,'Y');
INSERT INTO "ferttype" VALUES('RE006','Barnyard Manure (Goat)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.55,0.11,0.1,18,'Y');
INSERT INTO "ferttype" VALUES('RE007','Barnyard Manure (Pig)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.9,0.27,0.58,20,'Y');
INSERT INTO "ferttype" VALUES('RE008','Barnyard Manure (Buffalo)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.5,0.66,1,60,'Y');
INSERT INTO "ferttype" VALUES('RE009','Poultry litter',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,3,2.185,1.66,37,'N');
INSERT INTO "ferttype" VALUES('RE010','Liquid Manure',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,'Y');
DROP TABLE IF EXISTS "forages";
CREATE TABLE forages ( FORA_COD CHAR(3) NOT NULL , FORA_DES VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LZH VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LSW VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LRU VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LPT VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LNL VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LKO VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LJA VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LIT VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LFR VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LES VARCHAR(60) NULL DEFAULT 'Without description' , FORA_LDE VARCHAR(60) NULL DEFAULT 'Without description' , PRIMARY KEY (FORA_COD) );
INSERT INTO "forages" VALUES('001','Leaves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hojas',NULL);
INSERT INTO "forages" VALUES('002','Stems',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Stems',NULL);
INSERT INTO "forages" VALUES('004','Grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Zacate',NULL);
INSERT INTO "forages" VALUES('006','Silage',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Silos',NULL);
INSERT INTO "forages" VALUES('007','Pods',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pods',NULL);
INSERT INTO "forages" VALUES('010','Stover',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Stover',NULL);
INSERT INTO "forages" VALUES('011','Other',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Otros',NULL);
INSERT INTO "forages" VALUES('018','Other forage',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Otros',NULL);
INSERT INTO "forages" VALUES('024','Straw',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Straw',NULL);
INSERT INTO "forages" VALUES('025','Shellings',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Shellings',NULL);
INSERT INTO "forages" VALUES('026','Residues',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Residuos',NULL);
INSERT INTO "forages" VALUES('027','Vines',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Vines',NULL);
INSERT INTO "forages" VALUES('028','Hay',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Hay',NULL);
INSERT INTO "forages" VALUES('029','Thinings',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Thinings',NULL);
INSERT INTO "forages" VALUES('030','Leafs litter',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Leafs litter',NULL);
INSERT INTO "forages" VALUES('031','Whole plant',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Planta completa',NULL);
INSERT INTO "forages" VALUES('032','Root',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Raiz',NULL);
INSERT INTO "forages" VALUES('033','Pseudostems',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Pseudostems',NULL);
DROP TABLE IF EXISTS "grassforalabour";
CREATE TABLE grassforalabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "grassforaman";
CREATE TABLE grassforaman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , ENERGY DECIMAL(12,3) NULL , PROTEIN DECIMAL(12,3) NULL , NSEA1 DECIMAL(12,3) NULL , NSEA2 DECIMAL(12,3) NULL , NSEA3 DECIMAL(12,3) NULL , NSEA4 DECIMAL(12,3) NULL , PSEA1 DECIMAL(12,3) NULL , PSEA2 DECIMAL(12,3) NULL , PSEA3 DECIMAL(12,3) NULL , PSEA4 DECIMAL(12,3) NULL , KSEA1 DECIMAL(12,3) NULL , KSEA2 DECIMAL(12,3) NULL , KSEA3 DECIMAL(12,3) NULL , KSEA4 DECIMAL(12,3) NULL , CSEA1 DECIMAL(12,3) NULL , CSEA2 DECIMAL(12,3) NULL , CSEA3 DECIMAL(12,3) NULL , CSEA4 DECIMAL(12,3) NULL , DMSEA1 DECIMAL(12,3) NULL , DMSEA2 DECIMAL(12,3) NULL , DMSEA3 DECIMAL(12,3) NULL , DMSEA4 DECIMAL(12,3) NULL , DRYMATTER DECIMAL(12,3) NULL , CPROTEIN DECIMAL(12,3) NULL , NDF DECIMAL(12,3) NULL , DIGESTI DECIMAL(12,3) NULL , ANENERGY DECIMAL(12,3) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD)  );
DROP TABLE IF EXISTS "grassforamanfeed";
CREATE TABLE grassforamanfeed ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "grassforamanfeedperiods";
CREATE TABLE grassforamanfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "grassforamanperiods";
CREATE TABLE grassforamanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD, period_id)  );
DROP TABLE IF EXISTS "grassforamansold";
CREATE TABLE grassforamansold ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD, MARK_COD)  );
DROP TABLE IF EXISTS "grassforamansoldperiods";
CREATE TABLE grassforamansoldperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "grassforamantim";
CREATE TABLE grassforamantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , YIELD DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , ST CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , PORST DECIMAL(12,3) NULL DEFAULT 0 , POROT DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD, NMONTH)  );
DROP TABLE IF EXISTS "grasslabour";
CREATE TABLE grasslabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "grassman";
CREATE TABLE grassman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD)  );
DROP TABLE IF EXISTS "grassmanfert";
CREATE TABLE grassmanfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, NMONTH, FERTYP_COD)  );
DROP TABLE IF EXISTS "grassmanheap";
CREATE TABLE grassmanheap ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , HEAP_COD CHAR(3) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , QTYAPP DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, NMONTH, HEAP_COD)  );
DROP TABLE IF EXISTS "grassmanlabour";
CREATE TABLE grassmanlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PERS_COD)  );
DROP TABLE IF EXISTS "grassmanperiods";
CREATE TABLE grassmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, period_id)  );
DROP TABLE IF EXISTS "grassmanprchfert";
CREATE TABLE grassmanprchfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FERTYP_COD)  );
DROP TABLE IF EXISTS "grassmanprchfertperiods";
CREATE TABLE grassmanprchfertperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FERTYP_COD, period_id)  );
DROP TABLE IF EXISTS "grassmantim";
CREATE TABLE grassmantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PLANDENS DECIMAL(12,3) NULL DEFAULT 0 , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, NMONTH)  );
DROP TABLE IF EXISTS "grassprodlabour";
CREATE TABLE grassprodlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "grassprodman";
CREATE TABLE grassprodman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NSEA1 DECIMAL(12,3) NULL DEFAULT 0 , NSEA2 DECIMAL(12,3) NULL DEFAULT 0 , NSEA3 DECIMAL(12,3) NULL DEFAULT 0 , NSEA4 DECIMAL(12,3) NULL DEFAULT 0 , PSEA1 DECIMAL(12,3) NULL DEFAULT 0 , PSEA2 DECIMAL(12,3) NULL DEFAULT 0 , PSEA3 DECIMAL(12,3) NULL DEFAULT 0 , PSEA4 DECIMAL(12,3) NULL DEFAULT 0 , KSEA1 DECIMAL(12,3) NULL DEFAULT 0 , KSEA2 DECIMAL(12,3) NULL DEFAULT 0 , KSEA3 DECIMAL(12,3) NULL DEFAULT 0 , KSEA4 DECIMAL(12,3) NULL DEFAULT 0 , CSEA1 DECIMAL(12,3) NULL DEFAULT 0 , CSEA2 DECIMAL(12,3) NULL DEFAULT 0 , CSEA3 DECIMAL(12,3) NULL DEFAULT 0 , CSEA4 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA1 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA2 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA3 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA4 DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NDF DECIMAL(12,3) NULL DEFAULT 0 , DIGESTI DECIMAL(12,3) NULL DEFAULT 0 , ANENERGY DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD)  );
DROP TABLE IF EXISTS "grassprodmanfeed";
CREATE TABLE grassprodmanfeed ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "grassprodmanfeedperiods";
CREATE TABLE grassprodmanfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "grassprodmanperiods";
CREATE TABLE grassprodmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "grassprodmansold";
CREATE TABLE grassprodmansold ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD, MARK_COD)  );
DROP TABLE IF EXISTS "grassprodmansoldperiods";
CREATE TABLE grassprodmansoldperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "grassprodmantim";
CREATE TABLE grassprodmantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , YIELD DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , ST CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , POROT DECIMAL(12,3) NULL DEFAULT 0 , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , PORST DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD, NMONTH)  );
DROP TABLE IF EXISTS "grazingman";
CREATE TABLE grazingman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , MLIVE_COD CHAR(3) NULL , MPROD_COD CHAR(3) NULL , NSEA1 DECIMAL(12,3) NULL DEFAULT 0 , NSEA2 DECIMAL(12,3) NULL DEFAULT 0 , NSEA3 DECIMAL(12,3) NULL DEFAULT 0 , NSEA4 DECIMAL(12,3) NULL DEFAULT 0 , PSEA1 DECIMAL(12,3) NULL DEFAULT 0 , PSEA2 DECIMAL(12,3) NULL DEFAULT 0 , PSEA3 DECIMAL(12,3) NULL DEFAULT 0 , PSEA4 DECIMAL(12,3) NULL DEFAULT 0 , KSEA1 DECIMAL(12,3) NULL DEFAULT 0 , KSEA2 DECIMAL(12,3) NULL DEFAULT 0 , KSEA3 DECIMAL(12,3) NULL DEFAULT 0 , KSEA4 DECIMAL(12,3) NULL DEFAULT 0 , CSEA1 DECIMAL(12,3) NULL DEFAULT 0 , CSEA2 DECIMAL(12,3) NULL DEFAULT 0 , CSEA3 DECIMAL(12,3) NULL DEFAULT 0 , CSEA4 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA1 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA2 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA3 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA4 DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "grazingmanperiods";
CREATE TABLE grazingmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , rot DECIMAL(12,3) NULL DEFAULT 0 , ncd DECIMAL(12,3) NULL DEFAULT 0 , pia DECIMAL(12,3) NULL DEFAULT 0 , mnr DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "grpcrpforacons";
CREATE TABLE grpcrpforacons ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, CROP_COD, FORA_COD, period_id)  );
DROP TABLE IF EXISTS "grpcrpforaprod";
CREATE TABLE grpcrpforaprod ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , FS DECIMAL(12,3) NULL , LF DECIMAL(12,3) NULL , HC DECIMAL(12,3) NULL , LE DECIMAL(12,3) NULL , OT DECIMAL(12,3) NULL , PRIMARY KEY (SYS_COD, CROP_COD, FORA_COD)  );
DROP TABLE IF EXISTS "grpcrpforasold";
CREATE TABLE grpcrpforasold ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, CROP_COD, FORA_COD, MARK_COD)  );
DROP TABLE IF EXISTS "grpcrpforasoldperiods";
CREATE TABLE grpcrpforasoldperiods ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , qty DECIMAL(12,3) NULL , pri DECIMAL(12,3) NULL , PRIMARY KEY (SYS_COD, CROP_COD, FORA_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "grpcrpprodscons";
CREATE TABLE grpcrpprodscons ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , qty DECIMAL(12,3) NULL , pri DECIMAL(12,3) NULL , PRIMARY KEY (SYS_COD, CROP_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "grpcrpprodsprod";
CREATE TABLE grpcrpprodsprod ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , FS DECIMAL(12,3) NULL DEFAULT 0 , LF DECIMAL(12,3) NULL DEFAULT 0 , HC DECIMAL(12,3) NULL DEFAULT 0 , LE DECIMAL(12,3) NULL DEFAULT 0 , OT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, CROP_COD, PROD_COD)  );
DROP TABLE IF EXISTS "grpcrpprodssold";
CREATE TABLE grpcrpprodssold ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, CROP_COD, PROD_COD, MARK_COD)  );
DROP TABLE IF EXISTS "grpcrpprodssoldperiods";
CREATE TABLE grpcrpprodssoldperiods ( SYS_COD VARCHAR(27) NOT NULL , CROP_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , qty DECIMAL(12,3) NULL , pri DECIMAL(12,3) NULL , PRIMARY KEY (SYS_COD, CROP_COD, PROD_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "hcompprods";
CREATE TABLE hcompprods ( PROD_COD VARCHAR(5) NOT NULL , PROD_TYP VARCHAR(20) NULL , PROD_DES VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LZH VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LSW VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LRU VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LPT VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LNL VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LKO VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LJA VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LIT VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LFR VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LES VARCHAR(85) NULL DEFAULT 'Without description' , PROD_LDE VARCHAR(85) NULL DEFAULT 'Without description' , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , ENERGY DECIMAL(7,3) NULL DEFAULT 0 , PROTEIN DECIMAL(7,3) NULL DEFAULT 0 , PRIMARY KEY (PROD_COD) );
INSERT INTO "hcompprods" VALUES('0.224','Vegetables','Asparagus (Asparagus officinalis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.224,0.052,0.202,0,0.85,22);
INSERT INTO "hcompprods" VALUES('00001','Cereals','Wheat, whole meal or flour',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.23,0.43,0.58,0,14.18,137);
INSERT INTO "hcompprods" VALUES('00002','Cereals','Wheat flour, medium extraction',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.63,117);
INSERT INTO "hcompprods" VALUES('00003','Cereals','Wheat flour, white, low extraction',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.23,109);
INSERT INTO "hcompprods" VALUES('00004','Cereals','Rice husked or brown (only hulls removed)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.92,75);
INSERT INTO "hcompprods" VALUES('00005','Cereals','Rice home-pounded, undermilled, parboiled',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.52,67.9);
INSERT INTO "hcompprods" VALUES('00006','Cereals','Rice milled, white',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.05,67);
INSERT INTO "hcompprods" VALUES('00007','Cereals','Rye, whole meal, dark flour',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.16,0.34,0.34,0,13.56,140.3);
INSERT INTO "hcompprods" VALUES('00008','Cereals','Rye, flour, medium extraction',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.81,93.9);
INSERT INTO "hcompprods" VALUES('00009','Cereals','Rye, flour, light, low extraction',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.36,83.9);
INSERT INTO "hcompprods" VALUES('00010','Cereals','Barley, whole seed, except hulls, and groats',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.55,0.28,0.6,0,14.81,124);
INSERT INTO "hcompprods" VALUES('00011','Cereals','Barley, pearled, light or dark',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.73,99.1);
INSERT INTO "hcompprods" VALUES('00012','Cereals','Oatmeal, rolled oats',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,16.28,168.9);
INSERT INTO "hcompprods" VALUES('00013','Cereals','Maize, grain or whole meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.68,0.41,0.48,0,15.15,81.2);
INSERT INTO "hcompprods" VALUES('00014','Cereals','Maize, meal, coarse, bolted',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.05,93);
INSERT INTO "hcompprods" VALUES('00015','Cereals','Maize, meal, fine, bolted and degerminated',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.17,84);
INSERT INTO "hcompprods" VALUES('00016','Cereals','Buckwheat, hulled, groats, dark flour',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.02,126.2);
INSERT INTO "hcompprods" VALUES('00017','Cereals','Buckwheat, light flour',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.38,64);
INSERT INTO "hcompprods" VALUES('00018','Cereals','Quinoa, whole seeds',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.26,0.41,0.74,0,15.65,131);
INSERT INTO "hcompprods" VALUES('00019','Cereals','Quinoa, flour',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.25,110);
INSERT INTO "hcompprods" VALUES('00020','Cereals','Sorghum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.45,0.55,0.38,0,14.18,113);
INSERT INTO "hcompprods" VALUES('00021','Cereals','Millet, ragi (Eleusine coracana)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,13.88,65);
INSERT INTO "hcompprods" VALUES('00022','Cereals','Millet, foxtail (Setaria italica)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.34,98);
INSERT INTO "hcompprods" VALUES('00023','Cereals','Millet, proso (Panicum miliaceum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.13,118);
INSERT INTO "hcompprods" VALUES('00024','Cereals','Millet, pearl or bajra (Pennisetum glaucum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.55,117);
INSERT INTO "hcompprods" VALUES('00025','Cereals','Millet, unspecified millets',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.92,0.6,0.54,0,15.82,106.2);
INSERT INTO "hcompprods" VALUES('00026','Cereals','Hominy, samp, maize grits',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.51,85.3);
INSERT INTO "hcompprods" VALUES('00027','Cereals','Wheat pastas, macaroni, spaghetti',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.94,74.6);
INSERT INTO "hcompprods" VALUES('00028','Starches','Potato (Solanum tuberosum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.44,0.13,0.69,0,2.43,25.7);
INSERT INTO "hcompprods" VALUES('00029','Starches','Potato flour',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.94,69);
INSERT INTO "hcompprods" VALUES('00030','Starches','Sweet potato (Ipomoea batatas)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.48,0.08,0.73,0,4.06,11);
INSERT INTO "hcompprods" VALUES('00031','Starches','Cassava fresh (Manihot spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.42,0.05,0.43,0,6.73,13.6);
INSERT INTO "hcompprods" VALUES('00032','Starches','Cassava meal and flour',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.14,15);
INSERT INTO "hcompprods" VALUES('00033','Starches','Yautia (Xanthosoma spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.11,14.6);
INSERT INTO "hcompprods" VALUES('00034','Starches','Taro (Colocasia spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.24,0.084,0.59,0,4.69,15);
INSERT INTO "hcompprods" VALUES('00035','Starches','Yam (Dioscorea spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.34,0.055,0.82,0,4.94,15.3);
INSERT INTO "hcompprods" VALUES('00036','Starches','Arracacha (Arracacia xanthorrhiza)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.5,17);
INSERT INTO "hcompprods" VALUES('00037','Starches','Starches (arrowroot, constarch, sago, tapioca, etc.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.15,5);
INSERT INTO "hcompprods" VALUES('00038','Pulses','Ground nuts, peanuts, in shell',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,3.72,0.6,0.82,0,16.23,182);
INSERT INTO "hcompprods" VALUES('00039','Pulses','Ground nuts, peanuts, shelled',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,23.74,258);
INSERT INTO "hcompprods" VALUES('00040','Pulses','Soybean, whole weds, dry',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,7.17,0,0,0,14.02,380);
INSERT INTO "hcompprods" VALUES('00041','Pulses','Soybean, flour, full fat (seed coat removed)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.94,390);
INSERT INTO "hcompprods" VALUES('00042','Pulses','Soybean, flour, low fat; grits, flakes (partially defatted)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,10.92,460);
INSERT INTO "hcompprods" VALUES('00043','Pulses','Soybean, curd, tofu',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.43,63);
INSERT INTO "hcompprods" VALUES('00044','Pulses','Soybean, fermented beans, Japanese natto.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.4,170);
INSERT INTO "hcompprods" VALUES('00045','Pulses','Soybean, fermented beans, Chinese tsiang',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.4,170);
INSERT INTO "hcompprods" VALUES('00046','Pulses','Soybean milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.55,32);
INSERT INTO "hcompprods" VALUES('00047','Pulses','Soybean, paste, miso (made with small amounts of rice or oth',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.77,110);
INSERT INTO "hcompprods" VALUES('00048','Pulses','Soybean, shouyu sauce',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.34,55);
INSERT INTO "hcompprods" VALUES('00049','Pulses','Beans, grams, peas, chickpeas, fava, cowpeas, lentils',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.43,222);
INSERT INTO "hcompprods" VALUES('00050','Pulses','Coconut old, ripe, in shell',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,6.1,0.72,0.98,0,6.74,19);
INSERT INTO "hcompprods" VALUES('00051','Pulses','Coconut young, under-ripe, in shell',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.55,14);
INSERT INTO "hcompprods" VALUES('00053','Pulses','Chestnut fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.79,0.096,0.45,0,8.24,29.6);
INSERT INTO "hcompprods" VALUES('00054','Pulses','Chestnut dry',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.3,61.5);
INSERT INTO "hcompprods" VALUES('00055','Pulses','Almonds, Brazil nuts, filberts, pecans, pistachios, walnuts,',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,25.52,160);
INSERT INTO "hcompprods" VALUES('00056','Pulses','Almonds, Brazil nuts, filberts, pecans, pistachios, walnuts,',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,25.52,160);
INSERT INTO "hcompprods" VALUES('00057','Pulses','Squash, watermelon, sunflower seeds',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,4.63,1.17,0.81,0,11,145);
INSERT INTO "hcompprods" VALUES('00058','Pulses','Sesame, whole or decorticated',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,3,0.61,0.68,0,23.97,177.3);
INSERT INTO "hcompprods" VALUES('00059','Vegetables','Tomatoes (Lycopersicon esculentum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.176,0.03,0.21,39.6,0.88,11);
INSERT INTO "hcompprods" VALUES('00060','Vegetables','Beets, common red (Beta vulgaris)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.208,0.04,0.32,0,1.8,16.1);
INSERT INTO "hcompprods" VALUES('00061','Vegetables','Artichokes (Helianthus tuberosus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.24,0.09,0.37,0,2.9,22);
INSERT INTO "hcompprods" VALUES('00062','Vegetables','Leeks and green onions (Allium porrum, A. odorum, A. cepa)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.55,15);
INSERT INTO "hcompprods" VALUES('00063','Vegetables','Oca (Oxalis tuberosa)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.34,19);
INSERT INTO "hcompprods" VALUES('00064','Vegetables','Onions, mature (Allium cepa)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.208,0.027,0.14,39.75,1.76,9.2);
INSERT INTO "hcompprods" VALUES('00065','Vegetables','Parsnips (Pastinaca sativa)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.14,12);
INSERT INTO "hcompprods" VALUES('00066','Vegetables','Radishes, common, small (Raphanus sativus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.096,0.02,0.23,0,0.66,6.8);
INSERT INTO "hcompprods" VALUES('00067','Vegetables','Radishes, large rooted (daikon) (R. sativus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.76,6);
INSERT INTO "hcompprods" VALUES('00068','Vegetables','Salsify and black salisfy (Tragopogon porrifolius, Scorzoner',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.43,33);
INSERT INTO "hcompprods" VALUES('00069','Vegetables','Turnips and rutabagas or swedes (Brassica rapa, B. campestri',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,0,0,44,1.34,10.5);
INSERT INTO "hcompprods" VALUES('00070','Vegetables','Asparagus (Asparagus officinalis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.59,14);
INSERT INTO "hcompprods" VALUES('00071','Vegetables','Beans, broad or fava (View faba)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,4.93,0.42,1.06,0,14.25,261.2);
INSERT INTO "hcompprods" VALUES('00072','Vegetables','Beans, lima (Phaseolus lunatus macrocarpus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.73,68.4);
INSERT INTO "hcompprods" VALUES('00073','Vegetables','Beans, snap or string, young in pods (haricots) (P. vulgaris',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.3,18.2);
INSERT INTO "hcompprods" VALUES('00074','Vegetables','Beet greens (Beta vulgaris)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.92,22);
INSERT INTO "hcompprods" VALUES('00075','Vegetables','Broccoli (Brassica oleracea botrytis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.4,0,0,0,1.41,28.2);
INSERT INTO "hcompprods" VALUES('00076','Vegetables','Brussels sprouts (B. oleracea gemmifera)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.79,33.8);
INSERT INTO "hcompprods" VALUES('00077','Vegetables','Cabbage, Chinese (B. chinensis and B. pekinensis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.61,13.5);
INSERT INTO "hcompprods" VALUES('00078','Vegetables','Cabbage, common, headed (B. oleracea capitata)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.176,0,0,43.2,1.02,14.4);
INSERT INTO "hcompprods" VALUES('00079','Vegetables','Carrots (Daucus carota)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.16,0.035,0.32,43.2,1.73,9.3);
INSERT INTO "hcompprods" VALUES('00080','Vegetables','Chard, silver beet (Beta vulgaris)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.81,18);
INSERT INTO "hcompprods" VALUES('00081','Vegetables','Chicory and endive (Cichorium intybus, C. endivia)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.8,17);
INSERT INTO "hcompprods" VALUES('00082','Vegetables','Dandelion greens (Leontodon taraxacum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.89,27);
INSERT INTO "hcompprods" VALUES('00083','Vegetables','Ipomoea greens (Ipomoea spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.17,24);
INSERT INTO "hcompprods" VALUES('00084','Vegetables','Kale (Brassica oleracea acephala)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.08,33);
INSERT INTO "hcompprods" VALUES('00085','Vegetables','Lettuce (Lactuca sativa)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.144,0.03,0.216,0,0.6,12.2);
INSERT INTO "hcompprods" VALUES('00086','Vegetables','Mustard greens (Brassica juncea, B. lepidum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.5,0,0,39,1.09,27);
INSERT INTO "hcompprods" VALUES('00087','Vegetables','Peas, fresh (Pisum sativum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.86,0.4,0.95,0,3.39,54.2);
INSERT INTO "hcompprods" VALUES('00088','Vegetables','Peas, edible-podded (P. sativum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.76,28);
INSERT INTO "hcompprods" VALUES('00089','Vegetables','Peppers (Capsicum annuum), green',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.138,0.02,0.18,0,0.84,8.6);
INSERT INTO "hcompprods" VALUES('00090','Vegetables','Peppers, red',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.11,9.9);
INSERT INTO "hcompprods" VALUES('00091','Vegetables','Peppers, unspecified',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.6,0,0,39,0.97,9.25);
INSERT INTO "hcompprods" VALUES('00092','Vegetables','Spinach (Spinaicia oleracea)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.46,0.049,0.56,0,0.97,28.6);
INSERT INTO "hcompprods" VALUES('00093','Vegetables','Turnip and rutabaga tops (Brassica rapa, B. campestris)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.3,0,0,43.7,0.96,23);
INSERT INTO "hcompprods" VALUES('00094','Vegetables','Artichokes, French or globe (Cynara scolymus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.96,32.7);
INSERT INTO "hcompprods" VALUES('00095','Vegetables','Cauliflower (Brassica oleracea botrytis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.208,0.04,0.3,0,1.03,19.8);
INSERT INTO "hcompprods" VALUES('00096','Vegetables','Celery (Celeri graveolens)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.112,0.024,0.26,0,0.57,6.9);
INSERT INTO "hcompprods" VALUES('00097','Vegetables','Cucumbers (Cucumis sativus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.096,0.024,0.147,0,0.65,6.5);
INSERT INTO "hcompprods" VALUES('00098','Vegetables','Eggplant (Solanum melongena)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.16,0.025,0.23,0,1.02,10.1);
INSERT INTO "hcompprods" VALUES('00099','Vegetables','Kohlrabi (Brassica oleracea gongylodes)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.13,17);
INSERT INTO "hcompprods" VALUES('00100','Vegetables','Maize (corn), green (Zea mays)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.208,0,0,0,1.46,13);
INSERT INTO "hcompprods" VALUES('00101','Vegetables','Pumpkins, squashes and gourds, mature (Cucurbitaceae, mainly',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.144,0.044,0.34,0,1.11,10);
INSERT INTO "hcompprods" VALUES('00102','Vegetables','Pumpkins, squashes and gourds, immature (Cucurbitaceae, main',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.54,7);
INSERT INTO "hcompprods" VALUES('00103','Vegetables','Vegetables, unspecified, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.92,14);
INSERT INTO "hcompprods" VALUES('00104','Fruits','Bananas (Musa sapientum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.12,0.03,0.45,0,3.71,10.9);
INSERT INTO "hcompprods" VALUES('00105','Fruits','Plantains (Musa paradisiaca)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.07,0.01,0.34,0,5.1,13);
INSERT INTO "hcompprods" VALUES('00106','Fruits','Grapefruit (Citrus grandis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.064,0.008,0.14,0,1.34,6.3);
INSERT INTO "hcompprods" VALUES('00107','Fruits','Lemons (C. limonia)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.08,0.015,0.145,0,0.84,12);
INSERT INTO "hcompprods" VALUES('00108','Fruits','Limes (C. aurantifolia)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.048,0.014,0.12,0,0.96,4.2);
INSERT INTO "hcompprods" VALUES('00109','Fruits','Oranges (C. sinensis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.096,0.022,0.196,0,1.97,9.4);
INSERT INTO "hcompprods" VALUES('00110','Fruits','Oranges, Mandarin type (C. nobilis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.84,6.3);
INSERT INTO "hcompprods" VALUES('00111','Fruits','Apples (Malus sylvestris)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.048,0.011,0.107,0,2.18,2.6);
INSERT INTO "hcompprods" VALUES('00112','Fruits','Apricots (Prunus armeniaca)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.128,0.023,0.26,0,2.01,14);
INSERT INTO "hcompprods" VALUES('00113','Fruits','Avocados (Persea spp.), all types.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.192,0.052,0.85,0,6.7,20);
INSERT INTO "hcompprods" VALUES('00114','Fruits','Fruits, low fat types',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.76,9);
INSERT INTO "hcompprods" VALUES('00115','Fruits','Fruits, high fat types',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.57,13);
INSERT INTO "hcompprods" VALUES('00116','Fruits','Blackberries (Rubus spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.81,13.9);
INSERT INTO "hcompprods" VALUES('00117','Fruits','Blueberries (Vaccinium spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.4,7.4);
INSERT INTO "hcompprods" VALUES('00118','Fruits','Cranberries (Oxycoccus macrocarpus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.064,0.013,0.085,0,1.94,3.9);
INSERT INTO "hcompprods" VALUES('00119','Fruits','Currants (Ribes spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.34,14);
INSERT INTO "hcompprods" VALUES('00120','Fruits','Gooseberries (Ribes spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.16,0.027,0.198,0,1.84,8.8);
INSERT INTO "hcompprods" VALUES('00121','Fruits','Raspberries (Rubus spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.208,0.029,0.15,0,2.2,12);
INSERT INTO "hcompprods" VALUES('00122','Fruits','Strawberries (Fragaria spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.128,0.024,0.15,0,1.36,6.7);
INSERT INTO "hcompprods" VALUES('00123','Fruits','All, unspecified',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.5,6);
INSERT INTO "hcompprods" VALUES('00124','Fruits','Breadfruit, jackfruit, monkey fruit (Artocarpus spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.93,14.7);
INSERT INTO "hcompprods" VALUES('00125','Fruits','Cherimoya, custard apple, sweetsop (Annona cherimola, A. ret',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.52,18.55);
INSERT INTO "hcompprods" VALUES('00126','Fruits','Cherries (Prunus spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.16,0.021,0.22,0,2.63,10.6);
INSERT INTO "hcompprods" VALUES('00127','Fruits','Figs (Ficus carica)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.1,7.5);
INSERT INTO "hcompprods" VALUES('00128','Fruits','Grapes (Vitis spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.112,0.02,0.19,0,2.88,7.2);
INSERT INTO "hcompprods" VALUES('00129','Fruits','Guavas (Psidium spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.13,8.2);
INSERT INTO "hcompprods" VALUES('00130','Fruits','Mangoes (Mangifera indica)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.064,0.011,0.16,0,2.72,5.1);
INSERT INTO "hcompprods" VALUES('00131','Fruits','Muskmelons (Cucumis melo)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.59,4);
INSERT INTO "hcompprods" VALUES('00132','Fruits','Watermelons (Citrullus vulgaris)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.097,0.011,0.11,0,1.27,6.1);
INSERT INTO "hcompprods" VALUES('00133','Fruits','Papayas (Carica papaya)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.064,0.005,0.26,0,1.63,6.1);
INSERT INTO "hcompprods" VALUES('00134','Fruits','Passion fruit or granadillo (Passiflora spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.96,2);
INSERT INTO "hcompprods" VALUES('00135','Fruits','Peaches (Amygdalus persica)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.65,9.1);
INSERT INTO "hcompprods" VALUES('00136','Fruits','Pears (Pyrus communis)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.064,0.011,0.12,0,2.42,3.8);
INSERT INTO "hcompprods" VALUES('00137','Fruits','Persimmons, Japanese (Diospyros kaki)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.096,0.026,0.31,0,2.93,5.8);
INSERT INTO "hcompprods" VALUES('00138','Fruits','Pineapples (Ananas sativus)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.048,0.008,0.12,0,2.02,5.4);
INSERT INTO "hcompprods" VALUES('00139','Fruits','Plums (Prunus spp.)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.128,0.016,0.16,0,1.92,7);
INSERT INTO "hcompprods" VALUES('00140','Fruits','Pomegranates (Punica granatum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.85,9.5);
INSERT INTO "hcompprods" VALUES('00141','Fruits','Quinces (Cydonia oblonga)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.08,0.017,0.2,0,2.38,4);
INSERT INTO "hcompprods" VALUES('00142','Fruits','Sapodilla or sapote (Achras sapota)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.47,4.4);
INSERT INTO "hcompprods" VALUES('00143','Fruits','Sapote or marmalade plum (Calocarpum mammosum)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.61,21.2);
INSERT INTO "hcompprods" VALUES('00144','Fruits','Soursop (Annona muricata)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.76,10);
INSERT INTO "hcompprods" VALUES('00145','Fruits','Fruits, unspecified, temperate areas',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.92,5);
INSERT INTO "hcompprods" VALUES('00146','Fruits','Fruits, unspecified, subtropical areas',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.09,6);
INSERT INTO "hcompprods" VALUES('00147','Fruits','Fruits, unspecified, tropical areas',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.72,5);
INSERT INTO "hcompprods" VALUES('00149','Fruits','Figs, dates, prunes, raisins, jujubes. Dried',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,10.42,28);
INSERT INTO "hcompprods" VALUES('00150','Fruits','Apples, apricots, peaches, pears. Dried',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,11.76,30);
INSERT INTO "hcompprods" VALUES('00151','Fruits','Fruits, dried, unspecified',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,11.21,30);
INSERT INTO "hcompprods" VALUES('00152','Fruits','Olives, processed (green)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.09,10.3);
INSERT INTO "hcompprods" VALUES('00153','Fruits','Olives, greek process (ripe)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,8.2,9.05);
INSERT INTO "hcompprods" VALUES('00154','Meat','Beef, thin carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.69,153);
INSERT INTO "hcompprods" VALUES('00155','Meat','Beef, medium carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,9.25,148);
INSERT INTO "hcompprods" VALUES('00156','Meat','Beef, fat carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,12.18,140);
INSERT INTO "hcompprods" VALUES('00157','Meat','Beef very fat carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.64,125);
INSERT INTO "hcompprods" VALUES('00158','Meat','Beef, very thin carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.82,157);
INSERT INTO "hcompprods" VALUES('00159','Meat','Veal, thin carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.36,151);
INSERT INTO "hcompprods" VALUES('00160','Meat','Veal, medium carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.46,150);
INSERT INTO "hcompprods" VALUES('00161','Meat','Veal, fat carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,7.93,148);
INSERT INTO "hcompprods" VALUES('00162','Meat','Pork, thin carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,12.59,110);
INSERT INTO "hcompprods" VALUES('00163','Meat','Pork, medium carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,16.15,100);
INSERT INTO "hcompprods" VALUES('00164','Meat','Pork, fat carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,19.66,86);
INSERT INTO "hcompprods" VALUES('00165','Meat','Mutton',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.98,128);
INSERT INTO "hcompprods" VALUES('00166','Meat','Mutton',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,10.08,119);
INSERT INTO "hcompprods" VALUES('00167','Meat','Mutton',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.02,105);
INSERT INTO "hcompprods" VALUES('00168','Meat','Offals, all species',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.98,160);
INSERT INTO "hcompprods" VALUES('00170','Meat','Horsemeat, carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.56,213.9);
INSERT INTO "hcompprods" VALUES('00171','Meat','Goat meat, carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.56,206);
INSERT INTO "hcompprods" VALUES('00172','Meat','Buffalo, carcass, very lean',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.14,203.9);
INSERT INTO "hcompprods" VALUES('00173','Meat','Carabao, carcass, very lean',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.26,128);
INSERT INTO "hcompprods" VALUES('00174','Meat','Camel carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.8,152);
INSERT INTO "hcompprods" VALUES('00175','Meat','Reindeer carcass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.86,152);
INSERT INTO "hcompprods" VALUES('00176','Meat','Rabbit, domestic, dressed and drawn',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.69,200.5);
INSERT INTO "hcompprods" VALUES('00177','Meat','Whale meat, lean only, edible portion',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.23,200);
INSERT INTO "hcompprods" VALUES('00178','Meat','Game, mammals, dressed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.35,180);
INSERT INTO "hcompprods" VALUES('00179','Meat','Game, birds, dressed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.47,130);
INSERT INTO "hcompprods" VALUES('00180','Meat','Chickens, dressed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,9.9,173.4);
INSERT INTO "hcompprods" VALUES('00181','Meat','Ducks, dressed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,16.9,114.9);
INSERT INTO "hcompprods" VALUES('00182','Meat','Geese, dressed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.52,158.6);
INSERT INTO "hcompprods" VALUES('00183','Meat','Turkeys, dressed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.69,204.2);
INSERT INTO "hcompprods" VALUES('00184','Meat','Poultry, dressed, unspecified',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.4,120);
INSERT INTO "hcompprods" VALUES('00185','Meat','Canned meat. Roast beef, corned beef',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,10.46,271);
INSERT INTO "hcompprods" VALUES('00186','Meat','Corned beef',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,10.46,271);
INSERT INTO "hcompprods" VALUES('00187','Meat','Pork (ham, shoulder)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,13.64,150);
INSERT INTO "hcompprods" VALUES('00188','Meat','Bacon (smoked belly)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,19.18,116);
INSERT INTO "hcompprods" VALUES('00189','Meat','Dehydrated beef or pork',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,21.3,600);
INSERT INTO "hcompprods" VALUES('00190','Meat','Dehydrated lean beef',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,16.53,820);
INSERT INTO "hcompprods" VALUES('00191','Eggs','Egg, hen',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.16,109);
INSERT INTO "hcompprods" VALUES('00192','Eggs','Egg, duck',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,7.76,128.1);
INSERT INTO "hcompprods" VALUES('00193','Eggs','Egg, goose',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,7.75,138.7);
INSERT INTO "hcompprods" VALUES('00194','Fish','Fish, others, fresh, fillet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.35,190);
INSERT INTO "hcompprods" VALUES('00195','Fish','Fish, others, fresh, round',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.92,86);
INSERT INTO "hcompprods" VALUES('00196','Fish','Fish, fat-rich, fresh, fillet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,7.36,200);
INSERT INTO "hcompprods" VALUES('00197','Fish','Fish, fat-rich, fresh, round',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.68,100);
INSERT INTO "hcompprods" VALUES('00198','Fish','Fish, cod and related species, fresh, fillet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.14,164);
INSERT INTO "hcompprods" VALUES('00199','Fish','Fish, cod and related species, fresh, round',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.68,74);
INSERT INTO "hcompprods" VALUES('00200','Fish','Fish, unspecified, round',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.59,88);
INSERT INTO "hcompprods" VALUES('00201','Fish','Fish, unspecified, fillet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.52,188);
INSERT INTO "hcompprods" VALUES('00202','Fish','Crustaceans, in shell',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.38,66);
INSERT INTO "hcompprods" VALUES('00203','Fish','Molluscs, in shell',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0.84,32);
INSERT INTO "hcompprods" VALUES('00204','Fish','Crustaceans, molluscs unspecified, in shell',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.05,41);
INSERT INTO "hcompprods" VALUES('00205','Fish','Fish, fat-rich kind, cured-salted-smoked, bones not eaten',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,7.81,265);
INSERT INTO "hcompprods" VALUES('00206','Fish','Fish, fat-rich kind, cured-salted-smoked, bones eaten',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,11.31,386.67);
INSERT INTO "hcompprods" VALUES('00207','Fish','Fish, fat-poor kind, cured-salted-smoked, bones not eaten',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,5.1,246.67);
INSERT INTO "hcompprods" VALUES('00208','Fish','Fish, fat-poor kind, cured-salted-smoked, bones eaten',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,9.32,451.67);
INSERT INTO "hcompprods" VALUES('00209','Fish','Fish, fat-rich kind, whole, dry',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,18.66,600);
INSERT INTO "hcompprods" VALUES('00210','Fish','Fish, fat-poor kind, fully dried, boneless flesh; fish meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.27,750);
INSERT INTO "hcompprods" VALUES('00211','Fish','Fish, canned, all kinds in oil',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,13.14,220);
INSERT INTO "hcompprods" VALUES('00212','Fish','Fish, cnned, fat-rich kinds, not in oil',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,7.87,200);
INSERT INTO "hcompprods" VALUES('00213','Fish','Fish, canned, fat-poor kinds, not in oil',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.52,210);
INSERT INTO "hcompprods" VALUES('00214','Fish','Crustaceans, canned',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,3.85,175);
INSERT INTO "hcompprods" VALUES('00215','Fish','Molluscs, canned',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.97,70);
INSERT INTO "hcompprods" VALUES('00216','Milk','Milk, cow, 3.5% fat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.72,35);
INSERT INTO "hcompprods" VALUES('00217','Milk','Milk, cow, 3.0% fat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.51,33);
INSERT INTO "hcompprods" VALUES('00218','Milk','Milk, cow, 3.2% fat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.59,34);
INSERT INTO "hcompprods" VALUES('00219','Milk','Milk, cow, 3.9% fat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,2.85,35);
INSERT INTO "hcompprods" VALUES('00220','Milk','Milk, cow, skim, fluid, or buttermilk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,1.63,36);
INSERT INTO "hcompprods" VALUES('00221','Milk','Cream (20% butterfat)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,8.54,29);
INSERT INTO "hcompprods" VALUES('00227','Milk','Milk, cow, whole, evaporated, unsweetened',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6,75);
INSERT INTO "hcompprods" VALUES('00228','Milk','Milk, cow, whole, evaporated, unsweetened',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.74,83);
INSERT INTO "hcompprods" VALUES('00229','Milk','Milk, cow, whole, condensed, sweetened',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14,81);
INSERT INTO "hcompprods" VALUES('00230','Milk','Milk, cow, whole, condensed, sweetened',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.06,82);
INSERT INTO "hcompprods" VALUES('00231','Milk','Milk, cow, skim, condensed, sweetened',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,11.55,90);
INSERT INTO "hcompprods" VALUES('00232','Milk','Milk, cow, whole, dried',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,20.59,260);
INSERT INTO "hcompprods" VALUES('00233','Milk','Milk, cow, skim, dried',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,15.06,360);
INSERT INTO "hcompprods" VALUES('00234','Milk','Chesse, hard, whole milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,16.19,250);
INSERT INTO "hcompprods" VALUES('00235','Milk','Chesse, hard, \"3/4 fat\"',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.27,340);
INSERT INTO "hcompprods" VALUES('00236','Milk','Chesse, hard, skim milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,10.33,460);
INSERT INTO "hcompprods" VALUES('00237','Milk','Chesse, semi-soft, whole milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,12.51,180);
INSERT INTO "hcompprods" VALUES('00238','Milk','Chesse, semi-soft, skim milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,7.82,350);
INSERT INTO "hcompprods" VALUES('00239','Milk','Chesse, soft, fresh, partly whole milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,6.07,150);
INSERT INTO "hcompprods" VALUES('00240','Milk','Chesse, soft, fresh, skim milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.39,190);
INSERT INTO "hcompprods" VALUES('00241','Milk','Whey chesse, hard, low fat type',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,11.13,90);
INSERT INTO "hcompprods" VALUES('00242','Milk','Whey, chesse, soft',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,4.44,140);
INSERT INTO "hcompprods" VALUES('00243','Oil','Oils, vegetable, pure',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,36.99,0);
INSERT INTO "hcompprods" VALUES('00244','Oil','Margarine (either vegetable or animal)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,30.07,9);
INSERT INTO "hcompprods" VALUES('00247','Oil','Butter',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,29.96,6);
INSERT INTO "hcompprods" VALUES('00248','Oil','Ghee',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,36.78,0);
INSERT INTO "hcompprods" VALUES('00249','Oil','Lard, leaf fat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,35.86,17.6);
INSERT INTO "hcompprods" VALUES('00250','Oil','Pork fat, other',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,32.43,40);
INSERT INTO "hcompprods" VALUES('00251','Oil','Pork fat, all',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,34.14,30);
INSERT INTO "hcompprods" VALUES('00252','Oil','Suet, tallow (kidney fat)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,37.74,0);
INSERT INTO "hcompprods" VALUES('00253','Oil','Meat fat, rendered',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,37.53,0);
INSERT INTO "hcompprods" VALUES('00254','Sugar','Sugar, refined',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,16.29,0);
INSERT INTO "hcompprods" VALUES('00255','Sugar','Sugars, crude from cane, palm, coconut, maple',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,14.69,10);
INSERT INTO "hcompprods" VALUES('00256','Sugar','Molasses',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,12.13,0);
INSERT INTO "hcompprods" VALUES('00257','Sugar','Sorghum syrup (concentrated juice)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,12.13,0);
INSERT INTO "hcompprods" VALUES('00258','Sugar','Cane syrup (concentrated cane juice)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,11.65,0);
INSERT INTO "hcompprods" VALUES('00259','Sugar','Maple syrup',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,10.93,0);
INSERT INTO "hcompprods" VALUES('00260','Sugar','Syrups, miscellaneous, incl. corn syrup',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,13.35,0);
INSERT INTO "hcompprods" VALUES('00261','Sugar','Honey',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,12.72,3);
DROP TABLE IF EXISTS "indigenousunits";
CREATE TABLE indigenousunits ( unit_cod CHAR(3) NOT NULL , unit_des VARCHAR(60) NULL , kgs DECIMAL(12,3) NULL , lts DECIMAL(12,3) NULL , PRIMARY KEY (unit_cod) );
DROP TABLE IF EXISTS "labforce";
CREATE TABLE labforce ( SYS_COD VARCHAR(27) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , PERS_TYP CHAR(2) NULL DEFAULT 'HH' , PERS_NUM DECIMAL(3,0) NULL DEFAULT 0 , AGE DECIMAL(2,0) NULL DEFAULT 0 , SEX CHAR(1) NULL DEFAULT 'M' , WORK CHAR(1) NULL DEFAULT 'Y' , SHORTDESC VARCHAR(12) NULL DEFAULT 'Without desc' , EAT CHAR(1) NULL DEFAULT 'N' , EDUCATION VARCHAR(60) NULL DEFAULT 'NONE' , OCUPATION VARCHAR(60) NULL DEFAULT 'NONE' , PRIMARY KEY (SYS_COD, PERS_COD)  );
DROP TABLE IF EXISTS "labforceperiods";
CREATE TABLE labforceperiods ( SYS_COD VARCHAR(27) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , period_id CHAR(2) NOT NULL , wrk CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (SYS_COD, PERS_COD, period_id)  );
DROP TABLE IF EXISTS "liveavailres";
CREATE TABLE liveavailres ( SYS_COD VARCHAR(27) NOT NULL , FEED_COD CHAR(3) NOT NULL , COLLECTED CHAR(1) NULL DEFAULT 'N' , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(12,3) NULL DEFAULT 0 , DETERFIBRE DECIMAL(12,3) NULL DEFAULT 0 , DIGESTI DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, FEED_COD)  );
DROP TABLE IF EXISTS "liveavailresperiods";
CREATE TABLE liveavailresperiods ( SYS_COD VARCHAR(27) NOT NULL , FEED_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , ava CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, FEED_COD, period_id)  );
DROP TABLE IF EXISTS "livegroups";
CREATE TABLE livegroups ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , HERD_COD CHAR(2) NOT NULL , NUMANIM DECIMAL(7,0) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, HERD_COD)  );
DROP TABLE IF EXISTS "livegroupsperiods";
CREATE TABLE livegroupsperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , HERD_COD CHAR(2) NOT NULL , period_id CHAR(2) NOT NULL , na DECIMAL(7,0) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, HERD_COD, period_id)  );
DROP TABLE IF EXISTS "livehvst";
CREATE TABLE livehvst ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD)  );
DROP TABLE IF EXISTS "livehvstcat";
CREATE TABLE livehvstcat ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , HERD_COD CHAR(2) NOT NULL , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, HERD_COD) );
DROP TABLE IF EXISTS "livehvstcatperiods";
CREATE TABLE livehvstcatperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , HERD_COD CHAR(2) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , wei DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, HERD_COD, period_id)  );
DROP TABLE IF EXISTS "livehvstfeed";
CREATE TABLE livehvstfeed ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , FLIVE_ICOD CHAR(3) NOT NULL , FGROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, FLIVE_ICOD, FGROUP_COD)  );
DROP TABLE IF EXISTS "livehvstfeedperiods";
CREATE TABLE livehvstfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , FLIVE_ICOD CHAR(3) NOT NULL , FGROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, FLIVE_ICOD, FGROUP_COD, period_id)  );
DROP TABLE IF EXISTS "livehvstlabour";
CREATE TABLE livehvstlabour ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "livehvstperiods";
CREATE TABLE livehvstperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , wei DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "livehvstsold";
CREATE TABLE livehvstsold ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, MARK_COD)  );
DROP TABLE IF EXISTS "livehvstsoldcat";
CREATE TABLE livehvstsoldcat ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , HERD_COD CHAR(2) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, HERD_COD, MARK_COD)  );
DROP TABLE IF EXISTS "livehvstsoldcatperiods";
CREATE TABLE livehvstsoldcatperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , HERD_COD CHAR(2) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , wei DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, HERD_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "livehvstsoldperiods";
CREATE TABLE livehvstsoldperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , wei DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "livehvsttim";
CREATE TABLE livehvsttim ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , YIELD DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , POROT DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, NMONTH)  );
DROP TABLE IF EXISTS "livehvsttimcat";
CREATE TABLE livehvsttimcat ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , HERD_COD CHAR(2) NOT NULL , NMONTH CHAR(2) NOT NULL , YIELD DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , RP CHAR(1) NULL DEFAULT 'F' , DP CHAR(1) NULL DEFAULT 'F' , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , POROT DECIMAL(12,3) NULL DEFAULT 0 , PORRP DECIMAL(12,3) NULL DEFAULT 0 , PORDP DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD, HERD_COD, NMONTH)  );
DROP TABLE IF EXISTS "livelabour";
CREATE TABLE livelabour ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, ACTY_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "liveman";
CREATE TABLE liveman ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, ACTY_COD)  );
DROP TABLE IF EXISTS "livemangrp";
CREATE TABLE livemangrp ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, ACTY_COD)  );
DROP TABLE IF EXISTS "livemangrplabour";
CREATE TABLE livemangrplabour ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL , HOURSDAY DECIMAL(12,3) NULL , PPERHOUR DECIMAL(6,2) NULL , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, ACTY_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "livemangrplabourB";
CREATE TABLE livemangrplabourB ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, ACTY_COD, PERS_COD)  );
DROP TABLE IF EXISTS "livemangrptim";
CREATE TABLE livemangrptim ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, GROUP_COD, ACTY_COD, NMONTH)  );
DROP TABLE IF EXISTS "livemanlabour";
CREATE TABLE livemanlabour ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, ACTY_COD, PERS_COD)  );
DROP TABLE IF EXISTS "livemantim";
CREATE TABLE livemantim ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, ACTY_COD, NMONTH)  );
DROP TABLE IF EXISTS "livestoc";
CREATE TABLE livestoc ( LIVE_COD CHAR(3) NOT NULL , LIVE_DES VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LZH VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LSW VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LRU VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LPT VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LNL VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LKO VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LJA VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LIT VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LFR VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LES VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_LDE VARCHAR(30) NULL DEFAULT 'Without description' , LIVE_TPY CHAR(1) NULL DEFAULT 'R' , PRIMARY KEY (LIVE_COD) );
INSERT INTO "livestoc" VALUES('001','Donkeys',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('002','Llamas',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('003','Alpacas',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('004','Guinea pigs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('005','Fish',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('006','Silk worms',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('007','Insects',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('008','Guinea fowl',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('009','Quail',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('010','Ox',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('011','None',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('BE','Beehives',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('BF','Buffaloes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('CK','Chicken',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('CM','Camels',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('CT','Cattle',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'R');
INSERT INTO "livestoc" VALUES('DK','Ducks',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('GE','Geese',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('GO','Goats',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'S');
INSERT INTO "livestoc" VALUES('HR','Horses',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('MU','Mules',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('PG','Pigs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('RB','Rabbits',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
INSERT INTO "livestoc" VALUES('SH','Sheep',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'S');
INSERT INTO "livestoc" VALUES('TK','Turkeys',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'O');
DROP TABLE IF EXISTS "lvproducts";
CREATE TABLE lvproducts ( LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , ENERGY DECIMAL(7,3) NULL DEFAULT 0 , PROTEIN DECIMAL(7,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(7,3) NULL DEFAULT 0 , USDAR VARCHAR(20) NULL DEFAULT 'Without description' , SALESBY CHAR(1) NULL DEFAULT 'Q' , WEIGHT CHAR(1) NULL DEFAULT 'N' , HHCONS CHAR(1) NULL DEFAULT 'Y' , HERD CHAR(1) NULL DEFAULT 'N' , MANURE CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (LIVE_COD, PROD_COD)  );
INSERT INTO "lvproducts" VALUES('001','005',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('001','006',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('001','007',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('001','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('001','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','001',0,0,0,0,3.05,38,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','005',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','006',0,0,0,0,6.69,105,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','007',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','008',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','010',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','011',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','014',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('002','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('003','001',0,0,0,0,3.05,38,0,NULL,'Q','N','Y','Y','N');
INSERT INTO "lvproducts" VALUES('003','006',0,0,0,0,6.69,105,0,NULL,'Q','N','Y','Y','N');
INSERT INTO "lvproducts" VALUES('003','011',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('003','024',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('003','026',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('004','001',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('004','006',3.32,0.22,0.28,0,6.78,207.6,0,'17174','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('004','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('004','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('005','019',2.49,0.2,0.3,0,5.65,155.5,0,'15234','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('006','016',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('006','017',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('008','006',3.3,0.17,0.22,0,4.6,206.4,0,'5152','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('008','027',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('008','028',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('008','030',3.74,0.15,0.19,0,6.61,234,0,'5151','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('009','027',2.22,0.21,0.21,0,7.74,138.7,0,'1139','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BE','009',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BE','013',0.05,0,0.05,0,12.72,3,0,'19296','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BF','001',0,0,0,0,4.23,40,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BF','002',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BF','005',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('BF','006',3.26,0.2,0.3,0,4.14,203.9,0,'17160','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BF','007',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BF','024',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('BF','025',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('BF','026',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('CK','005',0,0,0,0,0,0,0,'Without description','U','Y','N','Y','N');
INSERT INTO "lvproducts" VALUES('CK','006',3.42,0.17,0.23,0,4.98,213.9,0,'5011','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CK','025',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CK','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CK','027',2,0.18,0.12,0,6.23,124.9,0,'1123','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CK','030',2.93,0.15,0.19,0,8.91,183.3,0,'05001','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CM','001',0,0,0,0,3.05,38,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CM','005',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CM','006',0,0,0,0,6.69,105,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CM','008',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CM','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CM','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','001',0.53,0.09,0.15,0,2.55,32.9,0,'1077','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','002',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','003',0.14,0.02,0.03,0,30,8.5,0,'1145','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','004',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','005',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('CT','006',2.75,0.16,0.27,0,10.63,171.7,0,'23572','Q','N','Y','Y','N');
INSERT INTO "lvproducts" VALUES('CT','007',0,0,0,0,0,0,0,NULL,'Q','N','N','Y','Y');
INSERT INTO "lvproducts" VALUES('CT','014',2.33,0.08,0.27,0,4.1,145.6,0,'13341','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','022',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','024',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('CT','026',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('CT','031',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','032',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('CT','034',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('DK','006',2.92,0.2,0.27,0,5.52,182.8,0,'5141','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('DK','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('DK','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('DK','027',2.05,0.22,0.22,0,7.74,128.1,0,'1138','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('DK','028',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GE','006',3.64,0.31,0.42,0,6.74,227.5,0,'5148','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GE','024',2.54,0.23,0.31,0,15.52,158.6,0,'5146','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GE','027',2.22,0.21,0.21,0,7.74,138.7,0,'1139','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GE','028',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GO','001',0.57,0.11,0.2,0,2.89,35.6,0,'1106','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GO','005',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('GO','006',2.65,0.16,0.22,0,11.8,165.6,0,'17224','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GO','007',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GO','008',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GO','010',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('GO','021',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('GO','024',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('GO','026',0,0,0,0,0,0,0,NULL,'U','Y','Y','Y','N');
INSERT INTO "lvproducts" VALUES('HR','005',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('HR','006',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('HR','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('HR','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('MU','005',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('MU','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('MU','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('PG','006',3.03,0.2,0.34,0,9.04,189.5,0,'10187','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('PG','014',3.42,0.29,0.27,0,5.61,213.9,0,'10110','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('PG','024',2.23,0.16,0.25,0,15.73,139.1,0,'10001','U','Y','Y','N','N');
INSERT INTO "lvproducts" VALUES('PG','026',0,0,0,0,0,0,0,NULL,'U','Y','Y','N','N');
INSERT INTO "lvproducts" VALUES('PG','029',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('RB','006',3.21,0.21,0.33,0,5.69,200.5,0,'17177','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('RB','010',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('RB','024',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('RB','026',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','001',0.96,0.16,0.14,0,4.52,59.8,0,'1109','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','005',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','006',2.45,0.14,0.2,0,14.31,153.2,0,'17239','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','007',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','010',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','015',0,0,0,0,0,0,0,NULL,'Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','020',2.4,0.34,0.29,0,11.55,149.7,0,'17209','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','024',2.65,0.16,0.22,0,11.8,165.6,0,'17224','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('SH','026',2.4,0.34,0.29,0,11.55,149.7,0,'17209','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('TK','006',3.48,0.2,0.3,0,4.98,217.7,0,'5167','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('TK','024',3.26,0.18,0.27,0,6.57,203.7,0,'5163','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('TK','026',4.48,0.2,0.27,0,9,280,0,'5230','Q','N','Y','N','N');
INSERT INTO "lvproducts" VALUES('TK','027',2.19,0.17,0.14,0,7.15,136.8,0,'1141','Q','N','Y','N','N');
DROP TABLE IF EXISTS "lvstosys";
CREATE TABLE lvstosys ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PURPOSE VARCHAR(40) NULL DEFAULT 'DAIRY' , BREDD VARCHAR(20) NULL DEFAULT 'Set breed' , NANIMAL DECIMAL(7,0) NULL DEFAULT 0 , NANIMALAS DECIMAL(7,0) NULL DEFAULT 0 , BOD_WEIG DECIMAL(7,0) NULL DEFAULT 0 , MILKPROD DECIMAL(12,3) NULL DEFAULT 0 , LACTLENG DECIMAL(3,0) NULL DEFAULT 0 , NLAMB DECIMAL(12,3) NULL DEFAULT 0 , MILKFREQ DECIMAL(3,0) NULL DEFAULT 0 , CALVINTER DECIMAL(3,0) NULL DEFAULT 0 , CALVRATE DECIMAL(3,0) NULL DEFAULT 0 , OFFPRING DECIMAL(5,2) NULL DEFAULT 0 , REPROMALES DECIMAL(7,0) NULL DEFAULT 0 , REPMALESAS DECIMAL(7,0) NULL DEFAULT 0 , REPMALEBW DECIMAL(7,0) NULL DEFAULT 0 , FEMREPLEC DECIMAL(7,0) NULL DEFAULT 0 , WEAAGE DECIMAL(7,0) NULL DEFAULT 0 , WEAWEI DECIMAL(7,0) NULL DEFAULT 0 , WEAAGENREP DECIMAL(7,0) NULL DEFAULT 0 , WEABWNREP DECIMAL(7,0) NULL DEFAULT 0 , FIRSTCLAGE DECIMAL(7,0) NULL DEFAULT 0 , FIRSTCLWEI DECIMAL(7,0) NULL DEFAULT 0 , REPROINTEN DECIMAL(7,0) NULL DEFAULT 0 , LAMBYEAR DECIMAL(7,0) NULL DEFAULT 0 , NMALETOT DECIMAL(7,0) NULL DEFAULT 0 , NFEMTOT DECIMAL(7,0) NULL DEFAULT 0 , BODYCOND VARCHAR(60) NULL , FEEDSYS SMALLINT NULL , CORRSYS SMALLINT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD)  );
DROP TABLE IF EXISTS "lvstosysherdstr";
CREATE TABLE lvstosysherdstr ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , herd_cod CHAR(2) NOT NULL , NANIMAL DECIMAL(7,0) NULL DEFAULT 0 , NANIMALAS DECIMAL(7,0) NULL DEFAULT 0 , bw DECIMAL(7,3) NULL DEFAULT 0 , perfertile DECIMAL(7,3) NULL DEFAULT 0 , permilked DECIMAL(7,3) NULL DEFAULT 0 , cvalue DECIMAL(12,3) NULL DEFAULT 0 , mortality DECIMAL(7,3) NULL DEFAULT 0 , numfertile DECIMAL(7,0) NULL DEFAULT 0 , numferliteas DECIMAL(7,0) NULL DEFAULT 0 , nummilked DECIMAL(7,0) NULL DEFAULT 0 , nummilkedas DECIMAL(7,0) NULL DEFAULT 0 , numdry DECIMAL(7,0) NULL DEFAULT 0 , numdryas DECIMAL(7,0) NULL DEFAULT 0 , numlactating DECIMAL(7,0) NULL DEFAULT 0 , numlactatingas DECIMAL(7,0) NULL DEFAULT 0 , TOTPART DECIMAL(7,0) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, herd_cod) );
DROP TABLE IF EXISTS "lvstosyslabour";
CREATE TABLE lvstosyslabour ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, PERS_COD)  );
DROP TABLE IF EXISTS "lvstosysperiods";
CREATE TABLE lvstosysperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , part12 DECIMAL(7,0) NULL DEFAULT 0 , part23 DECIMAL(7,0) NULL DEFAULT 0 , parto3 DECIMAL(7,0) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, period_id)  );
DROP TABLE IF EXISTS "markoutlet";
CREATE TABLE markoutlet ( MARK_COD CHAR(3) NOT NULL , MARK_DES VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LZH VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LSW VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LRU VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LPT VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LNL VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LKO VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LJA VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LIT VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LFR VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LES VARCHAR(30) NULL DEFAULT 'Without description' , MARK_LDE VARCHAR(30) NULL DEFAULT 'Without description' , PRIMARY KEY (MARK_COD) );
INSERT INTO "markoutlet" VALUES('INT','International',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "markoutlet" VALUES('LOC','Local',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "markoutlet" VALUES('NAC','National',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "markoutlet" VALUES('REG','Regional',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
DROP TABLE IF EXISTS "mnrheap";
CREATE TABLE mnrheap ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , HEAP_TYP CHAR(3) NULL , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , QTYASS DECIMAL(12,3) NULL , PERCLOSS DECIMAL(12,3) NULL DEFAULT 0 , YIELD DECIMAL(12,3) NULL DEFAULT 0 , FS CHAR(1) NULL DEFAULT 'F' , AP CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , GP CHAR(1) NULL DEFAULT 'F' , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORAP DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORGP DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD)  );
DROP TABLE IF EXISTS "mnrheapaddprods";
CREATE TABLE mnrheapaddprods ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, PROD_COD)  );
DROP TABLE IF EXISTS "mnrheapcrpfora";
CREATE TABLE mnrheapcrpfora ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, FORA_COD)  );
DROP TABLE IF EXISTS "mnrheapcrpprod";
CREATE TABLE mnrheapcrpprod ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, PLOT_COD, NUMSEASON, CROP_COD, ACTY_COD, PROD_COD)  );
DROP TABLE IF EXISTS "mnrheapfeed";
CREATE TABLE mnrheapfeed ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, HEAP_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "mnrheapfeedperiods";
CREATE TABLE mnrheapfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "mnrheapgrassfora";
CREATE TABLE mnrheapgrassfora ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, FORA_COD)  );
DROP TABLE IF EXISTS "mnrheapgrassprod";
CREATE TABLE mnrheapgrassprod ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, PLOT_COD, NUMPADD, CROP_COD, ACTY_COD, PROD_COD)  );
DROP TABLE IF EXISTS "mnrheaplvprod";
CREATE TABLE mnrheaplvprod ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, LIVE_ICOD, GROUP_COD, LIVE_COD, PROD_COD)  );
DROP TABLE IF EXISTS "mnrheapprods";
CREATE TABLE mnrheapprods ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , PROD_DES VARCHAR(60) NULL DEFAULT 'Without description' , COLLECTED CHAR(1) NULL DEFAULT 'N' , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PROD_COD)  );
DROP TABLE IF EXISTS "mnrheapprodsperiods";
CREATE TABLE mnrheapprodsperiods ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , ava CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "mnrheapsold";
CREATE TABLE mnrheapsold ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, MARK_COD)  );
DROP TABLE IF EXISTS "mnrheapsoldperiods";
CREATE TABLE mnrheapsoldperiods ( mnrheapsold_SYS_COD VARCHAR(27) NOT NULL , mnrheapsold_HEAP_COD CHAR(3) NOT NULL , mnrheapsold_MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (mnrheapsold_SYS_COD, mnrheapsold_HEAP_COD, mnrheapsold_MARK_COD, period_id)  );
DROP TABLE IF EXISTS "mnrheapvegfora";
CREATE TABLE mnrheapvegfora ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD)  );
DROP TABLE IF EXISTS "mnrheapvegprod";
CREATE TABLE mnrheapvegprod ( SYS_COD VARCHAR(27) NOT NULL , HEAP_COD CHAR(3) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , QTYASS DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, HEAP_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD)  );
DROP TABLE IF EXISTS "moduletree";
CREATE TABLE moduletree ( module_id CHAR(3) NOT NULL , module_library VARCHAR(254) NULL , module_plugin VARCHAR(120) NULL , module_pluginDesc VARCHAR(254) NULL , module_order INT(11) NULL , parent_module CHAR(3) NULL DEFAULT NULL , PRIMARY KEY (module_id)  );
DROP TABLE IF EXISTS "nfgrazinggrps";
CREATE TABLE nfgrazinggrps ( plot_cod CHAR(3) NOT NULL , numpadd CHAR(2) NOT NULL , crop_cod CHAR(3) NOT NULL , live_icod CHAR(3) NOT NULL , group_cod CHAR(3) NOT NULL , nmonth SMALLINT NULL DEFAULT 0 , intake DECIMAL(12,3) NULL DEFAULT 0 );
DROP TABLE IF EXISTS "nfinscrops";
CREATE TABLE nfinscrops ( sys_cod VARCHAR(27) NULL , plot_cod CHAR(3) NULL , crop_cod CHAR(3) NULL , iscrop CHAR(1) NULL DEFAULT 'Y' , inputsrc CHAR(2) NULL DEFAULT 'UN' , inputtyp CHAR(1) NULL DEFAULT 'U' , nitrogen DECIMAL(12,3) NULL DEFAULT 0 , phosphorus DECIMAL(12,3) NULL DEFAULT 0 , potassium DECIMAL(12,3) NULL DEFAULT 0 , carbon DECIMAL(12,3) NULL DEFAULT 0 );
DROP TABLE IF EXISTS "nfinsheaps";
CREATE TABLE nfinsheaps ( sys_cod VARCHAR(27) NULL , heap_cod CHAR(3) NULL , inputsrc CHAR(2) NULL DEFAULT 'UN' , inputtyp CHAR(1) NULL DEFAULT 'U' , nitrogen DECIMAL(12,3) NULL DEFAULT 0 , phosphorus DECIMAL(12,3) NULL DEFAULT 0 , potassium DECIMAL(12,3) NULL DEFAULT 0 , carbon DECIMAL(12,3) NULL DEFAULT 0 );
DROP TABLE IF EXISTS "nfinslives";
CREATE TABLE nfinslives ( sys_cod VARCHAR(27) NULL , live_icod CHAR(3) NULL , live_cod CHAR(3) NULL , inputsrc CHAR(2) NULL DEFAULT 'UN' , inputtyp CHAR(1) NULL DEFAULT 'U' , anweight DECIMAL(12,3) NULL DEFAULT 0 , nitrogen DECIMAL(12,3) NULL DEFAULT 0 , phosphorus DECIMAL(12,3) NULL DEFAULT 0 , potassium DECIMAL(12,3) NULL DEFAULT 0 , carbon DECIMAL(12,3) NULL DEFAULT 0 );
DROP TABLE IF EXISTS "nfoutcrops";
CREATE TABLE nfoutcrops ( sys_cod VARCHAR(27) NULL , plot_cod CHAR(3) NULL , crop_cod CHAR(3) NULL , iscrop CHAR(1) NULL DEFAULT 'Y' , outtype CHAR(2) NULL DEFAULT 'UN' , nitrogen DECIMAL(12,3) NULL DEFAULT 0 , phosphorus DECIMAL(12,3) NULL DEFAULT 0 , potassium DECIMAL(12,3) NULL DEFAULT 0 , carbon DECIMAL(12,3) NULL DEFAULT 0 );
DROP TABLE IF EXISTS "nfoutheaps";
CREATE TABLE nfoutheaps ( sys_cod VARCHAR(27) NULL , heap_cod CHAR(3) NULL , outtype CHAR(2) NULL DEFAULT 'UN' , nitrogen DECIMAL(12,3) NULL DEFAULT 0 , phosphorus DECIMAL(12,3) NULL DEFAULT 0 , potassium DECIMAL(12,3) NULL DEFAULT 0 , carbon DECIMAL(12,3) NULL DEFAULT 0 );
DROP TABLE IF EXISTS "nfoutlives";
CREATE TABLE nfoutlives ( sys_cod VARCHAR(27) NULL , live_icod CHAR(3) NULL , live_cod CHAR(3) NULL , prod_cod CHAR(3) NULL , outtype CHAR(2) NULL DEFAULT 'UN' , anweight DECIMAL(12,3) NULL DEFAULT 0 , nitrogen DECIMAL(12,3) NULL DEFAULT 0 , phosphorus DECIMAL(12,3) NULL DEFAULT 0 , potassium DECIMAL(12,3) NULL DEFAULT 0 , carbon DECIMAL(12,3) NULL DEFAULT 0 );
DROP TABLE IF EXISTS "otherhhcp";
CREATE TABLE otherhhcp ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , PROD_DESC VARCHAR(30) NULL DEFAULT 'Without description' , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PROD_COD)  );
DROP TABLE IF EXISTS "otherhhcpperiods";
CREATE TABLE otherhhcpperiods ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tmp CHAR(1) NULL DEFAULT 'N' , qtp DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "otherhhexp";
CREATE TABLE otherhhexp ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , PROD_DESC VARCHAR(30) NULL DEFAULT 'Without description' , PRIMARY KEY (SYS_COD, PROD_COD)  );
DROP TABLE IF EXISTS "otherhhexpperiods";
CREATE TABLE otherhhexpperiods ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tmp CHAR(1) NULL DEFAULT 'N' , qtp DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(13,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "otherincome";
CREATE TABLE otherincome ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , PROD_DES VARCHAR(60) NULL DEFAULT 'Without description' , PRIMARY KEY (SYS_COD, PROD_COD)  );
DROP TABLE IF EXISTS "otherincomeperiods";
CREATE TABLE otherincomeperiods ( SYS_COD VARCHAR(27) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tmp CHAR(1) NULL DEFAULT 'N' , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "otherlabour";
CREATE TABLE otherlabour ( SYS_COD VARCHAR(27) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, ACTY_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "otherman";
CREATE TABLE otherman ( SYS_COD VARCHAR(27) NOT NULL , ACTY_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, ACTY_COD)  );
DROP TABLE IF EXISTS "othermanlabour";
CREATE TABLE othermanlabour ( SYS_COD VARCHAR(27) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, ACTY_COD, PERS_COD)  );
DROP TABLE IF EXISTS "othermantim";
CREATE TABLE othermantim ( SYS_COD VARCHAR(27) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, ACTY_COD, NMONTH)  );
DROP TABLE IF EXISTS "otherprod";
CREATE TABLE otherprod ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , PROD_DESC VARCHAR(30) NULL DEFAULT 'Without description' , PRIMARY KEY (SYS_COD, LIVE_ICOD, PROD_COD)  );
DROP TABLE IF EXISTS "otherprodperiods";
CREATE TABLE otherprodperiods ( SYS_COD VARCHAR(27) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tmp CHAR(1) NULL DEFAULT 'N' , qtp DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, LIVE_ICOD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "owneduse";
CREATE TABLE owneduse ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEGETABLE CHAR(1) NULL DEFAULT 'N' , INTER CHAR(1) NULL DEFAULT 'N' , LANDCOVER DECIMAL(3,0) NULL DEFAULT 0 , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD)  );
DROP TABLE IF EXISTS "owneduselabour";
CREATE TABLE owneduselabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, PERS_COD)  );
DROP TABLE IF EXISTS "owneduseperiods";
CREATE TABLE owneduseperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , crp CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, period_id)  );
DROP TABLE IF EXISTS "ownusedv";
CREATE TABLE ownusedv ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD)  );
DROP TABLE IF EXISTS "ownusedvlabour";
CREATE TABLE ownusedvlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, PERS_COD)  );
DROP TABLE IF EXISTS "ownusedvperiods";
CREATE TABLE ownusedvperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , harv CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, period_id)  );
DROP TABLE IF EXISTS "pastfora";
CREATE TABLE pastfora ( CROP_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , ENERGY DECIMAL(7,3) NULL DEFAULT 0 , PROTEIN DECIMAL(7,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(7,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(7,3) NULL DEFAULT 0 , NDF DECIMAL(7,3) NULL DEFAULT 0 , DIGESTI DECIMAL(7,3) NULL DEFAULT 0 , ANENERGY DECIMAL(7,3) NULL DEFAULT 0 , USDAR VARCHAR(20) NULL DEFAULT 'Without description' , USDAC VARCHAR(20) NULL DEFAULT 'Without description' , SNITROGEN DECIMAL(7,3) NULL DEFAULT 0 , ASH DECIMAL(7,3) NULL DEFAULT 0 , PRIMARY KEY (CROP_COD, FORA_COD)  );
INSERT INTO "pastfora" VALUES('001','001',2.24,0,0,0,0,0,0,14,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('001','002',0.944,0,0,0,0,0,0,5.9,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('001','004',1.344,0,0,0,0,0,25.4,8.4,0,0,7.917,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('002','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('002','004',1.216,0,0,0,0,0,22,7.6,0,0,9.891,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('003','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('004','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('005','001',1.76,0,0,0,0,0,0,11,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('006','001',3.33,0.17,0.79,0,0,0,45,0,48.84,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('006','002',2.59,0.21,1.97,0,0,0,0,0,70.53,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('006','030',2.04,0.09,0.23,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('007','001',2.5,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('008','001',2.9,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('009','001',2.448,0.24,1.63,35.4,0,0,25.7,15.3,45,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('010','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('011','001',3.71,0.27,1.79,44.54,0,0,0,0,44.08,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('012','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('013','001',3.7,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('014','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('015','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('016','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('017','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('018','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('018','004',1.499,0,0,0,0,0,27.76,9.37,0,0,10.231,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('019','030',2.37,0.06,0.05,47.88,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('019','031',2.93,0.16,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('020','001',2.25,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('021','001',2.64,0.25,2.79,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('022','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('023','001',3.26,0.16,1.97,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('023','002',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('024','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('025','030',1.24,0.07,0.18,45.44,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('026','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('027','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('028','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('029','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('030','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('031','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('032','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('033','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('034','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('035','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('036','002',2.14,0,0,36.8,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('037','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('038','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('039','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('040','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('041','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('042','001',2.99,0,0,59.4,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('043','001',3.79,0.17,0,0,0,0,0,0,46,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('044','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('045','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('046','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('047','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('048','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('049','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('050','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('051','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('052','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('053','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('054','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('055','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('056','001',2.43,0.25,0.69,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('057','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('058','001',3.52,0.21,2.02,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('059','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('060','001',2.69,0.16,0.86,42.4,0,0,28.3,0,59.8,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('060','002',0,0,0,0,0,0,0,0,66.23,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('060','030',1.5,0.05,0.09,52.7,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('061','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('062','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('063','001',3.48,0.19,1.72,48.34,0,0,44.47,0,45.76,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('063','002',0,0,0,0,0,0,0,0,69.47,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('063','030',1.49,0.04,0.58,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('064','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('065','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('066','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('067','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('068','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('069','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('070','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('071','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('072','001',2,0.2,1.7,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('073','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('074','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('075','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('076','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('077','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('078','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('079','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('080','001',3.69,0.18,2.22,67.6,0,0,0,0,42.33,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('080','002',1.6,0.24,1.8,0,0,0,0,0,54.2,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('081','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('082','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('083','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('084','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('085','001',3.81,0,1.26,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('085','030',2.33,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('086','030',2.63,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('087','001',3.88,0.18,2.3,50.82,0,0,40.82,0,42.41,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('087','002',1.98,0.12,3.47,0,0,0,0,0,72.83,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('087','030',1.82,0.08,0.36,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('088','001',3.84,0,0,50.92,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('088','030',2.67,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('089','030',3.07,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('090','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('091','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('092','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('093','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('094','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('095','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('096','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('097','001',3.51,0.14,1.44,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('097','002',1.92,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('097','030',2.1,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('098','001',3.2,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('099','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('100','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('101','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('102','001',3.74,0.19,0,0,0,0,0,0,66.2,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('102','002',0,0,0,0,0,0,0,0,63.37,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('103','001',2.33,0,0,45.2,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('104','001',2,0,0,0,0,0,92.7,0,44.6,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('105','001',2.08,0.18,1.85,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('105','004',2.8,0,5.5,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('106','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('106','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('107','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('108','031',2.14,0.12,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('109','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('110','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('111','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('112','004',1.305,0,0,0,0,0,29.371,8.157,0,0,8.897,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('112','030',0.41,0.03,0.07,53.4,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('113','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('114','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('115','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('116','001',3.45,0.2,2.64,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('116','030',2,0.08,0.14,42.7,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('116','031',1.79,0.07,0.1,47.06,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('117','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('118','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('119','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('120','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('121','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('122','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('122','004',1.173,0,0,0,0,0,31.267,7.333,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('123','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('124','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('125','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('126','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('127','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('128','001',2.68,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('129','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('129','004',1.504,0,0,0,0,0,0,9.4,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('130','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('130','004',1.456,0,0,0,0,0,28.333,9.1,0,0,8.611,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('131','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('132','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('133','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('134','001',1.32,0.06,0.06,51.6,8.75,8.25,21,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('134','004',0.64,0,0,51.3,8.36,7.2,30.4,4,61,61.8,3.068,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('134','030',0.27,0.02,0.02,46.58,0,0,28.2,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('134','032',0.22,0.07,0.07,52.15,0,0,30,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('135','004',1.552,0.05,0.09,51.73,0,0,19.5,9.7,0,0,9.028,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('135','030',0.6,0.05,0.09,51.73,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('136','030',0.41,0.02,0.05,48.12,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('137','030',0.48,0.04,0.04,53.07,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('138','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('139','001',2.46,0.16,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('139','002',1.16,0.14,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('139','030',1.01,0.09,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('139','031',1.78,0.13,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('140','001',3.1,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('141','001',4.6,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('142','001',2.36,0.15,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('142','002',1.26,0.06,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('142','030',1.23,0.06,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('142','031',1.89,0.1,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('143','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('144','001',4.41,0.38,1.89,38.95,0,0,27,7,44,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('145','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('146','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('147','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('148','001',2.59,0.09,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('148','002',0.66,0.05,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('148','030',0.78,0.03,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('148','031',1.57,0.07,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('149','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('150','001',3.25,0,0,0,0,0,0,0,54.25,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('150','002',1.42,0,0,0,0,0,0,0,70.75,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('151','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('152','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('153','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('153','004',1.312,0,0,0,0,0,24.6,8.2,0,0,9.39,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('154','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('155','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('156','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('157','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('158','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('159','001',2.5,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('160','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('161','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('162','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('163','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('164','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('165','001',3.13,0.24,1.75,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('165','031',3.12,0.17,0,0,0,0,0,19.5,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('166','001',3.16,0.14,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('167','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('168','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('169','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('170','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('171','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('172','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('173','001',3.28,0.15,1.69,44.3,0,0,0,0,64.18,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('174','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('175','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('176','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('177','004',3.808,0.26,0,0,0,0,0,23.8,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('177','031',3.5,0.24,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('178','001',3.79,0.17,1.34,36,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('178','031',2.4,0.51,0,0,0,0,0,15,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('179','001',4.36,0.16,1.66,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('179','002',0.64,0.05,0.84,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('179','030',3.3,0.11,0.71,42.2,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('179','031',2.39,0.18,1.55,43.2,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('180','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('181','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('182','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('183','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('183','004',1.368,0,0,0,0,0,0,8.55,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('184','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('184','004',1.782,0,0,0,0,0,30.43,11.14,0,0,8.306,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('185','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('186','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('187','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('188','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('189','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('190','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('191','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('192','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('193','001',2.15,0,0,0,0,0,0,0,58.2,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('193','002',1.27,0,0,0,0,0,0,0,69.9,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('194','001',3.42,0.15,2.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('194','030',1.9,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('194','031',2.89,0,0,0,0,0,0,0,51,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('195','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('196','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('197','001',3.62,0.15,1.76,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('198','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('199','001',3.05,0.17,2.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('200','001',3.68,0.14,1.98,41.5,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('200','002',2.43,0,0,40.6,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('201','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('202','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('203','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('204','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('205','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('206','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('207','001',2.1,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('208','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('209','001',4.41,0.3,1.55,45.29,0,0,0,0,44.95,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('209','002',1.4,1.84,1.84,43.1,0,0,0,0,62.16,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('210','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('211','001',3.64,0.15,3.11,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('212','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('213','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('214','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('215','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('216','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('217','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('218','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('219','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('220','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('221','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('222','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('223','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('224','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('225','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('226','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('227','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('228','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('229','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('230','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('231','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('231','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('232','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('233','001',1.42,0.14,2.92,0,0,0,20,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('234','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('235','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('236','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('237','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('238','001',3.79,0.13,1.83,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('239','001',1.42,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('239','010',0.78,0.07,1.44,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('240','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('241','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('242','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('243','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('244','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('245','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('246','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('247','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('248','001',2.6,0.14,1.07,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('248','030',2.05,0.08,0.21,48.11,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('249','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('250','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('251','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('252','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('253','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('254','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('255','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('256','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('257','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('258','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('259','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('260','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('261','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('262','001',2.58,0.16,1.23,46.53,0,0,0,0,40,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('262','030',1.01,0.05,0.36,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('263','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('264','001',2.82,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('265','001',3.95,0.23,1.56,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('266','001',3.43,0.35,0.14,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('267','001',2.24,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('268','001',3.97,0.31,0,67.6,0,0,39.37,0,32.25,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('269','001',2.94,0.28,0.22,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('269','002',0.62,0,0,45,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('270','001',3.7,0.22,1.8,54.67,0,0,90.25,0,29.17,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('270','002',0,0,0,0,0,0,0,0,62.37,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('270','030',2.02,0.1,0.6,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('271','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('272','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('273','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('274','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('275','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('276','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('277','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('278','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('279','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('280','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('281','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('282','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('283','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('284','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('285','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('286','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('287','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('288','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('289','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('290','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('291','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('292','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('293','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('294','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('295','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('296','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('297','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('298','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('299','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('300','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('301','001',2.21,0.14,1.49,0,0,0,0,0,58,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('301','002',1.6,0,0,0,0,0,0,0,71.5,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('301','030',2.08,0.07,0.19,46.7,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('302','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('303','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('304','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('305','001',3.01,0.16,1.88,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('305','002',2.01,0.2,1.99,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('305','030',1.27,0.05,0.1,45.93,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('305','031',1.91,0.11,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('306','001',2.75,0.16,1.61,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('306','002',1.1,0.05,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('306','030',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('306','031',1.78,0.09,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('307','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('308','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('309','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('310','001',2.3,0.16,1.89,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('311','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('312','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('313','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('314','001',2,0.06,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('315','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('316','001',2.34,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('317','001',2.96,0.18,1.02,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('317','030',1.42,0.07,0.25,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('318','001',4.1,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('319','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('320','001',1.29,0.06,0.73,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('320','002',1.25,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('320','031',1.44,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('321','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('322','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('323','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('324','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('325','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('326','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('327','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('328','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('329','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('330','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('331','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('332','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('333','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('334','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('335','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('336','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('337','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('338','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('339','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('340','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('341','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('342','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('343','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('344','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('345','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('346','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('347','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('348','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('349','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('350','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('351','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('352','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('353','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('354','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('355','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('356','001',2.27,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('357','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('358','001',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('359','001',2.23,0.15,1.64,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('360','001',2.56,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('361','001',3.3,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('362','001',2.49,0.13,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('362','033',1.472,0.07,0,0,0,0,38,9.2,0,0,6.621,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('363','001',1.89,0.1,0.88,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('363','030',1.28,0.07,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('364','001',4.19,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('365','001',2.42,0.1,0.97,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('366','001',1.808,58,0,60.83,0,0,12.9,11.3,17.9,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('367','001',3.41,0,0,53.4,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('368','001',3.616,0.21,0,62.4,0,0,43.6,22.6,26.1,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('370','001',3.27,0.26,2.92,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('371','001',2.4,0,2.17,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('372','001',3.2,0.28,4.94,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('373','001',1.61,0.07,0.8,45.1,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('374','001',2.92,0.2,1.27,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('375','001',3.1,0,0,46,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('375','002',0.96,0,0,44,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('376','001',3.2,0.17,1,0,0,0,35.65,20,0,0,7.178,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('376','031',1.64,0.17,0.71,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('377','001',5.056,445,0,0,0,0,15.1,31.6,0,0,5.042,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('378','001',3.17,0.21,1.04,0,0,0,33,6,35,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('379','001',3.65,0,0,45.7,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('380','001',4.21,0,0,56.3,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('381','001',2.69,0.2,0.84,46.2,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('382','001',3.03,0.23,0.48,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('382','030',2.1,0.11,0.07,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('383','001',2.59,0.15,0.62,48,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('384','001',2.24,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('385','001',1.45,0.19,1.25,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('386','001',2.45,0.23,2.85,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('387','001',2.304,0.2,1.96,0,0,0,35.8,14.4,0,0,7.872,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('387','030',0.86,0.05,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('388','001',1.856,0.14,3.27,0,0,0,0,11.6,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('389','001',3.04,0.15,1.97,0,0,0,0,19,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('390','001',1.07,0,0,48.8,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('391','001',1.85,0.14,1.14,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('391','031',2.77,0,0,0,0,0,24.5,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('392','001',2.688,0.24,1.61,0,0,0,91.3,16.8,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('393','001',1.52,0,0.44,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('394','001',1.31,0.05,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('394','030',0.86,0.03,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('395','001',2.52,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('396','001',1.37,0,1.19,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('397','031',2.26,0,0,0,0,0,29.4,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('398','001',1.17,0.13,1.22,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('399','031',4.14,0,0,0,0,0,24.1,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('400','030',1.86,0.12,0.48,50.1,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('401','001',6.57,0.2,1.57,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('402','001',3.65,0.23,1.7,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('402','004',4.48,134,0,0,0,0,23,28,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('403','001',4.05,0.24,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('404','001',3.07,0.13,1.07,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('405','001',5.31,0.21,1.39,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('406','001',6.38,0.17,1.64,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('407','001',3.12,0.29,3.77,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('408','001',2.51,0.21,1.91,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('409','001',4.34,0.25,3.25,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('409','002',2.4,0.21,2.43,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('410','001',2.67,0.27,2.15,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('411','001',2.66,0.21,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('412','001',1.51,0.09,0.6,43.18,0,0,0,0,48,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('413','001',2.75,0,0,48.7,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('414','001',3.78,0.19,2.7,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('415','001',3.23,0.16,1.8,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('416','001',2.99,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('417','001',2.44,0.11,0.69,0,0,0,0,0,50.15,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('417','002',1.5,0,0,0,0,0,0,0,68.55,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('417','030',1.36,0.06,0.1,44.45,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('418','001',1.8,0.14,0.51,43.8,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('419','030',1.33,0.08,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('420','001',2.1,0.2,2.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('421','001',4.11,0.22,1.3,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('421','002',1.07,0.14,0.68,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('421','030',2.94,0.23,0.88,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('422','001',3.55,0,0,53.3,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('423','001',3.06,0.26,1.72,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('424','001',3.6,0,0,43.2,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('425','001',6.13,0,0,0,0,0,0,0,39.9,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('426','001',1.43,0.1,0.81,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('426','030',1.1,0.04,0.5,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('427','001',1.32,0.1,0.24,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('427','030',0.82,0.04,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('428','031',2.13,0.3,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('429','001',1.67,0.25,3.08,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('430','001',3.92,0.2,0,67.9,0,0,29,0,41.75,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('431','001',1.38,0.1,1.88,54.2,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('432','001',2.74,0.16,2.26,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('433','030',1.91,0.18,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('434','001',1,0.06,0.64,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('435','030',1.07,0.04,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('436','001',3.87,0.19,1.72,44.83,0,0,0,0,36.78,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('436','002',1.48,0.11,1.33,44.02,0,0,0,0,67.63,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('437','001',4.15,0.19,1.65,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('438','001',2.94,0.24,1.25,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('438','030',1.62,0.12,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('439','001',2.97,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('440','001',0.99,0,0,47.35,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('441','001',1.95,0.15,0.85,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('442','001',3.27,0.29,2.65,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('442','002',1.13,0.15,3.34,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('443','001',2.5,0.1,0.94,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('443','030',3.34,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('444','030',3.12,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('445','030',3.13,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('446','001',4.59,0.12,2.03,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('447','001',2.72,0.16,1.09,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('448','001',4.73,0,0,0,0,0,0,0,40.5,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('448','002',1.22,0,0,0,0,0,0,0,73.8,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('449','001',2.22,0.15,1.53,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('450','001',1.76,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('451','001',2.78,0.16,2.41,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('452','001',4.5,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('453','001',4.63,0.36,1.77,45.53,0,0,0,0,46.58,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('454','001',2.81,0,0,43.8,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('455','001',2.64,0,0,0,0,0,35,0,62.5,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('455','002',0.81,0,0,0,0,0,0,0,79.6,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('456','001',1.7,0.13,2.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('457','001',3.1,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('458','010',1.28,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('459','001',2.13,0.29,5.35,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('459','002',1.37,0.27,5.27,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('460','001',3.47,0.18,1.88,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('461','001',2.57,0.13,1.35,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('462','001',2.33,0.2,1.54,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('463','001',1.55,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('464','001',3.01,0.11,1.23,45.4,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('465','001',2.44,0.19,3.47,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('466','010',0.39,0.04,0.7,42,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('467','001',3.99,0.14,0.82,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('468','001',3.32,0.19,1.23,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('469','001',2.82,0.19,1.61,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('470','001',2.94,0,0,45.5,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('471','001',2.5,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('472','001',3.37,0.25,1.5,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('473','001',5.65,0.18,1.4,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('474','031',2.25,0.37,0,29.3,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('475','001',4.85,0.3,0,0,0,0,24.6,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('475','002',2.5,0.39,0,0,0,0,12.3,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('476','001',3.09,0,0,49.03,0,0,88.4,0,37.5,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('477','001',3.72,0.36,0.16,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('478','001',2.36,0.18,0.22,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('478','002',0,0,0,0,0,0,0,0,73.27,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('479','001',3.77,0.24,3.42,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('479','002',1.6,0.2,4.49,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('480','001',1.98,0.19,1.66,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('481','001',4.4,0.26,1.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('482','001',4.45,0.24,1.3,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('483','001',4.15,0.21,1.1,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('484','001',2.97,0.23,5.37,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('485','001',2.54,0.12,1.35,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('486','001',3.47,0.16,1.56,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('487','001',3.31,0.19,1.26,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('488','001',3.95,0.41,4.68,39.01,0,0,0,0,26.6,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('488','002',2,0.2,4.78,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('489','001',3.04,0.15,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('490','001',4.37,0.13,2.7,40.3,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('491','001',3.03,0.16,2.06,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('492','001',3.67,0.15,2.34,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('493','001',2.63,0.19,2.2,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('494','001',1.33,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('495','001',3.43,0.22,3.72,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('496','001',2.63,0.22,5.06,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('496','002',0.63,0.1,3.5,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('497','001',3.68,0.16,2.21,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('498','001',5.1,0.17,3.09,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('499','001',5.13,0.23,3.19,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('500','001',2.5,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('501','001',3.34,0.24,2.49,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('502','001',3.97,0,0,0,0,0,0,0,38.67,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('503','001',3.85,0.17,1.15,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('504','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('505','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('506','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('508','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastfora" VALUES('510','004',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
DROP TABLE IF EXISTS "pastprods";
CREATE TABLE pastprods ( CROP_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , ENERGY DECIMAL(7,3) NULL DEFAULT 0 , PROTEIN DECIMAL(7,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(7,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(7,3) NULL DEFAULT 0 , NDF DECIMAL(7,3) NULL DEFAULT 0 , DIGESTI DECIMAL(7,3) NULL DEFAULT 0 , ANENERGY DECIMAL(7,3) NULL DEFAULT 0 , USDAR VARCHAR(20) NULL DEFAULT 'Without description' , USDAC VARCHAR(20) NULL DEFAULT 'Without description' , SNITROGEN DECIMAL(7,3) NULL DEFAULT 0 , ASH DECIMAL(7,3) NULL DEFAULT 0 , PRIMARY KEY (CROP_COD, PROD_COD)  );
INSERT INTO "pastprods" VALUES('006','022',1.37,0.07,0.62,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('019','022',1.42,0,0,56,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('023','022',1.03,0.13,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('036','022',2.55,0,0,35.9,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('060','022',1.92,0.17,0.9,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('063','022',2.36,0.11,0.87,32.9,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('087','020',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('087','022',1.88,0.1,0.81,34.4,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('116','022',2.5,0,0,52.55,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('134','022',0.22,0.07,0.07,52.15,0,0,30,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('136','022',0.23,0,0,51.8,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('137','022',0.34,0,0,52.05,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('177','022',1.33,0.12,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('179','022',1.4,0.12,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('200','022',1.34,0,0,46.1,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('262','022',1.65,0.12,0.86,35.6,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('270','022',0,0,0.75,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('301','022',2.34,0,0,56.3,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('317','022',1.73,0.09,1.16,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('320','022',2.97,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('369','010',4.19,0.3,1.2,70.5,0,0,95.3,0,26.3,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('369','020',1.87,0,0,70.3,0,0,93.2,0,35,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('404','020',2.3,0.23,1.2,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('412','022',0.97,0.07,0.73,35.4,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('426','029',2,3,4,1,2.5,3.8,2.5,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('488','022',1.2,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
INSERT INTO "pastprods" VALUES('509','013',0,0,0,0,0,0,0,0,0,0,0,NULL,NULL,0,0);
DROP TABLE IF EXISTS "pastures";
CREATE TABLE pastures ( CROP_COD CHAR(3) NOT NULL , CROP_DES VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LZH VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LSW VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LRU VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LPT VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LNL VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LKO VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LJA VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LIT VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LFR VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LES VARCHAR(30) NULL DEFAULT 'Without description' , CROP_LDE VARCHAR(30) NULL DEFAULT 'Without description' , DETAIL CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (CROP_COD) );
INSERT INTO "pastures" VALUES('001','Brachiaria mutica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('002','Brachiaria ruziziensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('003','Brachiaria serrata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('004','Caesalpinia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('005','Cajanus cajan',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('006','Calliandra calothyrsus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('007','Calliandra houstoniana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('008','Calliandra magdalenae',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('009','Calopogonium mucunoides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('010','Canavalia bicarinata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('011','Canavalia brasiliensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('012','Canavalia dictyota',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('013','Canavalia ensiformis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('014','Canavalia eurycarpa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('015','Canavalia gladiata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('016','Canavalia rosea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('017','Canavalia villosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('018','Cenchrus ciliaris',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('019','Centrosema acutifolium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('020','Desmodium sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('021','Desmodium tortuosum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('022','Desmodium triflorum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('023','Desmodium uncinatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('024','Desmodium varians',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('025','Desmodium velutinum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('026','Desmodium zonatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('027','Dicerma sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('028','Dichanthium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('029','Dichrostachys sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('030','Digitaria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('031','Dioclea sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('032','Discolobium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('033','Dolichopsis sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('034','Dolichos sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('035','Dunbaria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('036','Trifolium alexandrium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('037','Dysolobium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('038','Echinochloa polystachya',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('039','Echinochloa sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('040','Eleusine coracana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('041','Enneapogon sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('042','Entada abyssinica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('043','Enterolobium cyclocarpum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('044','Enteropogon macrostachyus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('045','Eragrostis sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('046','Eriochloa fatmensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('047','Eriochloa polystachya',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('048','Eriosema sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('049','Erythrina amazonica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('050','Erythrina berteroana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('051','Erythrina burana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('052','Erythrina costaricensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('053','Erythrina fusca',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('054','Erythrina mitis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('055','Erythrina peruviana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('056','Erythrina poepingiana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('057','Erythrina princeps',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('058','Erythrina sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('059','Exotheca abyssinica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('060','Flemingia macrophylla',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('061','Flemingia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('062','Galactia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('063','Gliricidia sepium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('064','Glycine sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('065','Hardenbergia violacea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('066','Hegnera obcordata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('067','Hemarthria altissima',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('068','Heteropogon contortus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('069','Heteropogon insignis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('070','Hymenachne amplexicaulis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('071','Hyparrhenia anthistirioides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('072','Hyparrhenia rufa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('073','Hyparrhenia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('074','Hyperthelia dissoluta',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('075','Indigofera sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('076','Ischaemum afrum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('077','Ischaemum indicum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('078','Ischaemum magnum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('079','Ixophorus unisetus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('080','Lablab purpureus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('081','Lablab sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('082','Lasiacis sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('083','Leersia hexandra',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('084','Lespedeza cuneata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('085','Leucaena diversifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('086','Leucaena esculenta',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('087','Leucaena leucocephala',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('088','Leucaena pallida',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('089','Leucaena shannoni',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('090','Leucaena sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('091','Lotononis angolensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('092','Lotononis bainesii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('093','Loudetia arundinacea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('094','Loudetia simplex',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('095','Lupinus albus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('096','Machaerium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('097','Macroptilium atropurpureum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('098','Macroptilium lathyroides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('099','Macroptilium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('100','Abarema barbouriana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('101','Abrus sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('102','Acacia angustissima',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('103','Acacia mangium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('104','Acacia saligna',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('105','Acacia sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('106','Adenanthera pavonina',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('107','Adesmia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('108','Aeschynomene histrix',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('109','Aeschynomene sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('110','Alysicarpus sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('111','Andropogon abyssinicus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('112','Andropogon gayanus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('113','Andropogon pseudapricus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('114','Andropogon schirensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('115','Andropogon sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('116','Arachis pintoi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('117','Arachis sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('118','Argyrolobium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('119','Astragalus atropilosulus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('120','Ateleia ovata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('121','Atylosia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('122','Axonopus affinis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('123','Axonopus compressus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('124','Axonopus micay',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('125','Axonopus scoparius',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('126','Barbieria pinnata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('127','Barbieria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('128','Bauhinia sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('129','Bothriochloa bladhii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('130','Bothriochloa insculpta',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('131','Bothriochloa ischaemum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('132','Bouteloua repens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('133','Bouteloua sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('134','Brachiaria brizantha',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('135','Brachiaria decumbens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('136','Brachiaria dictyoneura',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('137','Brachiaria humidicola',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('138','Centrosema angustifolium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('139','Centrosema brasilianum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('140','Centrosema latidens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('141','Centrosema macrocarpum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('142','Centrosema pascuorum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('143','Centrosema plumieri',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('144','Centrosema pubescens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('145','Centrosema virginianum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('146','Chaetocalyx brasiliensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('147','Chaetocalyx scandens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('148','Chamaecrista rotundifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('149','Chamaecrista sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('150','Chamaecytisus palmensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('151','Chamaecytisus sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('152','Chloris barbata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('153','Chloris gayana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('154','Chloris virgata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('155','Christia verspertilionis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('156','Chrysopogon aucheri',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('157','Chrysopogon sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('158','Clitoria dendrina',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('159','Clitoria fairchildiana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('160','Clitoria falcata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('161','Clitoria guianensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('162','Clitoria javitensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('163','Clitoria laurifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('164','Clitoria macrophylla',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('165','Clitoria ternatea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('166','Codariocalyx gyroides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('167','Codariocalyx motorius',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('168','Codariocalyx sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('169','Coix lacryma-jobi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('170','Coix sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('171','Coursetia caribaea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('172','Coursetia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('173','Cratylia argentea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('174','Cratylia mollis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('175','Cratylia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('176','Crescentia alata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('177','Crotalaria incana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('178','Crotalaria juncea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('179','Crotalaria ochroleuca',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('180','Crotalaria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('181','Cymbopogon cytratus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('182','Cymbopogon nardus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('183','Cynodon aethiopicus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('184','Cynodon dactylon',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('185','Cynodon nlemfuensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('186','Cynodon plectostachyus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('187','Cynodon sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('188','Dactyloctenium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('189','Dalea sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('190','Dendrolobium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('191','Derris sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('192','Desmanthus sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('193','Desmodium heterophyllum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('194','Desmodium intortum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('195','Desmodium macrodesmum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('196','Desmodium microphyllum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('197','Macrotyloma axillare',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('198','Macrotyloma sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('199','Macrotyloma uniflorum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('200','Medicago sativa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('201','Medicago sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('202','Melinis minutiflora',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('203','Millettia extensa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('204','Mimosa nuda',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('205','Mimosa polycarpa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('206','Mimosa pudica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('207','Mimosa sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('208','Mimosopsis quitensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('209','Mucuna pruriens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('210','Mucuna sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('211','Neonotonia wightii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('212','Neptunia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('213','Ottochloa nodosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('214','Pachecoa prismatica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('215','Pachyrhizus sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('216','Panicum maximum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('217','Panicum sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('218','Paraserianthes falcataria',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('219','Paraserianthes lophanta',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('220','Parkinsonia aculeata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('221','Parmentiera cereifera',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('222','Parosela glandulosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('223','Paspalum dilatatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('224','Paspalum fasciculatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('225','Paspalum notatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('226','Paspalum pilosum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('227','Paspalum plicatulum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('228','Paspalum secans',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('229','Paspalum sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('230','Paspalum virgatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('231','Pennisetum clandestinum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('232','Pennisetum glaucum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('233','pennisetum purpureum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('234','Pennisetum sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('235','Pennisetum sphacelatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('236','Periandra sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('237','Phaseolus coccineus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('238','Phaseolus lunatus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('239','Phaseolus sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('240','Phyllodium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('241','Piliostigma thonningii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('242','Piptadenia flava',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('243','Piptadenia obliqua',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('244','Piptadeniopsis lomentifera',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('245','Podocarpium repandum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('246','Poiretia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('247','Prosopis juliflora',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('248','Pueraria phaseoloides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('249','Pueraria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('250','Pycnospora lutescens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('251','Pycnospora sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('252','Rhynchelytrum repens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('253','Rhynchosia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('254','Rottboellia cochinchinensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('255','Schizolobium parahyba',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('256','Schmidtia pappophoroides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('257','Secale sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('258','Senna mutisiana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('259','Senna occidentalis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('260','Senna pallida',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('261','Senna polyphylla',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('262','Senna siamea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('263','Senna silvestris',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('264','Senna sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('265','Senna spectabilis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('266','Sesbania bispinosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('267','Senna velutina',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('268','Sesbania grandiflora',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('269','Sesbania rostrata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('270','Sesbania sesban',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('271','Sesbania sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('272','Sesbania virgata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('273','Setaria barbata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('274','Setaria parviflora',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('275','Setaria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('276','Setaria sphacelata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('277','Shuteria vestita',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('278','Sinodolichos lagopus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('279','Smithia elliotii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('280','Smithia sensitiva',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('281','Smithia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('282','Snowdenia polystachya',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('283','Soemmeringia semperflorens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('284','Soemmeringia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('285','Sorghum arundinaceum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('286','Sorghum nitidum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('287','Sorghum sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('288','Sorghum versicolor',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('289','Sporobolus fimbriatus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('290','Sporobolus pyramidalis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('291','Sporobolus sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('292','Stenotaphrum secundatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('293','Stenotaphrum sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('294','Stereochlaena cameronii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('295','Strophostyles helvula',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('296','Stylosanthes acuminata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('297','Stylosanthes angustifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('298','Stylosanthes aurea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('299','Stylosanthes biflora',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('300','Stylosanthes bracteata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('301','Stylosanthes capitata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('302','Stylosanthes fruticosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('303','Stylosanthes gracilis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('304','Stylosanthes grandifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('305','Stylosanthes guianensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('306','Stylosanthes hamata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('307','Stylosanthes macrocephala',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('308','Stylosanthes mexicana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('309','Stylosanthes pilosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('310','Stylosanthes scabra',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('311','Stylosanthes sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('312','Stylosanthes subsericea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('313','Stylosanthes sympodialis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('314','Stylosanthes viscosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('315','Tadehagi sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('316','Tadehagi triquetrum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('317','Tephrosia vogelii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('318','Tephrosia sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('319','Tephrosia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('320','Tephrosia vogelii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('321','Teramnus sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('322','Teramnus uncinatus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('323','Teramnus volubilis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('324','Tetrapogon cenchriformis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('325','Teyleria koordersii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('326','Teyleria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('327','Themeda triandra',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('328','Trifolium baccarinii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('329','Trifolium burchellianum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('330','Trifolium mattirolianum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('331','Trifolium quartinianum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('332','Trifolium repens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('333','Trifolium rueppellianum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('334','Trifolium semipilosum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('335','Trifolium simense',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('336','Trifolium somalense',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('337','Trifolium sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('338','Trifolium tembense',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('339','Trifolium usambarense',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('340','Tripsacum latifolium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('341','Tripsacum laxum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('342','Tripsacum pilosum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('343','Tristachya nodiglumis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('344','Uraria lagopodoides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('345','Uraria picta',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('346','Uraria rufescens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('347','Uraria sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('348','Urochloa mosambicensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('349','Urochloa oligotricha',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('350','Urochloa panicoides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('351','Urochloa sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('352','Urochloa trichopus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('353','Vetiveria zizanioides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('354','Vicia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('355','Vigna sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('356','Vigna trilobata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('357','Zapoteca sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('358','Zornia sp.',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('359','Gmelina arborea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('360','Calliandra sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('361','Mimosa colombiana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('362','Acacia aneura',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('363','Acacia auriculiformis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('364','Acacia boliviana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('365','Acacia mearnsii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('366','Acacia nilotica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('367','Acacia polyacantha',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('368','Acacia seyal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('369','Acacia tortilis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('370','Acanthus eminens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('371','Acanthus pubescens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('372','Acanthus eminens',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('373','Acioa barteri',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('374','Acrocarpus fraxinfolius',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('375','Aeschynomene afraspera',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('376','Albizia lebbeck',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('377','Albizia chinensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('378','Albizia falcataria',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('379','Albizia saman',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('380','Albizia schimperiana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('381','Alchornea cordifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('382','Alnus acuminata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('383','Anthonata macrophylla',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('384','Apuleia leiocarpa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('385','Ateleia sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('386','Avena stigosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('387','Azadirachta indica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('388','Balanites aegyptiaca',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('389','Bambusa vulgaris',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('390','Brachystegia spiciformis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('391','Bridelia micrantha',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('392','Cassia siamea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('393','Casuarina cadodes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('394','Casuarina equisetifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('395','Centrolobium ochroxylum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('396','Chromolaena odorata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('397','Commiphora zimmermanii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('398','Cordia abyssinica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('399','Cordia africana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('400','Cratylia floribunda',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('401','Crotalaria agatifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('402','Crotalaria anagiroide',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('403','Crotalaria capilla',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('404','Crotalaria grahamiana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('405','Crotalaria mucronata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('406','Crotalaria striata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('407','Croton macrostachyus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('408','Croton megalocarpus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('409','Croton macrostachyus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('410','Croton megalocarpus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('411','Croton sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('412','Dactyladenia barteri',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('413','Delonix regia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('414','Desmodium discolor',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('415','Desmodium distortum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('416','Desmodium gyroides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('417','Desmodium ovalifolium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('418','Dialium guineese',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('419','Dijidium sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('420','Dodonea viscosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('421','Dolichos lablab',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('422','Erythrina abyssinica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('423','Erythrina caffra',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('424','Erythrina lithosperma',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('425','Erythrina varigata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('426','Eucalyptus sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('427','Eucalyptus camaldulensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('428','Fagopyrum esculentum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('429','Ficus sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('430','Gliricidia maculata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('431','Grevillea robusta',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('432','Grewia bicolar',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('433','Guizotia scabra',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('434','Hakea saligna',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('435','Hibiscus sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('436','Indigofera constricta',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('437','Indigofera tintorea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('438','Inga edulis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('439','Inga sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('440','Julbernardia globiflora',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('441','Lannea omufuogo',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('442','Lantana camara',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('443','Leucaena collinsii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('444','Leucaena salvadorensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('445','Leucaena zacapana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('446','Lupinus angustifolium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('447','Maesopsis eminii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('448','Manihot gaziovii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('449','Markhamia lutea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('450','Medicago scutellata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('451','Morus alba',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('452','Mucuna cochichinensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('453','Mucuna deeringiana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('454','Myroxylon balsamum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('455','Peltophorum pterocarpa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('456','Pennisetum americanum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('457','Perocopsis angolensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('458','Phaseolus aureus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('459','Plectranthus barbatus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('460','Prosopis chilensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('461','Prosopis nigra',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('462','Psidium guajava',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('463','Pteridium aquilinum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('464','Pterocarpus santalinoides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('465','Rhus natelensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('466','Saccharum officinarum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('467','Samanea saman',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('468','Sapium sebiferum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('469','Schinus molle',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('470','Schizolobium amazonicum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('471','Senna reticulata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('472','Senna rotundifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('473','Senna striata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('474','Sesbania aculeata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('475','Sesbania bispinosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('476','Sesbania goetzei',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('477','Sesbania leptpocarpa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('478','Sesbania macrantha',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('479','Solanecio manannii',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('480','Spathodea canipulata',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('481','Stizolobium aterrimum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('482','Stizolobium deerigianun',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('483','Stizolobium niveum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('484','Symphytum asperum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('485','Tamarindus indica',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('486','Tephrosia candia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('487','Tipuana tipu',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('488','Tithonia diversifolia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('489','Trifolia vesiculosum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('490','Trifolium alexandrium',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('491','Trifolium hirsutum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('492','Trifolium incarnatum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('493','Trifolium subterraneum',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('494','Vapaka sp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('495','Vernonia amygdalina',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('496','Vernonia auriculifera',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('497','Vicia benghalensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('498','Vicia dasycarpa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('499','Vicia villosa',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('500','Vigna sinensis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('501','Vitis vinifera',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('502','Sesbania macrantha',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('503','Tephrosia candida',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('504','Dicathium Annulatum Stapf',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('505','Andropogon Annulutus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
INSERT INTO "pastures" VALUES('506','Diodia Scanden',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N');
INSERT INTO "pastures" VALUES('507','Tropical sabana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Y');
INSERT INTO "pastures" VALUES('508','Native grassland, Bolivia',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Y');
INSERT INTO "pastures" VALUES('509','Mixed native grassland',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Y');
INSERT INTO "pastures" VALUES('510','Brachiaria miliformis',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N');
INSERT INTO "pastures" VALUES('511','Zim native pasture',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Y');
INSERT INTO "pastures" VALUES('512','Sahelian grassland type a',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Y');
INSERT INTO "pastures" VALUES('513','Native grassland - Vihiga',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Y');
DROP TABLE IF EXISTS "periods";
CREATE TABLE periods ( period_id CHAR(2) NOT NULL , period_des VARCHAR(60) NULL , period_jan CHAR(1) NULL DEFAULT 'F' , period_feb CHAR(1) NULL DEFAULT 'F' , period_mar CHAR(1) NULL DEFAULT 'F' , period_apr CHAR(1) NULL DEFAULT 'F' , period_may CHAR(1) NULL DEFAULT 'F' , period_jun CHAR(1) NULL DEFAULT 'F' , period_jul CHAR(1) NULL DEFAULT 'F' , period_aug CHAR(1) NULL DEFAULT 'F' , period_sep CHAR(1) NULL DEFAULT 'F' , period_oct CHAR(1) NULL DEFAULT 'F' , period_nov CHAR(1) NULL DEFAULT 'F' , period_dec CHAR(1) NULL DEFAULT 'F' , PRIMARY KEY (period_id) );
DROP TABLE IF EXISTS "plotgpspos";
CREATE TABLE plotgpspos ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , POINT_COD CHAR(3) NOT NULL , longitude DECIMAL(12,9) NULL , latitude DECIMAL(12,9) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, POINT_COD)  );
DROP TABLE IF EXISTS "plotlabour";
CREATE TABLE plotlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,2) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "plotman";
CREATE TABLE plotman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL , pricemanday DECIMAL(12,3) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD)  );
DROP TABLE IF EXISTS "plotmanfert";
CREATE TABLE plotmanfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, NMONTH, FERTYP_COD)  );
DROP TABLE IF EXISTS "plotmanheap";
CREATE TABLE plotmanheap ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , HEAP_COD CHAR(3) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , QTYAPP DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, NMONTH, HEAP_COD)  );
DROP TABLE IF EXISTS "plotmanlabour";
CREATE TABLE plotmanlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, PERS_COD)  );
DROP TABLE IF EXISTS "plotmanperiods";
CREATE TABLE plotmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , TIM CHAR(1) NULL DEFAULT 'N' , QTY DECIMAL(12,3) NULL DEFAULT 0 , PRI DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, period_id)  );
DROP TABLE IF EXISTS "plotmanprchfert";
CREATE TABLE plotmanprchfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, FERTYP_COD)  );
DROP TABLE IF EXISTS "plotmanprchfertperiods";
CREATE TABLE plotmanprchfertperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , QTY DECIMAL(12,3) NULL DEFAULT 0 , PRI DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, FERTYP_COD, period_id)  );
DROP TABLE IF EXISTS "plotmantim";
CREATE TABLE plotmantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PLANDENS DECIMAL(12,3) NULL DEFAULT 0 , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, ACTY_COD, NMONTH)  );
DROP TABLE IF EXISTS "plotpaddoks";
CREATE TABLE plotpaddoks ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , PORCTOT DECIMAL(3,0) NULL DEFAULT 0 , LANDCOVER DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD)  );
DROP TABLE IF EXISTS "plotpaddspe";
CREATE TABLE plotpaddspe ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , CUTCARRY CHAR(1) NULL DEFAULT 'N' , NSEA1 DECIMAL(12,3) NULL DEFAULT 0 , NSEA2 DECIMAL(12,3) NULL DEFAULT 0 , NSEA3 DECIMAL(12,3) NULL DEFAULT 0 , NSEA4 DECIMAL(12,3) NULL DEFAULT 0 , PSEA1 DECIMAL(12,3) NULL DEFAULT 0 , PSEA2 DECIMAL(12,3) NULL DEFAULT 0 , PSEA3 DECIMAL(12,3) NULL DEFAULT 0 , PSEA4 DECIMAL(12,3) NULL DEFAULT 0 , KSEA1 DECIMAL(12,3) NULL DEFAULT 0 , KSEA2 DECIMAL(12,3) NULL DEFAULT 0 , KSEA3 DECIMAL(12,3) NULL DEFAULT 0 , KSEA4 DECIMAL(12,3) NULL DEFAULT 0 , CSEA1 DECIMAL(12,3) NULL DEFAULT 0 , CSEA2 DECIMAL(12,3) NULL DEFAULT 0 , CSEA3 DECIMAL(12,3) NULL DEFAULT 0 , CSEA4 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA1 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA2 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA3 DECIMAL(12,3) NULL DEFAULT 0 , DMSEA4 DECIMAL(12,3) NULL DEFAULT 0 , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , landcover DECIMAL(12,3) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD)  );
DROP TABLE IF EXISTS "plotpaddspedt";
CREATE TABLE plotpaddspedt ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , CROPD_COD CHAR(3) NOT NULL , LANDCOVER DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, CROPD_COD)  );
DROP TABLE IF EXISTS "plotpaddspelabour";
CREATE TABLE plotpaddspelabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMPADD CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMPADD, CROP_COD, PERS_COD)  );
DROP TABLE IF EXISTS "plotseasons";
CREATE TABLE plotseasons ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , PORCTOT DECIMAL(3,0) NULL DEFAULT 0 , INTER CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON)  );
DROP TABLE IF EXISTS "plotseasonsperiods";
CREATE TABLE plotseasonsperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , period_id CHAR(2) NOT NULL , grw CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, period_id)  );
DROP TABLE IF EXISTS "products";
CREATE TABLE products ( PROD_COD CHAR(3) NOT NULL , PROD_DES VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LZH VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LZW VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LRU VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LPT VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LNL VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LKO VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LJA VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LIT VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LFR VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LES VARCHAR(30) NULL DEFAULT 'Without description' , PROD_LDE VARCHAR(30) NULL DEFAULT 'Without description' , INDNANIM CHAR(1) NULL DEFAULT 'N' , INDWEIGHT CHAR(1) NULL DEFAULT 'N' , INDPRICE CHAR(1) NULL DEFAULT 'Y' , INDQTY CHAR(1) NULL DEFAULT 'Y' , HHCONS CHAR(1) NULL DEFAULT 'Y' , BYCATE CHAR(1) NULL DEFAULT 'N' , PRIMARY KEY (PROD_COD) );
INSERT INTO "products" VALUES('001','Milk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('002','Chesse,hard',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('003','Butter',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('004','Calves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('005','Whole animals_culled',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('006','Meat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('007','Manure',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('008','Hides',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('009','Beeswax',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('010','Fur skins',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('011','Fleece',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('012','Hair',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('013','Honey',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('014','Offals',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('015','Wool',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('016','Silk',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('017','Cocoons',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('018','Whey',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('019','Fish',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('020','Lambs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('021','Kids',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('022','Veal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('024','Whole animals_mature',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('025','Chicken',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('026','Whole animals_young',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('027','Eggs',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('028','Feathers',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('029','Piglets',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('030','Whole',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('031','Cheese, semi-soft',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('032','Cheese, soft',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
INSERT INTO "products" VALUES('034','Yogurth',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'N','N','Y','Y','Y','N');
DROP TABLE IF EXISTS "project";
CREATE TABLE project ( project_id INT NOT NULL  , project_des VARCHAR(120) NULL , project_sdate DATE NULL , project_edate DATE NULL , project_mdata BLOB NULL , project_language CHAR(4) NULL , project_nperiods INT NULL , project_perioddesc VARCHAR(120) NULL , PRIMARY KEY (project_id) );
DROP TABLE IF EXISTS "restypes";
CREATE TABLE restypes ( RES_COD CHAR(3) NOT NULL , RES_CAT VARCHAR(60) NULL DEFAULT 'Without category' , RES_DES VARCHAR(60) NULL DEFAULT 'Without description' , RES_LZH VARCHAR(60) NULL DEFAULT 'Without description' , RES_LSW VARCHAR(60) NULL DEFAULT 'Without description' , RES_LRU VARCHAR(60) NULL DEFAULT 'Without description' , RES_LPT VARCHAR(60) NULL DEFAULT 'Without description' , RES_LNL VARCHAR(60) NULL DEFAULT 'Without description' , RES_LKO VARCHAR(60) NULL DEFAULT 'Without description' , RES_LJA VARCHAR(60) NULL DEFAULT 'Without description' , RES_LIT VARCHAR(60) NULL DEFAULT 'Without description' , RES_LFR VARCHAR(60) NULL DEFAULT 'Without description' , RES_LES VARCHAR(60) NULL DEFAULT 'Without description' , RES_LDE VARCHAR(60) NULL DEFAULT 'Without description' , NITROGEN DECIMAL(7,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(7,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(7,3) NULL DEFAULT 0 , CARBON DECIMAL(7,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(7,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(7,3) NULL DEFAULT 0 , NDF DECIMAL(7,3) NULL DEFAULT 0 , DIGESTI DECIMAL(7,3) NULL DEFAULT 0 , ENERGY DECIMAL(7,3) NULL DEFAULT 0 , PRIMARY KEY (RES_COD) );
INSERT INTO "restypes" VALUES('001',NULL,'Rice bran',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('002','Energy feeds','Barley grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.55,0.36,0.51,0,88,10.8,17.5,0,12.585);
INSERT INTO "restypes" VALUES('003','Energy feeds','Beet pulp',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.44,0.1,0.49,0,90,9,42.8,0,17.03);
INSERT INTO "restypes" VALUES('004','Energy feeds','Canola meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,6.24,1.17,1.38,0,90.43,39,26.64,0,19.79);
INSERT INTO "restypes" VALUES('005','Energy feeds','Cassava meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.416,0.17,0.75,0,88,2.6,9.5,0,0);
INSERT INTO "restypes" VALUES('006','Energy feeds','Citrus pulp, dried',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.134,0.1,0.93,0,89.46,7.09,20.45,0,17.43);
INSERT INTO "restypes" VALUES('007','Energy feeds','Coffee residue, dried',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('008','Energy feeds','Coffee residue, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.43,0.38,0.93,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('009','Energy feeds','Corn dry ear',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('010','Energy feeds','Corn dry grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.472,0.25,0.32,0,88,9.2,10,0,0);
INSERT INTO "restypes" VALUES('011','Energy feeds','Corn flaked grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.635,0.08,0,0,90.78,10.22,0,0,0);
INSERT INTO "restypes" VALUES('012','Energy feeds','Corn High misture grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('013','Energy feeds','Corn hominy',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('014','Energy feeds','Fodder beet, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.051,0.18,0,0,16.76,6.57,13.59,0,16);
INSERT INTO "restypes" VALUES('015','Energy feeds','Maize fibre',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('016','Energy feeds','Maize gluten feed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('017','Energy feeds','Maize grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.558,0.3,0.37,0,86.47,9.74,12.04,0,18.74);
INSERT INTO "restypes" VALUES('018','Energy feeds','Milo ground',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('019','Energy feeds','Milo HM or flake',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('020','Energy feeds','Molasses',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,74,0,0,0,0);
INSERT INTO "restypes" VALUES('021','Energy feeds','Molasses beet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.296,0.02,5.07,0,75.63,14.35,0,0,15.33);
INSERT INTO "restypes" VALUES('022','Energy feeds','Molasses Sugarcane',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.885,0.08,5.41,0,72.91,5.53,0.8,0,15.23);
INSERT INTO "restypes" VALUES('023','Energy feeds','Oats grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.776,0.36,0.52,0,87.98,11.1,34.95,0,19.36);
INSERT INTO "restypes" VALUES('024','Energy feeds','Olive pulp meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('025','Energy feeds','Pectin extracted fruits',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('026','Energy feeds','Potato, processing waste',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('027','Energy feeds','Potatoes, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.734,0.21,2.36,0,20.09,10.84,7.3,0,17.12);
INSERT INTO "restypes" VALUES('028','Energy feeds','Rice bran meal, expelled',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('029','Energy feeds','Rice bran meal, extracted',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('030','Energy feeds','Rye grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.648,0.34,0.23,0,87.26,10.3,13.39,0,18.12);
INSERT INTO "restypes" VALUES('031','Energy feeds','Sainfoin, dried',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,92.5,0,32.4,0,0);
INSERT INTO "restypes" VALUES('032','Energy feeds','Sorghum grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.738,0.32,0.43,0,86.42,10.86,11.33,0,18.69);
INSERT INTO "restypes" VALUES('033','Energy feeds','Soybean hulls',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.235,0.15,1.34,0,89.27,13.97,62.76,0,17.87);
INSERT INTO "restypes" VALUES('034','Energy feeds','Sugar beet feed, dried, molassed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('035','Energy feeds','Sugar beet feed, dried, unmolassed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('036','Energy feeds','Sugar beet feed, ensiled',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('037','Energy feeds','Sugar beet feed, molassed, ensiled',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('038','Energy feeds','Sugar beet feed, pressed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('039','Energy feeds','Sugar beet feed, pressed, molassed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('040','Energy feeds','Swedes',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('041','Energy feeds','Triticales grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.891,0.4,0.58,0,87.22,11.82,13.88,0,18.29);
INSERT INTO "restypes" VALUES('042','Energy feeds','Wheat bran',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.528,1.09,1.1,0,88,15.8,42.8,0,0);
INSERT INTO "restypes" VALUES('043','Energy feeds','Wheat feed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.24,0.9,1.02,0,88,14,27.1,0,0);
INSERT INTO "restypes" VALUES('044','Energy feeds','Wheat grain',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.76,0.35,0.41,0,88,11,10.5,0,0);
INSERT INTO "restypes" VALUES('045','Energy feeds','Wheat ground',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.859,0.32,0,0,85.99,11.62,16.1,0,18.27);
INSERT INTO "restypes" VALUES('046','Energy feeds','Wheat straw',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.674,0.07,0.93,0,91.29,4.21,79.51,0,17.69);
INSERT INTO "restypes" VALUES('047','Energy feeds','Wheat middlings',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.864,0.99,1.33,0,87.7,17.9,35.07,0,19.1);
INSERT INTO "restypes" VALUES('048','Energy feeds','Wheat offals',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('049','Forage','Banana leaves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.16,0.03,1.19,0,94,0,55.7,0,0);
INSERT INTO "restypes" VALUES('051','Forage','Napier grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('052','Forage','Setaria grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('053','Forage','Rhodes grass (green)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.408,0,0,0,24.03,8.8,0,0,0);
INSERT INTO "restypes" VALUES('054','Hay/straw','Barley straw',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.7,0.1,2.1,0,88,3.33,82.06,44.8,17.47);
INSERT INTO "restypes" VALUES('055','Hay/straw','Bean canadian wonder straw',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('056','Hay/straw','Belabela bean straw',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('057','Hay/straw','Rhodes grass (hay)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.784,0,0,0,91,4.9,0,0,0);
INSERT INTO "restypes" VALUES('058','Protein suplement','Alfalfa meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.5,0.26,1.9,0.02,90,15.3,41.8,2,1.3);
INSERT INTO "restypes" VALUES('059','Protein supplements','Bloodmeal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,14.16,0.24,0.85,0,94.07,88.5,0,0,22.49);
INSERT INTO "restypes" VALUES('060','Protein supplements','brewers grains dry',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,4.186,0.63,0.29,0,91.92,26.16,57.15,0,19.65);
INSERT INTO "restypes" VALUES('061','Protein supplements','brewers grains wet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,4.086,0.57,0.16,0,26.71,25.54,44.75,0,21.43);
INSERT INTO "restypes" VALUES('062','Protein supplements','corn distillations dry',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,4.491,0.99,1.23,0,87.97,28.07,39.81,0,20.46);
INSERT INTO "restypes" VALUES('063','Protein supplements','corn distillations wet',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,4.368,0,0,0,31.35,27.3,45.65,0,0);
INSERT INTO "restypes" VALUES('064','Protein supplements','cottonseed meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('065','Protein supplements','cottonseed whole',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,3.36,0,0,0,93,21,0,0,8.432);
INSERT INTO "restypes" VALUES('066','Protein supplements','feathermeal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,13.675,0.56,0.15,0,92.08,85.47,55.83,0,23.31);
INSERT INTO "restypes" VALUES('067','Protein supplements','fishmeal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,11.222,2.93,0.91,0,92.69,70.14,8.75,0,20.84);
INSERT INTO "restypes" VALUES('068','Protein supplements','Groundnut meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,8.614,0.58,1.38,0,89.42,53.84,19.66,0,20.18);
INSERT INTO "restypes" VALUES('069','Protein supplements','linseed meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('070','Protein supplements','Linseed meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('071','Protein supplements','Maize germ meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.904,0,0,0,88.68,18.15,38.21,0,19.63);
INSERT INTO "restypes" VALUES('072','Protein supplements','Maize gluten meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,90,0,0,0,0);
INSERT INTO "restypes" VALUES('073','Protein supplements','Malt culms',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('074','Protein supplements','Meat and bone meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,8.318,6.54,0,0,94.87,51.99,0,0,0);
INSERT INTO "restypes" VALUES('075','Protein supplements','Palm kernel meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('076','Protein supplements','Pot ale syrup',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('077','Protein supplements','Poultry offal meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,9.515,1.09,0.42,0,92.29,59.47,0,0,23.01);
INSERT INTO "restypes" VALUES('078','Protein supplements','Rapeseed meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,6.138,1.27,1.65,0,88.61,38.36,31.06,0,19.31);
INSERT INTO "restypes" VALUES('079','Protein supplements','Sesame cake',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('080','Protein supplements','Soyabean meal extracted, dehulled',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('081','Protein supplements','Soyabean meal, extracted',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('082','Protein supplements','Soyabean, full fat',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('083','Protein supplements','Soybean meal 44',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,7.933,0.71,2.36,0,88,49.58,15.12,0,19.37);
INSERT INTO "restypes" VALUES('084','Protein supplements','Soybean meal 49',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,8.432,0.74,2.05,0,88.16,52.7,9.56,0,0);
INSERT INTO "restypes" VALUES('085','Protein supplements','Soybeans heated',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('086','Protein supplements','Soybeans raw',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,5.904,0.56,1.7,0,90,36.9,11.7,0,0);
INSERT INTO "restypes" VALUES('087','Protein supplements','Sunflower seed meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,4.939,1.09,1.63,0,89.08,30.87,44.33,0,19.62);
INSERT INTO "restypes" VALUES('088','Protein supplements','Urea',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,99.55,0,0,0,0);
INSERT INTO "restypes" VALUES('089','Silage','Maize silage',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0.26,1.39,0,0,8.19,44.68,0,18.92);
INSERT INTO "restypes" VALUES('090','Stover','Maize stover tops',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('091','Stover','Maize stover. 30 g urea on Kilima',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('092','Stover','Maize stover. 30 g urea on Malawi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('093','Stover','Maize stover. 50 g urea treated Kilima',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('094','Stover','Maize stover. 50 g urea treated Malawi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('095','Stover','Maize stover. Dry Kilima',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('096','Stover','Maize stover. Dry Malawi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('097','Stover','Maize stover. Green Kilima',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('098','Stover','Maize stover. Green Malawi',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('099','Energy feed','dairy meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('102','Energy feed','Maize Bran',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.995,0.34,1,0,87.85,12.47,34.51,0,19.64);
INSERT INTO "restypes" VALUES('105','Forage','Green Grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('106','Enerfy feed','Rice Bran',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.16,1.6,1.6,0,90,13.5,21.1,0,0);
INSERT INTO "restypes" VALUES('110','Forage','Vegetable waste',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('111','Minerals','Mineral Mixture',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('112','Protein suplement','Coconut Meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('113','Hay/straw','Kikuyu grass',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('114','Enerfy feed','Paddy',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.312,0.3,0.33,0,86.32,8.2,0,0,17.11);
INSERT INTO "restypes" VALUES('115','Enerfy feed','Coconut Poonut',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('116','Protein suplement','Termites',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('117','Protein suplement','Guar',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,6,2,7,3,8,4,9,5);
INSERT INTO "restypes" VALUES('118','Protein suplement','Cow Peas Haulms',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.8,0,0,0,0,17.5,0,0,8.91);
INSERT INTO "restypes" VALUES('119','Energy feed','seed-oil meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.4,0,0,0,0,0,0,0,14.201);
INSERT INTO "restypes" VALUES('120','Protein suplement','fresh guar (aerial part, prebloom)',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.56,0.1,0,0,0,16,0,0,7.36);
INSERT INTO "restypes" VALUES('121','Protein suplement','guar meal',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,6.931,0.57,0,0,94.6,43.32,0,0,20.28);
INSERT INTO "restypes" VALUES('122','Hay/straw','Kikuyu grass, dried, aerial part',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,3.053,0.43,0,0,94.95,19.08,0,0,0);
INSERT INTO "restypes" VALUES('123','Protein supplements','linseed meal, expeller extraction',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,5.467,0.91,1.18,0,90.34,34.17,23.57,0,22.4);
INSERT INTO "restypes" VALUES('124','Protein supplements','linseed meal, solvent extraction',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,5.806,0.9,1.16,0,88.65,36.29,0,0,19.94);
INSERT INTO "restypes" VALUES('125','Energy feed','Maize dry ear',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.395,0.26,0,0,89.68,8.72,23.39,0,0);
INSERT INTO "restypes" VALUES('126','Stover','Maize stover fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.122,0,0,0,29.4,7.01,64.95,0,0);
INSERT INTO "restypes" VALUES('127','Stover','Maize stover urea treated',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.632,0,0,0,54.1,10.2,0,0,0);
INSERT INTO "restypes" VALUES('128','Stover','Maize stover dry',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.806,0,0,0,93.93,5.04,73.83,50.6,0);
INSERT INTO "restypes" VALUES('129','Forage','Napier grass, aerial part, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.627,0.31,0,0,19.6,10.17,70.95,0,0);
INSERT INTO "restypes" VALUES('130','Protein supplements','Palm kernel meal, expeller extraction',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,2.63,0.62,0.7,0,90.91,16.44,70.86,0,20.14);
INSERT INTO "restypes" VALUES('131','Energy feeds','Pectin extracted citrus',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.144,0,0,0,92.1,0.9,0,0,0);
INSERT INTO "restypes" VALUES('132','Energy feeds','Mashed potatoes, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.064,0.2,0,0,24.7,0.4,0,0,0);
INSERT INTO "restypes" VALUES('133','Energy feeds','Sugar beet feed, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.176,0,0,0,24.1,7.35,10.8,0,16.28);
INSERT INTO "restypes" VALUES('134','Energy feeds','Sugar beet feed, steam-cooked',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0.992,0,0,0,19.9,6.2,0,0,16.28);
INSERT INTO "restypes" VALUES('135','Energy feeds','Swede root, fresh',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1.438,0.26,1.87,0,10.56,8.99,14.02,0,17.3);
INSERT INTO "restypes" VALUES('136','Energy feeds','wheat gluten feed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,91.85,14.19,0,0,0);
INSERT INTO "restypes" VALUES('137','Forage','Cassava peel',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('138','Forage','Plantain leaves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('139','Forage','Cassava leaves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('140','Forage','Local tree leaves',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('141','Forage','Grass local',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('142',NULL,'Grazing, local',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('143',NULL,'Salt',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
INSERT INTO "restypes" VALUES('144','Enerfy feed','Commercial chicken feed',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,0,0,0,0,0,0,0,0,0);
DROP TABLE IF EXISTS "soil";
CREATE TABLE soil ( SOIL_COD VARCHAR(5) NOT NULL , LOCA_DES VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LZH VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LSW VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LRU VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LPT VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LNL VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LKO VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LJA VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LIT VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LFR VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LES VARCHAR(30) NULL DEFAULT 'Without description' , LOCA_LDE VARCHAR(30) NULL DEFAULT 'Without description' , USDA_DES VARCHAR(30) NULL DEFAULT 'Without description' , FAO_DES VARCHAR(30) NULL DEFAULT 'Without description' , PRIMARY KEY (SOIL_COD) );
INSERT INTO "soil" VALUES('CL','Clay',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Clay','Clay');
INSERT INTO "soil" VALUES('CLLO','Clay loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Clay loam','Clay loam');
INSERT INTO "soil" VALUES('CLOSA','Coarse loamy sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Coarse loamy sand','Coarse loamy sand');
INSERT INTO "soil" VALUES('CSA','Coarse sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Coarse sand','Coarse sand');
INSERT INTO "soil" VALUES('CSALO','Coarse sandy loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Coarse sandy loam','Coarse sandy loam');
INSERT INTO "soil" VALUES('CSI','Coarse silt',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Coarse silt','Coarse silt');
INSERT INTO "soil" VALUES('FLO','Fine loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fine loam','Fine loam');
INSERT INTO "soil" VALUES('FLOSA','Fine loamy sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fine loamy sand','Fine loamy sand');
INSERT INTO "soil" VALUES('FSA','Fine sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fine sand','Fine sand');
INSERT INTO "soil" VALUES('FSALO','Fine sandy loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Fine sandy loam','Fine sandy loam');
INSERT INTO "soil" VALUES('LO','Loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Loam','Loam');
INSERT INTO "soil" VALUES('LOSA','Loamy sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Loamy sand','Loamy sand');
INSERT INTO "soil" VALUES('SA','Sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sand','Sand');
INSERT INTO "soil" VALUES('SACL','Sandy clay',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sandy clay','Sandy clay');
INSERT INTO "soil" VALUES('SACLL','Sandy clay loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sandy clay loam','Sandy clay loam');
INSERT INTO "soil" VALUES('SALO','Sandy loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Sandy loam','Sandy loam');
INSERT INTO "soil" VALUES('SI','Silt',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Silt','Silt');
INSERT INTO "soil" VALUES('SICL','Silty clay',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Silty clay','Silty clay');
INSERT INTO "soil" VALUES('SICLL','Silty clay loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Silty clay loam','Silty clay loam');
INSERT INTO "soil" VALUES('SILO','Silty loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Silty loam','Silty loam');
INSERT INTO "soil" VALUES('VFLOS','Very fine loamy sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Very fine loamy sand','Very fine loamy sand');
INSERT INTO "soil" VALUES('VFSA','Very fine sand',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Very fine sand','Very fine sand');
INSERT INTO "soil" VALUES('VFSAL','Very fine sandy loam',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'Very fine sandy loam','Very fine sandy loam');
DROP TABLE IF EXISTS "spadstown";
CREATE TABLE spadstown ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , SOIL_COD VARCHAR(5) NULL , DRAIN_COD VARCHAR(5) NULL , PLOT_ID CHAR(3) NULL , STATUS VARCHAR(8) NULL , AREA DECIMAL(6,2) NULL DEFAULT 0 , DISTHH DECIMAL(6,2) NULL DEFAULT 0 , NUMSEA DECIMAL(2,0) NULL DEFAULT 1 , TYPE VARCHAR(7) NULL DEFAULT 'C' , SLOPE DECIMAL(3,0) NULL DEFAULT 0 , DEPTH DECIMAL(4,0) NULL DEFAULT 0 , LOCALNAME VARCHAR(60) NULL DEFAULT 'Without description' , PERMEA DECIMAL(3,0) NULL DEFAULT 0 , PORCTOT DECIMAL(3,0) NULL DEFAULT 0 , CROPSINCE CHAR(4) NULL , LASTFALLOW CHAR(4) NULL , CROPLAND DECIMAL(6,2) NULL DEFAULT 0 , LANDPOS VARCHAR(60) NULL , SLOPECLASS VARCHAR(60) NULL , PLOTCOLOR VARCHAR(60) NULL , FARMFERTCLASS VARCHAR(60) NULL , EROSION VARCHAR(60) NULL , CSTRUCTURES VARCHAR(60) NULL , PRIMARY KEY (SYS_COD, PLOT_COD)  );
DROP TABLE IF EXISTS "stallfeeprch";
CREATE TABLE stallfeeprch ( SYS_COD VARCHAR(27) NOT NULL , FEED_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, FEED_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "stallfeeprchperiods";
CREATE TABLE stallfeeprchperiods ( SYS_COD VARCHAR(27) NOT NULL , FEED_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, FEED_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "sysmodulenotes";
CREATE TABLE sysmodulenotes ( SYS_COD VARCHAR(27) NOT NULL , library VARCHAR(45) NOT NULL , plugin VARCHAR(45) NOT NULL , notes BLOB NULL , PRIMARY KEY (SYS_COD, library, plugin) );
DROP TABLE IF EXISTS "system";
CREATE TABLE system ( SYS_COD VARCHAR(27) NOT NULL , CNTY_COD CHAR(3) NOT NULL , SYST_COD CHAR(3) NOT NULL , STATE VARCHAR(20) NULL DEFAULT 'Set state' , STATEABRE CHAR(3) NULL DEFAULT 'SST' , REG_DESC VARCHAR(60) NULL DEFAULT 'Without description' , LATI_DEG VARCHAR(12) NULL DEFAULT '0' , LAT_CARD CHAR(1) NULL DEFAULT 'N' , LONG_DEG VARCHAR(12) NULL DEFAULT '0' , LON_CARD CHAR(1) NULL DEFAULT 'E' , ELEVAT DECIMAL(7,2) NULL DEFAULT 0 , YEAR VARCHAR(10) NULL DEFAULT '20051224' , GRASSONLY CHAR(1) NULL DEFAULT 'N' , NOTES VARCHAR(254) NULL DEFAULT 'Some notes' , DATAOWNER VARCHAR(30) NULL DEFAULT 'Set data owner' , DTOWNABRE CHAR(3) NULL DEFAULT 'NON' , FARMNAME VARCHAR(60) NULL DEFAULT 'Set farmers name' , NUMSEASONS CHAR(1) NULL DEFAULT '2' , LOCATION VARCHAR(40) NULL DEFAULT 'Set a location' , SUBLOC VARCHAR(40) NULL DEFAULT 'Set sub-location' , TIPCAMBIO DECIMAL(8,4) NULL DEFAULT 0 , LASTUPD VARCHAR(30) NULL , LASTUPDUSR VARCHAR(20) NULL , LANGUAGE VARCHAR(20) NULL DEFAULT 'EN' , PERSINTERVIEW VARCHAR(60) NULL , WHENSTART VARCHAR(60) NULL , SINCELIVING VARCHAR(60) NULL , IMMIGRATED VARCHAR(60) NULL , MAINPROD VARCHAR(60) NULL , MPRODCHANGED VARCHAR(60) NULL , CROPROT VARCHAR(250) NULL , YIELDVARY VARCHAR(250) NULL , YIELDVARYRANGE VARCHAR(60) NULL , YIELDVARYWHY VARCHAR(250) NULL , PRICEVARY VARCHAR(250) NULL , PRICEVARYYEAR VARCHAR(250) NULL , PRICEVARYWHY VARCHAR(250) NULL , LMARKET VARCHAR(60) NULL , DLMARKET DECIMAL(12,3) NULL DEFAULT 0 , UMARKET VARCHAR(60) NULL , DUMARKET DECIMAL(12,3) NULL DEFAULT 0 , FARMDRAW BLOB NULL , FARMDRAWEXT CHAR(4) NULL , PRIMARY KEY (SYS_COD)  );
DROP TABLE IF EXISTS "systemperiods";
CREATE TABLE systemperiods ( SYS_COD VARCHAR(27) NOT NULL , period_id CHAR(2) NOT NULL , rain DECIMAL(7,3) NULL DEFAULT 0 , avetemp DECIMAL(7,3) NULL DEFAULT 0 , maxtemp DECIMAL(7,3) NULL DEFAULT 0 , mintemp DECIMAL(7,3) NULL DEFAULT 0 , season CHAR(2) NULL DEFAULT 'DR' , rday DECIMAL(6,2) NULL DEFAULT 0 , sun CHAR(1) NULL DEFAULT '1' , PRIMARY KEY (SYS_COD, period_id)  );
DROP TABLE IF EXISTS "systype";
CREATE TABLE systype ( SYST_COD CHAR(3) NOT NULL , SYST_DES VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LZH VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LSW VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LRU VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LPT VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LNL VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LKO VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LJA VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LIT VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LFR VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LES VARCHAR(30) NULL DEFAULT 'Without description' , SYST_LDE VARCHAR(30) NULL DEFAULT 'Without description' , CROP_COD CHAR(3) NOT NULL , LIVE_COD CHAR(3) NOT NULL , PRIMARY KEY (SYST_COD)  );
INSERT INTO "systype" VALUES('002','Crops - Dairy systems',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RI','CT');
INSERT INTO "systype" VALUES('003','cofee-dairy systems',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CZ','CT');
INSERT INTO "systype" VALUES('004','Coconut Intercropping',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'CQ','CT');
INSERT INTO "systype" VALUES('005','Vegetable Dairy System',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'VE','CT');
INSERT INTO "systype" VALUES('007','Multiple crops',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'GN','CT');
INSERT INTO "systype" VALUES('008','Maize-Dairy System',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MZ','CT');
INSERT INTO "systype" VALUES('009','Rice Dairy System',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RI','CT');
INSERT INTO "systype" VALUES('010','Small Holder Dairy System',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MZ','CT');
INSERT INTO "systype" VALUES('011','Kandyan Forest Garden',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'RI','CT');
INSERT INTO "systype" VALUES('012','Crop-livestock',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MZ','CT');
INSERT INTO "systype" VALUES('013','Multiple crops - Ghana',NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,'MZ','011');
DROP TABLE IF EXISTS "vegforalabour";
CREATE TABLE vegforalabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "vegforaman";
CREATE TABLE vegforaman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NDF DECIMAL(12,3) NULL DEFAULT 0 , DIGESTI DECIMAL(12,3) NULL DEFAULT 0 , ANENERGY DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD)  );
DROP TABLE IF EXISTS "vegforamanfeed";
CREATE TABLE vegforamanfeed ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "vegforamanfeedperiods";
CREATE TABLE vegforamanfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "vegforamanperiods";
CREATE TABLE vegforamanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD, period_id)  );
DROP TABLE IF EXISTS "vegforamansold";
CREATE TABLE vegforamansold ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD, MARK_COD)  );
DROP TABLE IF EXISTS "vegforamansoldperiods";
CREATE TABLE vegforamansoldperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "vegforamantim";
CREATE TABLE vegforamantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FORA_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , YIELD DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , ST CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , PORST DECIMAL(12,3) NULL DEFAULT 0 , POROT DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FORA_COD, NMONTH)  );
DROP TABLE IF EXISTS "veglabour";
CREATE TABLE veglabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "vegman";
CREATE TABLE vegman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD)  );
DROP TABLE IF EXISTS "vegmanfert";
CREATE TABLE vegmanfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, NMONTH, FERTYP_COD)  );
DROP TABLE IF EXISTS "vegmanheap";
CREATE TABLE vegmanheap ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , HEAP_COD CHAR(3) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , QTYAPP DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, NMONTH, HEAP_COD)  );
DROP TABLE IF EXISTS "vegmanlabour";
CREATE TABLE vegmanlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PERS_COD)  );
DROP TABLE IF EXISTS "vegmanperiods";
CREATE TABLE vegmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, period_id)  );
DROP TABLE IF EXISTS "vegmanprchfert";
CREATE TABLE vegmanprchfert ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FERTYP_COD)  );
DROP TABLE IF EXISTS "vegmanprchfertperiods";
CREATE TABLE vegmanprchfertperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , FERTYP_COD VARCHAR(5) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, FERTYP_COD, period_id)  );
DROP TABLE IF EXISTS "vegmantim";
CREATE TABLE vegmantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PLANDENS DECIMAL(12,3) NULL DEFAULT 0 , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, NMONTH)  );
DROP TABLE IF EXISTS "vegprodlabour";
CREATE TABLE vegprodlabour ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , PERS_COD VARCHAR(5) NOT NULL , FREQUENCY DECIMAL(12,3) NULL DEFAULT 0 , HOURSDAY DECIMAL(12,3) NULL DEFAULT 0 , PPERHOUR DECIMAL(6,2) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD, NMONTH, PERS_COD)  );
DROP TABLE IF EXISTS "vegprodman";
CREATE TABLE vegprodman ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , ENERGY DECIMAL(12,3) NULL DEFAULT 0 , PROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NITROGEN DECIMAL(12,3) NULL DEFAULT 0 , PHOSPHORUS DECIMAL(12,3) NULL DEFAULT 0 , POTASSIUM DECIMAL(12,3) NULL DEFAULT 0 , CARBON DECIMAL(12,3) NULL DEFAULT 0 , DRYMATTER DECIMAL(12,3) NULL DEFAULT 0 , CPROTEIN DECIMAL(12,3) NULL DEFAULT 0 , NDF DECIMAL(12,3) NULL DEFAULT 0 , DIGESTI DECIMAL(12,3) NULL DEFAULT 0 , ANENERGY DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD)  );
DROP TABLE IF EXISTS "vegprodmanfeed";
CREATE TABLE vegprodmanfeed ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD, LIVE_ICOD, GROUP_COD)  );
DROP TABLE IF EXISTS "vegprodmanfeedperiods";
CREATE TABLE vegprodmanfeedperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , LIVE_ICOD CHAR(3) NOT NULL , GROUP_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'F' , qty DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD, LIVE_ICOD, GROUP_COD, period_id)  );
DROP TABLE IF EXISTS "vegprodmanperiods";
CREATE TABLE vegprodmanperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD, period_id)  );
DROP TABLE IF EXISTS "vegprodmansold";
CREATE TABLE vegprodmansold ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , DESRELAT VARCHAR(20) NULL DEFAULT 'Without description' , INDRELAT CHAR(1) NULL DEFAULT 'F' , QTYRELAT DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD, MARK_COD)  );
DROP TABLE IF EXISTS "vegprodmansoldperiods";
CREATE TABLE vegprodmansoldperiods ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , MARK_COD CHAR(3) NOT NULL , period_id CHAR(2) NOT NULL , tim CHAR(1) NULL DEFAULT 'N' , qty DECIMAL(12,3) NULL DEFAULT 0 , pri DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD, MARK_COD, period_id)  );
DROP TABLE IF EXISTS "vegprodmantim";
CREATE TABLE vegprodmantim ( SYS_COD VARCHAR(27) NOT NULL , PLOT_COD CHAR(3) NOT NULL , NUMSEASON CHAR(2) NOT NULL , CROP_COD CHAR(3) NOT NULL , VEG_COD CHAR(3) NOT NULL , ACTY_COD CHAR(3) NOT NULL , PROD_COD CHAR(3) NOT NULL , NMONTH CHAR(2) NOT NULL , ACTYM_COD CHAR(3) NULL , MET_COD VARCHAR(5) NULL , PRCH CHAR(1) NULL DEFAULT 'F' , FARM CHAR(1) NULL DEFAULT 'F' , EXCH CHAR(1) NULL DEFAULT 'F' , QTYPRCH DECIMAL(12,3) NULL DEFAULT 0 , QTYFARM DECIMAL(12,3) NULL DEFAULT 0 , QTYEXCH DECIMAL(12,3) NULL DEFAULT 0 , MACHINE CHAR(1) NULL DEFAULT 'F' , FREQMACH DECIMAL(12,3) NULL DEFAULT 0 , PRICE DECIMAL(12,3) NULL DEFAULT 0 , YIELD DECIMAL(12,3) NULL DEFAULT 0 , HC CHAR(1) NULL DEFAULT 'F' , LF CHAR(1) NULL DEFAULT 'F' , FS CHAR(1) NULL DEFAULT 'F' , LE CHAR(1) NULL DEFAULT 'F' , ST CHAR(1) NULL DEFAULT 'F' , OT CHAR(1) NULL DEFAULT 'F' , MM CHAR(1) NULL DEFAULT 'F' , PORHC DECIMAL(12,3) NULL DEFAULT 0 , PORLF DECIMAL(12,3) NULL DEFAULT 0 , PORFS DECIMAL(12,3) NULL DEFAULT 0 , PORLE DECIMAL(12,3) NULL DEFAULT 0 , PORST DECIMAL(12,3) NULL DEFAULT 0 , POROT DECIMAL(12,3) NULL DEFAULT 0 , PORMM DECIMAL(12,3) NULL DEFAULT 0 , CHECKED CHAR(1) NULL DEFAULT 'N' , mandays DECIMAL(12,3) NULL DEFAULT 0 , pricemanday DECIMAL(12,3) NULL DEFAULT 0 , MACHDESC VARCHAR(120) NULL , PRIMARY KEY (SYS_COD, PLOT_COD, NUMSEASON, CROP_COD, VEG_COD, ACTY_COD, PROD_COD, NMONTH)  );
DROP TABLE IF EXISTS "wellbeing";
CREATE TABLE wellbeing ( SYS_COD VARCHAR(27) NOT NULL , ITEMID CHAR(3) NOT NULL , ITEMDESC VARCHAR(40) NULL DEFAULT 'NONE' , VERYRICH VARCHAR(60) NULL , RICH VARCHAR(60) NULL , POOR VARCHAR(60) NULL , VERYPOOR VARCHAR(60) NULL , RANK DECIMAL(12,3) NULL DEFAULT 0 , PRIMARY KEY (SYS_COD, ITEMID)  );
CREATE TRIGGER DLT_fk_04d77330_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON systype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYST_COD) as value FROM system WHERE SYST_COD = OLD.SYST_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "system" violates foreign key constraint "fk_04d77330_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_04d7e1e4_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON country FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CNTY_COD) as value FROM system WHERE CNTY_COD = OLD.CNTY_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "system" violates foreign key constraint "fk_04d7e1e4_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_04d85584_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM labforce WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_04d8cf32_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM spadstown WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_04d94dfe_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON drainage FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (DRAIN_COD) as value FROM spadstown WHERE DRAIN_COD = OLD.DRAIN_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "spadstown" violates foreign key constraint "fk_04d94dfe_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_04d9d1f2_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON soil FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SOIL_COD) as value FROM spadstown WHERE SOIL_COD = OLD.SOIL_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "spadstown" violates foreign key constraint "fk_04d9d1f2_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_04da5a28_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM lvstosys WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_04dae7f4_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON livestoc FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM lvstosys WHERE LIVE_COD = OLD.LIVE_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "lvstosys" violates foreign key constraint "fk_04dae7f4_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_04db798a_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM wellbeing WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_11fb077e_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON crpprodman FOR EACH ROW BEGIN DELETE FROM crpprodmanfeed WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_11fbb070_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM crpprodmanfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_11fc8fea_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON crpforaman FOR EACH ROW BEGIN DELETE FROM crpforamanfeed WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_11fd60d2_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM crpforamanfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_11fe14d2_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON vegprodman FOR EACH ROW BEGIN DELETE FROM vegprodmanfeed WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_11fedb2e_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM vegprodmanfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_11ff9578_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON vegforaman FOR EACH ROW BEGIN DELETE FROM vegforamanfeed WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_12006d90_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM vegforamanfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_120155fc_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON grassprodman FOR EACH ROW BEGIN DELETE FROM grassprodmanfeed WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_12022c20_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM grassprodmanfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_12030438_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON grassforaman FOR EACH ROW BEGIN DELETE FROM grassforamanfeed WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_1203ea6a_bcec_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM grassforamanfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_29cb5696_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON lvstosys FOR EACH ROW BEGIN DELETE FROM liveman WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD; END;
CREATE TRIGGER DLT_fk_29cbf222_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM liveman WHERE ACTY_COD = OLD.ACTY_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "liveman" violates foreign key constraint "fk_29cbf222_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_29cc7a26_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM livelabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_29cd31a0_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON lvstosys FOR EACH ROW BEGIN DELETE FROM otherprod WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD; END;
CREATE TRIGGER DLT_fk_29ce0558_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON liveman FOR EACH ROW BEGIN DELETE FROM livemantim WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_29ceeee6_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON livemantim FOR EACH ROW BEGIN DELETE FROM livelabour WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_29d0895e_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM livemangrp WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_29d1445c_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM livemangrp WHERE ACTY_COD = OLD.ACTY_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livemangrp" violates foreign key constraint "fk_29d1445c_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_29d207b6_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON livemangrp FOR EACH ROW BEGIN DELETE FROM livemangrptim WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_29d2d448_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON livemangrptim FOR EACH ROW BEGIN DELETE FROM livemangrplabour WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_29d3b700_bced_11e0_9e78_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM livemangrplabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_322bba82_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON cropman FOR EACH ROW BEGIN DELETE FROM crpforaman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_322c6d1a_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON cropfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD || CROP_COD) as value FROM crpforaman WHERE FORA_COD = OLD.FORA_COD AND CROP_COD = OLD.CROP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpforaman" violates foreign key constraint "fk_322c6d1a_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_322d0f86_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON crpforaman FOR EACH ROW BEGIN DELETE FROM crpforamansold WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_322da694_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM crpforamansold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpforamansold" violates foreign key constraint "fk_322da694_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_322e3410_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON crpforaman FOR EACH ROW BEGIN DELETE FROM crpforamantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_322ed352_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM crpforamantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpforamantim" violates foreign key constraint "fk_322ed352_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_322f701e_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON crpforamantim FOR EACH ROW BEGIN DELETE FROM crpforalabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_32302482_bce4_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM crpforalabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_334977de_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON plotpaddspe FOR EACH ROW BEGIN DELETE FROM grassman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_334a053c_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM grassman WHERE ACTY_COD = OLD.ACTY_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassman" violates foreign key constraint "fk_334a053c_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_334a93d0_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON grassman FOR EACH ROW BEGIN DELETE FROM grassmantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_334b315a_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON grassmantim FOR EACH ROW BEGIN DELETE FROM grasslabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_334bd74a_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM grasslabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_334c80b4_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON grassmantim FOR EACH ROW BEGIN DELETE FROM grassmanfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_334d32b6_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON ferttype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM grassmanfert WHERE FERTYP_COD = OLD.FERTYP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmanfert" violates foreign key constraint "fk_334d32b6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_334ddf2c_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON grassman FOR EACH ROW BEGIN DELETE FROM grassmanprchfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_334e9ba6_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON ferttype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM grassmanprchfert WHERE FERTYP_COD = OLD.FERTYP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmanprchfert" violates foreign key constraint "fk_334e9ba6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_334f51d6_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM grassmantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmantim" violates foreign key constraint "fk_334f51d6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_33500fc2_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM grassmanfert WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmanfert" violates foreign key constraint "fk_33500fc2_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3350d272_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON grassmantim FOR EACH ROW BEGIN DELETE FROM grassmanheap WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_3351a292_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM grassmanheap WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_33527082_bce8_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM grassmanheap WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmanheap" violates foreign key constraint "fk_33527082_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3994c7c6_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON lvstosys FOR EACH ROW BEGIN DELETE FROM feedgroups WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD; END;
CREATE TRIGGER DLT_fk_3995a826_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM liveavailres WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_3996875a_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON restypes FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FEED_COD) as value FROM liveavailres WHERE FEED_COD = OLD.RES_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "liveavailres" violates foreign key constraint "fk_3996875a_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_39977278_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON liveavailres FOR EACH ROW BEGIN DELETE FROM stallfeeprch WHERE SYS_COD = OLD.SYS_COD AND FEED_COD = OLD.FEED_COD; END;
CREATE TRIGGER DLT_fk_39987088_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM stallfeeprch WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_39997924_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON plotpaddspe FOR EACH ROW BEGIN DELETE FROM grazingman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_399a8ba2_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM grazingman WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_399baa0a_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM livegroups WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_399ccfe8_bceb_11e0_9e78_58946b4c242c BEFORE DELETE ON lvproducts FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MLIVE_COD || MPROD_COD) as value FROM grazingman WHERE MLIVE_COD = OLD.LIVE_COD AND MPROD_COD = OLD.PROD_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grazingman" violates foreign key constraint "fk_399ccfe8_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3df4cb58_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON owneduse FOR EACH ROW BEGIN DELETE FROM cropman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_3df553c0_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM cropman WHERE ACTY_COD = OLD.ACTY_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropman" violates foreign key constraint "fk_3df553c0_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3df5da52_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON cropman FOR EACH ROW BEGIN DELETE FROM cropmantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_3df7044a_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM cropmantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmantim" violates foreign key constraint "fk_3df7044a_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3df7044a_bce2_11e0_a5d9_58946b4c242c0 BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM plotmantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotmantim" violates foreign key constraint "fk_3df7044a_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER DLT_fk_3df79fae_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON cropmantim FOR EACH ROW BEGIN DELETE FROM croplabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_3df84800_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM croplabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_3df8edbe_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON cropmantim FOR EACH ROW BEGIN DELETE FROM cropmanfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON ferttype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM cropmanfert WHERE FERTYP_COD = OLD.FERTYP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmanfert" violates foreign key constraint "fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c0 BEFORE DELETE ON ferttype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM plotmanfert WHERE FERTYP_COD = OLD.FERTYP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotmanfert" violates foreign key constraint "fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER DLT_fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM cropmanfert WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmanfert" violates foreign key constraint "fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c0 BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM plotmanfert WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotmanfert" violates foreign key constraint "fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER DLT_fk_3dfaff5a_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON cropman FOR EACH ROW BEGIN DELETE FROM cropmanprchfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_3dfbbdd2_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON ferttype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM cropmanprchfert WHERE FERTYP_COD = OLD.FERTYP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmanprchfert" violates foreign key constraint "fk_3dfbbdd2_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON cropmantim FOR EACH ROW BEGIN DELETE FROM cropmanheap WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c0 BEFORE DELETE ON plotmantim FOR EACH ROW BEGIN DELETE FROM plotmanheap WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM cropmanheap WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c0 BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM plotmanheap WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM cropmanheap WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmanheap" violates foreign key constraint "fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c0 BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM plotmanheap WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotmanheap" violates foreign key constraint "fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER DLT_fk_42404990_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM mnrheap WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_4240db80_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheaplvprod WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_42417cf2_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON livehvst FOR EACH ROW BEGIN DELETE FROM mnrheaplvprod WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_42422850_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM mnrheapprods WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_4242d584_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapaddprods WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_42438ace_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheapprods FOR EACH ROW BEGIN DELETE FROM mnrheapaddprods WHERE SYS_COD = OLD.SYS_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_42444a54_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapsold WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_42450cc8_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM mnrheapsold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "mnrheapsold" violates foreign key constraint "fk_42450cc8_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_4245d9a0_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapfeed WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_4246acfe_bcfa_11e0_b883_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM mnrheapfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_44360668_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM otherman WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_44363a70_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM otherman WHERE ACTY_COD = OLD.ACTY_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "otherman" violates foreign key constraint "fk_44363a70_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_44366db0_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON otherman FOR EACH ROW BEGIN DELETE FROM othermantim WHERE SYS_COD = OLD.SYS_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_4436a456_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM otherlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_4436dbf6_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM farmassets WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_4437140e_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM otherhhcp WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_44374c1c_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM otherhhexp WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_44378808_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM otherincome WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_4437c516_bcf5_11e0_9e78_58946b4c242c BEFORE DELETE ON othermantim FOR EACH ROW BEGIN DELETE FROM otherlabour WHERE SYS_COD = OLD.SYS_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_44bdd730_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON cropman FOR EACH ROW BEGIN DELETE FROM crpprodman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_44be5f16_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON cropprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD || CROP_COD) as value FROM crpprodman WHERE PROD_COD = OLD.PROD_COD AND CROP_COD = OLD.CROP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpprodman" violates foreign key constraint "fk_44be5f16_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_44bf621c_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM crpprodmantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpprodmantim" violates foreign key constraint "fk_44bf621c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_44bff0a6_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM crpprodlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_44c0841c_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON crpprodman FOR EACH ROW BEGIN DELETE FROM crpprodmansold WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_44c1269c_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM crpprodmansold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpprodmansold" violates foreign key constraint "fk_44c1269c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_44c1c25a_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON crpprodman FOR EACH ROW BEGIN DELETE FROM crpprodmantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_44c274f2_bce3_11e0_a317_58946b4c242c BEFORE DELETE ON crpprodmantim FOR EACH ROW BEGIN DELETE FROM crpprodlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_52042e10_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON ownusedv FOR EACH ROW BEGIN DELETE FROM vegman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD; END;
CREATE TRIGGER DLT_fk_5204c096_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM vegman WHERE ACTY_COD = OLD.ACTY_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegman" violates foreign key constraint "fk_5204c096_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_5205513c_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON vegman FOR EACH ROW BEGIN DELETE FROM vegmantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_5205f4de_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM vegmantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmantim" violates foreign key constraint "fk_5205f4de_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_520691fa_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON vegmantim FOR EACH ROW BEGIN DELETE FROM veglabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_52073ee8_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM veglabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_5207e4e2_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON vegmantim FOR EACH ROW BEGIN DELETE FROM vegmanfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_52089d4c_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON ferttype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM vegmanfert WHERE FERTYP_COD = OLD.FERTYP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmanfert" violates foreign key constraint "fk_52089d4c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_52094b84_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM vegmanfert WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmanfert" violates foreign key constraint "fk_52094b84_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_520a0204_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON vegman FOR EACH ROW BEGIN DELETE FROM vegmanprchfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_520ac89c_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON ferttype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM vegmanprchfert WHERE FERTYP_COD = OLD.FERTYP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmanprchfert" violates foreign key constraint "fk_520ac89c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_520b8c82_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON vegmantim FOR EACH ROW BEGIN DELETE FROM vegmanheap WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_520c5e14_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM vegmanheap WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_520d2dbc_bce5_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM vegmanheap WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmanheap" violates foreign key constraint "fk_520d2dbc_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_6ecf545c_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON grassman FOR EACH ROW BEGIN DELETE FROM grassforaman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_6ecf860c_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON pastfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM grassforaman WHERE CROP_COD = OLD.CROP_COD AND FORA_COD = OLD.FORA_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassforaman" violates foreign key constraint "fk_6ecf860c_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_6ecfb2c6_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON grassforaman FOR EACH ROW BEGIN DELETE FROM grassforamansold WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_6ecfeb7e_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM grassforamansold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassforamansold" violates foreign key constraint "fk_6ecfeb7e_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_6ed016c6_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON grassforaman FOR EACH ROW BEGIN DELETE FROM grassforamantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_6ed04f42_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM grassforamantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassforamantim" violates foreign key constraint "fk_6ed04f42_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_6ed07f1c_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON grassforamantim FOR EACH ROW BEGIN DELETE FROM grassforalabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_6ed0bd38_bcea_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM grassforalabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_81de4dee_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapcrpprod WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_81df0784_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON crpprodman FOR EACH ROW BEGIN DELETE FROM mnrheapcrpprod WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_81dfd6dc_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapcrpfora WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_81e0a60c_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON crpforaman FOR EACH ROW BEGIN DELETE FROM mnrheapcrpfora WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_81e18ba8_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapgrassprod WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_81e26a96_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON grassprodman FOR EACH ROW BEGIN DELETE FROM mnrheapgrassprod WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_81e35b04_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapgrassfora WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_81e44a64_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON grassforaman FOR EACH ROW BEGIN DELETE FROM mnrheapgrassfora WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_81e549e6_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapvegprod WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_81e64d8c_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON vegprodman FOR EACH ROW BEGIN DELETE FROM mnrheapvegprod WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_81e7808a_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON mnrheap FOR EACH ROW BEGIN DELETE FROM mnrheapvegfora WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD; END;
CREATE TRIGGER DLT_fk_81e8dec6_bcfb_11e0_b883_58946b4c242c BEFORE DELETE ON vegforaman FOR EACH ROW BEGIN DELETE FROM mnrheapvegfora WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_91e602aa_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON spadstown FOR EACH ROW BEGIN DELETE FROM plotgpspos WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD; END;
CREATE TRIGGER DLT_fk_91e67546_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON spadstown FOR EACH ROW BEGIN DELETE FROM plotseasons WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD; END;
CREATE TRIGGER DLT_fk_91e6ee40_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON crop FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM owneduse WHERE CROP_COD = OLD.CROP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "owneduse" violates foreign key constraint "fk_91e6ee40_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_91e76a8c_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON crop FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (VEG_COD) as value FROM ownusedv WHERE VEG_COD = OLD.CROP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "ownusedv" violates foreign key constraint "fk_91e76a8c_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_91e7eec6_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON spadstown FOR EACH ROW BEGIN DELETE FROM plotpaddoks WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD; END;
CREATE TRIGGER DLT_fk_91e87a4e_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON pastures FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM plotpaddspe WHERE CROP_COD = OLD.CROP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotpaddspe" violates foreign key constraint "fk_91e87a4e_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_91e908ba_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON pastures FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROPD_COD) as value FROM plotpaddspedt WHERE CROPD_COD = OLD.CROP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotpaddspedt" violates foreign key constraint "fk_91e908ba_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_91e99cf8_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON plotseasons FOR EACH ROW BEGIN DELETE FROM owneduse WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON; END;
CREATE TRIGGER DLT_fk_91ea399c_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON owneduse FOR EACH ROW BEGIN DELETE FROM ownusedv WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_91eadcd0_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON plotpaddoks FOR EACH ROW BEGIN DELETE FROM plotpaddspe WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD; END;
CREATE TRIGGER DLT_fk_91eb88ce_bce1_11e0_a5d9_58946b4c242c BEFORE DELETE ON plotpaddspe FOR EACH ROW BEGIN DELETE FROM plotpaddspedt WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_9ad2a85e_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON vegman FOR EACH ROW BEGIN DELETE FROM vegforaman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_9ad2dbee_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON cropfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM vegforaman WHERE CROP_COD = OLD.CROP_COD AND FORA_COD = OLD.FORA_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegforaman" violates foreign key constraint "fk_9ad2dbee_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_9ad30588_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON vegforaman FOR EACH ROW BEGIN DELETE FROM vegforamansold WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_9ad33a1c_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM vegforamansold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegforamansold" violates foreign key constraint "fk_9ad33a1c_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_9ad3628a_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON vegforaman FOR EACH ROW BEGIN DELETE FROM vegforamantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_9ad39b42_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM vegforamantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegforamantim" violates foreign key constraint "fk_9ad39b42_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_9ad3c702_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON vegforamantim FOR EACH ROW BEGIN DELETE FROM vegforalabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_9ad4005a_bce7_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM vegforalabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_cce75930_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON vegman FOR EACH ROW BEGIN DELETE FROM vegprodman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_cce7e5bc_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON cropprods FOR EACH ROW BEGIN DELETE FROM vegprodman WHERE VEG_COD = OLD.CROP_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_cce86a32_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON vegprodman FOR EACH ROW BEGIN DELETE FROM vegprodmantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_cce900be_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM vegprodmantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegprodmantim" violates foreign key constraint "fk_cce900be_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_cce990ec_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON vegprodmantim FOR EACH ROW BEGIN DELETE FROM vegprodlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_ccea3402_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM vegprodlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_cceacfc0_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON vegprodman FOR EACH ROW BEGIN DELETE FROM vegprodmansold WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_cceb82b2_bce6_11e0_a317_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM vegprodmansold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegprodmansold" violates foreign key constraint "fk_cceb82b2_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_cropmanlabour_cropman1 BEFORE DELETE ON cropman FOR EACH ROW BEGIN DELETE FROM cropmanlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_cropmanlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM cropmanlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_cropmanperiods_cropman1 BEFORE DELETE ON cropman FOR EACH ROW BEGIN DELETE FROM cropmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_cropmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM cropmanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmanperiods" violates foreign key constraint "fk_cropmanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_cropmanprchfertperiods_cropmanprchfert1 BEFORE DELETE ON cropmanprchfert FOR EACH ROW BEGIN DELETE FROM cropmanprchfertperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FERTYP_COD = OLD.FERTYP_COD; END;
CREATE TRIGGER DLT_fk_cropmanprchfertperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM cropmanprchfertperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmanprchfertperiods" violates foreign key constraint "fk_cropmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_cropmantim_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM cropmantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropmantim" violates foreign key constraint "fk_cropmantim_periods1"') END; END;
CREATE TRIGGER DLT_fk_crpforamanfeedperiods_crpforamanfeed1 BEFORE DELETE ON crpforamanfeed FOR EACH ROW BEGIN DELETE FROM crpforamanfeedperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_crpforamanfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM crpforamanfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpforamanfeedperiods" violates foreign key constraint "fk_crpforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_crpforamanperiods_crpforaman1 BEFORE DELETE ON crpforaman FOR EACH ROW BEGIN DELETE FROM crpforamanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_crpforamanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM crpforamanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpforamanperiods" violates foreign key constraint "fk_crpforamanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_crpforamansoldperiods_crpforamansold1 BEFORE DELETE ON crpforamansold FOR EACH ROW BEGIN DELETE FROM crpforamansoldperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_crpforamansoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM crpforamansoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpforamansoldperiods" violates foreign key constraint "fk_crpforamansoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_crpforamantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM crpforamantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpforamantim" violates foreign key constraint "fk_crpforamantim_periods"') END; END;
CREATE TRIGGER DLT_fk_crpprodmanfeedperiods_crpprodmanfeed1 BEFORE DELETE ON crpprodmanfeed FOR EACH ROW BEGIN DELETE FROM crpprodmanfeedperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_crpprodmanfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM crpprodmanfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpprodmanfeedperiods" violates foreign key constraint "fk_crpprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_crpprodmanperiods_crpprodman1 BEFORE DELETE ON crpprodman FOR EACH ROW BEGIN DELETE FROM crpprodmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_crpprodmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM crpprodmanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpprodmanperiods" violates foreign key constraint "fk_crpprodmanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_crpprodmansoldperiods_crpprodmansold1 BEFORE DELETE ON crpprodmansold FOR EACH ROW BEGIN DELETE FROM crpprodmansoldperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_crpprodmansoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM crpprodmansoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpprodmansoldperiods" violates foreign key constraint "fk_crpprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_crpprodmantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM crpprodmantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "crpprodmantim" violates foreign key constraint "fk_crpprodmantim_periods"') END; END;
CREATE TRIGGER DLT_fk_e2e10f26_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON grassman FOR EACH ROW BEGIN DELETE FROM grassprodman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_e2e1bb1a_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON pastprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || PROD_COD) as value FROM grassprodman WHERE CROP_COD = OLD.CROP_COD AND PROD_COD = OLD.PROD_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassprodman" violates foreign key constraint "fk_e2e1bb1a_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e2e27c58_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON grassprodman FOR EACH ROW BEGIN DELETE FROM grassprodmantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_e2e34ffc_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTYM_COD || MET_COD) as value FROM grassprodmantim WHERE ACTYM_COD = OLD.ACTY_COD AND MET_COD = OLD.MET_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassprodmantim" violates foreign key constraint "fk_e2e34ffc_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e2e41e3c_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON grassprodmantim FOR EACH ROW BEGIN DELETE FROM grassprodlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_e2e50928_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM grassprodlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_e2e5e942_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON grassprodman FOR EACH ROW BEGIN DELETE FROM grassprodmansold WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_e2e6d992_bce9_11e0_a317_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM grassprodmansold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassprodmansold" violates foreign key constraint "fk_e2e6d992_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e67e4fee_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON activity FOR EACH ROW BEGIN DELETE FROM actymethods WHERE ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_e67f0178_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON crop FOR EACH ROW BEGIN DELETE FROM cropprods WHERE CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_e67fbf1e_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON cpprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM cropprods WHERE PROD_COD = OLD.PROD_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropprods" violates foreign key constraint "fk_e67fbf1e_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e680c62a_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON crop FOR EACH ROW BEGIN DELETE FROM cropfora WHERE CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_e6818d8a_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON forages FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD) as value FROM cropfora WHERE FORA_COD = OLD.FORA_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "cropfora" violates foreign key constraint "fk_e6818d8a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e6825a62_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON pastures FOR EACH ROW BEGIN DELETE FROM pastprods WHERE CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_e6831844_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON cpprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM pastprods WHERE PROD_COD = OLD.PROD_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "pastprods" violates foreign key constraint "fk_e6831844_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e683dda6_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON pastures FOR EACH ROW BEGIN DELETE FROM pastfora WHERE CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_e684a4ca_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON forages FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD) as value FROM pastfora WHERE FORA_COD = OLD.FORA_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "pastfora" violates foreign key constraint "fk_e684a4ca_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e6857184_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON livestoc FOR EACH ROW BEGIN DELETE FROM lvproducts WHERE LIVE_COD = OLD.LIVE_COD; END;
CREATE TRIGGER DLT_fk_e68642f8_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON products FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM lvproducts WHERE PROD_COD = OLD.PROD_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "lvproducts" violates foreign key constraint "fk_e68642f8_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e6871a7a_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON livestoc FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM systype WHERE LIVE_COD = OLD.LIVE_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "systype" violates foreign key constraint "fk_e6871a7a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e687f8dc_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON crop FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM systype WHERE CROP_COD = OLD.CROP_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "systype" violates foreign key constraint "fk_e687f8dc_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_e688edd2_bce0_11e0_a5d9_58946b4c242c BEFORE DELETE ON actyunits FOR EACH ROW BEGIN DELETE FROM activity WHERE UNIT_COD = OLD.UNIT_COD; END;
CREATE TRIGGER DLT_fk_ee3ece80_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM livehvst WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_ee3f5dd2_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON lvproducts FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD || PROD_COD) as value FROM livehvst WHERE LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvst" violates foreign key constraint "fk_ee3f5dd2_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_ee3fe626_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON livehvst FOR EACH ROW BEGIN DELETE FROM livehvsttim WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_ee4080b8_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON livehvsttim FOR EACH ROW BEGIN DELETE FROM livehvstlabour WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_ee4120e0_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM livehvstlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_ee41c09a_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON livehvst FOR EACH ROW BEGIN DELETE FROM livehvstsold WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_ee426bb2_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM livehvstsold WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvstsold" violates foreign key constraint "fk_ee426bb2_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_ee43d100_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON livehvstcat FOR EACH ROW BEGIN DELETE FROM livehvstsoldcat WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD AND HERD_COD = OLD.HERD_COD; END;
CREATE TRIGGER DLT_fk_ee4490b8_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM livehvstsoldcat WHERE MARK_COD = OLD.MARK_COD) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvstsoldcat" violates foreign key constraint "fk_ee4490b8_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER DLT_fk_ee454b02_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON livehvst FOR EACH ROW BEGIN DELETE FROM livehvstfeed WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_ee4617da_bcf8_11e0_948f_58946b4c242c BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM livehvstfeed WHERE SYS_COD = OLD.SYS_COD AND FLIVE_ICOD = OLD.LIVE_ICOD AND FGROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_feedgroupslabour_feedgroups1 BEFORE DELETE ON feedgroups FOR EACH ROW BEGIN DELETE FROM feedgroupslabour WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_feedgroupslabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM feedgroupslabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_grassforamanfeedperiods_grassforamanfeed1 BEFORE DELETE ON grassforamanfeed FOR EACH ROW BEGIN DELETE FROM grassforamanfeedperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_grassforamanfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassforamanfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassforamanfeedperiods" violates foreign key constraint "fk_grassforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassforamanperiods_grassforaman1 BEFORE DELETE ON grassforaman FOR EACH ROW BEGIN DELETE FROM grassforamanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_grassforamanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassforamanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassforamanperiods" violates foreign key constraint "fk_grassforamanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassforamansoldperiods_grassforamansold1 BEFORE DELETE ON grassforamansold FOR EACH ROW BEGIN DELETE FROM grassforamansoldperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_grassforamansoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassforamansoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassforamansoldperiods" violates foreign key constraint "fk_grassforamansoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassforamantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM grassforamantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassforamantim" violates foreign key constraint "fk_grassforamantim_periods"') END; END;
CREATE TRIGGER DLT_fk_grassmanlabour_grassman1 BEFORE DELETE ON grassman FOR EACH ROW BEGIN DELETE FROM grassmanlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_grassmanlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM grassmanlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_grassmanperiods_grassman1 BEFORE DELETE ON grassman FOR EACH ROW BEGIN DELETE FROM grassmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_grassmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassmanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmanperiods" violates foreign key constraint "fk_grassmanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassmanprchfertperiods_grassmanprchfert1 BEFORE DELETE ON grassmanprchfert FOR EACH ROW BEGIN DELETE FROM grassmanprchfertperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND FERTYP_COD = OLD.FERTYP_COD; END;
CREATE TRIGGER DLT_fk_grassmanprchfertperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassmanprchfertperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmanprchfertperiods" violates foreign key constraint "fk_grassmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassmantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM grassmantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassmantim" violates foreign key constraint "fk_grassmantim_periods"') END; END;
CREATE TRIGGER DLT_fk_grassprodmanfeedperiods_grassprodmanfeed1 BEFORE DELETE ON grassprodmanfeed FOR EACH ROW BEGIN DELETE FROM grassprodmanfeedperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_grassprodmanfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassprodmanfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassprodmanfeedperiods" violates foreign key constraint "fk_grassprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassprodmanperiods_grassprodman1 BEFORE DELETE ON grassprodman FOR EACH ROW BEGIN DELETE FROM grassprodmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_grassprodmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassprodmanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassprodmanperiods" violates foreign key constraint "fk_grassprodmanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassprodmansoldperiods_grassprodmansold1 BEFORE DELETE ON grassprodmansold FOR EACH ROW BEGIN DELETE FROM grassprodmansoldperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_grassprodmansoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grassprodmansoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassprodmansoldperiods" violates foreign key constraint "fk_grassprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grassprodmantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM grassprodmantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grassprodmantim" violates foreign key constraint "fk_grassprodmantim_periods"') END; END;
CREATE TRIGGER DLT_fk_grazingmanperiods_grazingman1 BEFORE DELETE ON grazingman FOR EACH ROW BEGIN DELETE FROM grazingmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_grazingmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM grazingmanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "grazingmanperiods" violates foreign key constraint "fk_grazingmanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_grpcrpforacons_grpcrpforaprod1 BEFORE DELETE ON grpcrpforaprod FOR EACH ROW BEGIN DELETE FROM grpcrpforacons WHERE SYS_COD = OLD.SYS_COD AND CROP_COD = OLD.CROP_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_grpcrpforacons_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM grpcrpforacons WHERE period_id = OLD.period_id; END;
CREATE TRIGGER DLT_fk_grpcrpforaprod_cropfora1 BEFORE DELETE ON cropfora FOR EACH ROW BEGIN DELETE FROM grpcrpforaprod WHERE CROP_COD = OLD.CROP_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_grpcrpforaprod_system1 BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM grpcrpforaprod WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_grpcrpforasold_grpcrpforaprod1 BEFORE DELETE ON grpcrpforaprod FOR EACH ROW BEGIN DELETE FROM grpcrpforasold WHERE SYS_COD = OLD.SYS_COD AND CROP_COD = OLD.CROP_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_grpcrpforasold_markoutlet1 BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN DELETE FROM grpcrpforasold WHERE MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_grpcrpforasoldperiods_grpcrpforasold1 BEFORE DELETE ON grpcrpforasold FOR EACH ROW BEGIN DELETE FROM grpcrpforasoldperiods WHERE SYS_COD = OLD.SYS_COD AND CROP_COD = OLD.CROP_COD AND FORA_COD = OLD.FORA_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_grpcrpforasoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM grpcrpforasoldperiods WHERE period_id = OLD.period_id; END;
CREATE TRIGGER DLT_fk_grpcrpprodscons_grpcrpprodsprod1 BEFORE DELETE ON grpcrpprodsprod FOR EACH ROW BEGIN DELETE FROM grpcrpprodscons WHERE SYS_COD = OLD.SYS_COD AND CROP_COD = OLD.CROP_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_grpcrpprodscons_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM grpcrpprodscons WHERE period_id = OLD.period_id; END;
CREATE TRIGGER DLT_fk_grpcrpprodsprod_cropprods1 BEFORE DELETE ON cropprods FOR EACH ROW BEGIN DELETE FROM grpcrpprodsprod WHERE CROP_COD = OLD.CROP_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_grpcrpprodsprod_system1 BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM grpcrpprodsprod WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_grpcrpprodssold_grpcrpprodsprod1 BEFORE DELETE ON grpcrpprodsprod FOR EACH ROW BEGIN DELETE FROM grpcrpprodssold WHERE SYS_COD = OLD.SYS_COD AND CROP_COD = OLD.CROP_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_grpcrpprodssold_markoutlet1 BEFORE DELETE ON markoutlet FOR EACH ROW BEGIN DELETE FROM grpcrpprodssold WHERE MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_grpcrpprodssoldperiods_grpcrpprodssold1 BEFORE DELETE ON grpcrpprodssold FOR EACH ROW BEGIN DELETE FROM grpcrpprodssoldperiods WHERE SYS_COD = OLD.SYS_COD AND CROP_COD = OLD.CROP_COD AND PROD_COD = OLD.PROD_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_grpcrpprodssoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM grpcrpprodssoldperiods WHERE period_id = OLD.period_id; END;
CREATE TRIGGER DLT_fk_liveavailresperiods_liveavailres1 BEFORE DELETE ON liveavailres FOR EACH ROW BEGIN DELETE FROM liveavailresperiods WHERE SYS_COD = OLD.SYS_COD AND FEED_COD = OLD.FEED_COD; END;
CREATE TRIGGER DLT_fk_liveavailresperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM liveavailresperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "liveavailresperiods" violates foreign key constraint "fk_liveavailresperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_livegroupsperiods_livegroups1 BEFORE DELETE ON livegroups FOR EACH ROW BEGIN DELETE FROM livegroupsperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND HERD_COD = OLD.HERD_COD; END;
CREATE TRIGGER DLT_fk_livegroupsperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM livegroupsperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livegroupsperiods" violates foreign key constraint "fk_livegroupsperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_livehvstcat_livehvst1 BEFORE DELETE ON livehvst FOR EACH ROW BEGIN DELETE FROM livehvstcat WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_livehvstcatperiods_livehvstcat1 BEFORE DELETE ON livehvstcat FOR EACH ROW BEGIN DELETE FROM livehvstcatperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD AND HERD_COD = OLD.HERD_COD; END;
CREATE TRIGGER DLT_fk_livehvstcatperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM livehvstcatperiods WHERE period_id = OLD.period_id; END;
CREATE TRIGGER DLT_fk_livehvstfeedperiods_livehvstfeed1 BEFORE DELETE ON livehvstfeed FOR EACH ROW BEGIN DELETE FROM livehvstfeedperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD AND FLIVE_ICOD = OLD.FLIVE_ICOD AND FGROUP_COD = OLD.FGROUP_COD; END;
CREATE TRIGGER DLT_fk_livehvstfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM livehvstfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvstfeedperiods" violates foreign key constraint "fk_livehvstfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_livehvstperiods_livehvst1 BEFORE DELETE ON livehvst FOR EACH ROW BEGIN DELETE FROM livehvstperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_livehvstperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM livehvstperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvstperiods" violates foreign key constraint "fk_livehvstperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_livehvstsoldcatperiods_livehvstsoldcat1 BEFORE DELETE ON livehvstsoldcat FOR EACH ROW BEGIN DELETE FROM livehvstsoldcatperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD AND HERD_COD = OLD.HERD_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_livehvstsoldcatperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM livehvstsoldcatperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvstsoldcatperiods" violates foreign key constraint "fk_livehvstsoldcatperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_livehvstsoldperiods_livehvstsold1 BEFORE DELETE ON livehvstsold FOR EACH ROW BEGIN DELETE FROM livehvstsoldperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_livehvstsoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM livehvstsoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvstsoldperiods" violates foreign key constraint "fk_livehvstsoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_livehvsttim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM livehvsttim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livehvsttim" violates foreign key constraint "fk_livehvsttim_periods"') END; END;
CREATE TRIGGER DLT_fk_livehvsttimcat_livehvstcat1 BEFORE DELETE ON livehvstcat FOR EACH ROW BEGIN DELETE FROM livehvsttimcat WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND LIVE_COD = OLD.LIVE_COD AND PROD_COD = OLD.PROD_COD AND HERD_COD = OLD.HERD_COD; END;
CREATE TRIGGER DLT_fk_livehvsttimcat_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM livehvsttimcat WHERE NMONTH = OLD.period_id; END;
CREATE TRIGGER DLT_fk_livemangrplabourB_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM livemangrplabourB WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_livemangrptim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM livemangrptim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livemangrptim" violates foreign key constraint "fk_livemangrptim_periods"') END; END;
CREATE TRIGGER DLT_fk_livemanlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM livemanlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_livemanlabour_liveman1 BEFORE DELETE ON liveman FOR EACH ROW BEGIN DELETE FROM livemanlabour WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_livemantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM livemantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "livemantim" violates foreign key constraint "fk_livemantim_periods"') END; END;
CREATE TRIGGER DLT_fk_lvstosysherdstr_lvstosys1 BEFORE DELETE ON lvstosys FOR EACH ROW BEGIN DELETE FROM lvstosysherdstr WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD; END;
CREATE TRIGGER DLT_fk_lvstosyslabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM lvstosyslabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_lvstosyslabour_lvstosys1 BEFORE DELETE ON lvstosys FOR EACH ROW BEGIN DELETE FROM lvstosyslabour WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD; END;
CREATE TRIGGER DLT_fk_lvstosysperiods_lvstosys1 BEFORE DELETE ON lvstosys FOR EACH ROW BEGIN DELETE FROM lvstosysperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD; END;
CREATE TRIGGER DLT_fk_lvstosysperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM lvstosysperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "lvstosysperiods" violates foreign key constraint "fk_lvstosysperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_mnrheapfeedperiods_mnrheapfeed1 BEFORE DELETE ON mnrheapfeed FOR EACH ROW BEGIN DELETE FROM mnrheapfeedperiods WHERE SYS_COD = OLD.SYS_COD AND HEAP_COD = OLD.HEAP_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_mnrheapfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM mnrheapfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "mnrheapfeedperiods" violates foreign key constraint "fk_mnrheapfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_mnrheapprodsperiods_mnrheapprods1 BEFORE DELETE ON mnrheapprods FOR EACH ROW BEGIN DELETE FROM mnrheapprodsperiods WHERE SYS_COD = OLD.SYS_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_mnrheapprodsperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM mnrheapprodsperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "mnrheapprodsperiods" violates foreign key constraint "fk_mnrheapprodsperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_mnrheapsoldperiods_mnrheapsold1 BEFORE DELETE ON mnrheapsold FOR EACH ROW BEGIN DELETE FROM mnrheapsoldperiods WHERE mnrheapsold_SYS_COD = OLD.SYS_COD AND mnrheapsold_HEAP_COD = OLD.HEAP_COD AND mnrheapsold_MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_mnrheapsoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM mnrheapsoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "mnrheapsoldperiods" violates foreign key constraint "fk_mnrheapsoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_moduletree_moduletree1 BEFORE DELETE ON moduletree FOR EACH ROW BEGIN DELETE FROM moduletree WHERE parent_module = OLD.module_id; END;
CREATE TRIGGER DLT_fk_otherhhcpperiods_otherhhcp1 BEFORE DELETE ON otherhhcp FOR EACH ROW BEGIN DELETE FROM otherhhcpperiods WHERE SYS_COD = OLD.SYS_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_otherhhcpperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM otherhhcpperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "otherhhcpperiods" violates foreign key constraint "fk_otherhhcpperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_otherhhexpperiods_otherhhexp1 BEFORE DELETE ON otherhhexp FOR EACH ROW BEGIN DELETE FROM otherhhexpperiods WHERE SYS_COD = OLD.SYS_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_otherhhexpperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM otherhhexpperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "otherhhexpperiods" violates foreign key constraint "fk_otherhhexpperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_otherincomeperiods_otherincome1 BEFORE DELETE ON otherincome FOR EACH ROW BEGIN DELETE FROM otherincomeperiods WHERE SYS_COD = OLD.SYS_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_otherincomeperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM otherincomeperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "otherincomeperiods" violates foreign key constraint "fk_otherincomeperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_othermanlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM othermanlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_othermanlabour_otherman1 BEFORE DELETE ON otherman FOR EACH ROW BEGIN DELETE FROM othermanlabour WHERE SYS_COD = OLD.SYS_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_othermantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM othermantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "othermantim" violates foreign key constraint "fk_othermantim_periods"') END; END;
CREATE TRIGGER DLT_fk_otherprodperiods_otherprod1 BEFORE DELETE ON otherprod FOR EACH ROW BEGIN DELETE FROM otherprodperiods WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_otherprodperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM otherprodperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "otherprodperiods" violates foreign key constraint "fk_otherprodperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_owneduselabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM owneduselabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_owneduselabour_owneduse1 BEFORE DELETE ON owneduse FOR EACH ROW BEGIN DELETE FROM owneduselabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_owneduseperiods_owneduse1 BEFORE DELETE ON owneduse FOR EACH ROW BEGIN DELETE FROM owneduseperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_owneduseperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM owneduseperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "owneduseperiods" violates foreign key constraint "fk_owneduseperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_ownusedvlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM ownusedvlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_ownusedvlabour_ownusedv1 BEFORE DELETE ON ownusedv FOR EACH ROW BEGIN DELETE FROM ownusedvlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD; END;
CREATE TRIGGER DLT_fk_ownusedvperiods_ownusedv1 BEFORE DELETE ON ownusedv FOR EACH ROW BEGIN DELETE FROM ownusedvperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD; END;
CREATE TRIGGER DLT_fk_ownusedvperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM ownusedvperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "ownusedvperiods" violates foreign key constraint "fk_ownusedvperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_plotlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM plotlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_plotlabour_plotmantim1 BEFORE DELETE ON plotmantim FOR EACH ROW BEGIN DELETE FROM plotlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_plotman_activity1 BEFORE DELETE ON activity FOR EACH ROW BEGIN DELETE FROM plotman WHERE ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_plotman_plotmantim BEFORE DELETE ON plotman FOR EACH ROW BEGIN DELETE FROM plotmantim WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_plotman_spadstown1 BEFORE DELETE ON spadstown FOR EACH ROW BEGIN DELETE FROM plotman WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD; END;
CREATE TRIGGER DLT_fk_plotmanfert_plotmantim1 BEFORE DELETE ON plotmantim FOR EACH ROW BEGIN DELETE FROM plotmanfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD AND NMONTH = OLD.NMONTH; END;
CREATE TRIGGER DLT_fk_plotmanlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM plotmanlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_plotmanlabour_plotman1 BEFORE DELETE ON plotman FOR EACH ROW BEGIN DELETE FROM plotmanlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_plotmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM plotmanperiods WHERE period_id = OLD.period_id; END;
CREATE TRIGGER DLT_fk_plotmanperiods_plotman1 BEFORE DELETE ON plotman FOR EACH ROW BEGIN DELETE FROM plotmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_plotmanprchfert_ferttype1 BEFORE DELETE ON ferttype FOR EACH ROW BEGIN DELETE FROM plotmanprchfert WHERE FERTYP_COD = OLD.FERTYP_COD; END;
CREATE TRIGGER DLT_fk_plotmanprchfert_plotman1 BEFORE DELETE ON plotman FOR EACH ROW BEGIN DELETE FROM plotmanprchfert WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_plotmanprchfertperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN DELETE FROM plotmanprchfertperiods WHERE period_id = OLD.period_id; END;
CREATE TRIGGER DLT_fk_plotmanprchfertperiods_plotmanprchfert1 BEFORE DELETE ON plotmanprchfert FOR EACH ROW BEGIN DELETE FROM plotmanprchfertperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND ACTY_COD = OLD.ACTY_COD AND FERTYP_COD = OLD.FERTYP_COD; END;
CREATE TRIGGER DLT_fk_plotmantim_periods10 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM plotmantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotmantim" violates foreign key constraint "fk_plotmantim_periods10"') END; END;
CREATE TRIGGER DLT_fk_plotpaddspelabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM plotpaddspelabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_plotpaddspelabour_plotpaddspe1 BEFORE DELETE ON plotpaddspe FOR EACH ROW BEGIN DELETE FROM plotpaddspelabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMPADD = OLD.NUMPADD AND CROP_COD = OLD.CROP_COD; END;
CREATE TRIGGER DLT_fk_plotseasonsperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM plotseasonsperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "plotseasonsperiods" violates foreign key constraint "fk_plotseasonsperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_plotseasonsperiods_plotseasons1 BEFORE DELETE ON plotseasons FOR EACH ROW BEGIN DELETE FROM plotseasonsperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON; END;
CREATE TRIGGER DLT_fk_stallfeeprchperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM stallfeeprchperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "stallfeeprchperiods" violates foreign key constraint "fk_stallfeeprchperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_stallfeeprchperiods_stallfeeprch1 BEFORE DELETE ON stallfeeprch FOR EACH ROW BEGIN DELETE FROM stallfeeprchperiods WHERE SYS_COD = OLD.SYS_COD AND FEED_COD = OLD.FEED_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_sysmodulenotes_system1 BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM sysmodulenotes WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_systemperiod_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM systemperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "systemperiods" violates foreign key constraint "fk_systemperiod_periods1"') END; END;
CREATE TRIGGER DLT_fk_systemperiod_system1 BEFORE DELETE ON system FOR EACH ROW BEGIN DELETE FROM systemperiods WHERE SYS_COD = OLD.SYS_COD; END;
CREATE TRIGGER DLT_fk_table1_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM labforceperiods WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_table1_livemangrp1 BEFORE DELETE ON livemangrp FOR EACH ROW BEGIN DELETE FROM livemangrplabourB WHERE SYS_COD = OLD.SYS_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_table1_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM labforceperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "labforceperiods" violates foreign key constraint "fk_table1_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegforamanfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegforamanfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegforamanfeedperiods" violates foreign key constraint "fk_vegforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegforamanfeedperiods_vegforamanfeed1 BEFORE DELETE ON vegforamanfeed FOR EACH ROW BEGIN DELETE FROM vegforamanfeedperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_vegforamanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegforamanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegforamanperiods" violates foreign key constraint "fk_vegforamanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegforamanperiods_vegforaman1 BEFORE DELETE ON vegforaman FOR EACH ROW BEGIN DELETE FROM vegforamanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD; END;
CREATE TRIGGER DLT_fk_vegforamansoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegforamansoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegforamansoldperiods" violates foreign key constraint "fk_vegforamansoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegforamansoldperiods_vegforamansold1 BEFORE DELETE ON vegforamansold FOR EACH ROW BEGIN DELETE FROM vegforamansoldperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FORA_COD = OLD.FORA_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_vegforamantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM vegforamantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegforamantim" violates foreign key constraint "fk_vegforamantim_periods"') END; END;
CREATE TRIGGER DLT_fk_vegmanlabour_labforce1 BEFORE DELETE ON labforce FOR EACH ROW BEGIN DELETE FROM vegmanlabour WHERE SYS_COD = OLD.SYS_COD AND PERS_COD = OLD.PERS_COD; END;
CREATE TRIGGER DLT_fk_vegmanlabour_vegman1 BEFORE DELETE ON vegman FOR EACH ROW BEGIN DELETE FROM vegmanlabour WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_vegmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegmanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmanperiods" violates foreign key constraint "fk_vegmanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegmanperiods_vegman1 BEFORE DELETE ON vegman FOR EACH ROW BEGIN DELETE FROM vegmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD; END;
CREATE TRIGGER DLT_fk_vegmanprchfertperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegmanprchfertperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmanprchfertperiods" violates foreign key constraint "fk_vegmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegmanprchfertperiods_vegmanprchfert1 BEFORE DELETE ON vegmanprchfert FOR EACH ROW BEGIN DELETE FROM vegmanprchfertperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND FERTYP_COD = OLD.FERTYP_COD; END;
CREATE TRIGGER DLT_fk_vegmantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM vegmantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegmantim" violates foreign key constraint "fk_vegmantim_periods"') END; END;
CREATE TRIGGER DLT_fk_vegprodmanfeedperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegprodmanfeedperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegprodmanfeedperiods" violates foreign key constraint "fk_vegprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegprodmanfeedperiods_vegprodmanfeed1 BEFORE DELETE ON vegprodmanfeed FOR EACH ROW BEGIN DELETE FROM vegprodmanfeedperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND LIVE_ICOD = OLD.LIVE_ICOD AND GROUP_COD = OLD.GROUP_COD; END;
CREATE TRIGGER DLT_fk_vegprodmanperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegprodmanperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegprodmanperiods" violates foreign key constraint "fk_vegprodmanperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegprodmanperiods_vegprodman1 BEFORE DELETE ON vegprodman FOR EACH ROW BEGIN DELETE FROM vegprodmanperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD; END;
CREATE TRIGGER DLT_fk_vegprodmansoldperiods_periods1 BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM vegprodmansoldperiods WHERE period_id = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegprodmansoldperiods" violates foreign key constraint "fk_vegprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER DLT_fk_vegprodmansoldperiods_vegprodmansold1 BEFORE DELETE ON vegprodmansold FOR EACH ROW BEGIN DELETE FROM vegprodmansoldperiods WHERE SYS_COD = OLD.SYS_COD AND PLOT_COD = OLD.PLOT_COD AND NUMSEASON = OLD.NUMSEASON AND CROP_COD = OLD.CROP_COD AND VEG_COD = OLD.VEG_COD AND ACTY_COD = OLD.ACTY_COD AND PROD_COD = OLD.PROD_COD AND MARK_COD = OLD.MARK_COD; END;
CREATE TRIGGER DLT_fk_vegprodmantim_periods BEFORE DELETE ON periods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (NMONTH) as value FROM vegprodmantim WHERE NMONTH = OLD.period_id) IS NOT NULL) THEN RAISE(ABORT, 'delete on table "vegprodmantim" violates foreign key constraint "fk_vegprodmantim_periods"') END; END;
CREATE TRIGGER INS_fk_04d77330_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON system FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYST_COD) as value FROM systype WHERE SYST_COD = NEW.SYST_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "system" violates foreign key constraint "fk_04d77330_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04d7e1e4_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON system FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CNTY_COD) as value FROM country WHERE CNTY_COD = NEW.CNTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "system" violates foreign key constraint "fk_04d7e1e4_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04d85584_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON labforce FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "labforce" violates foreign key constraint "fk_04d85584_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04d8cf32_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON spadstown FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "spadstown" violates foreign key constraint "fk_04d8cf32_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04d94dfe_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON spadstown FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.DRAIN_COD IS NOT NULL) AND ((SELECT (DRAIN_COD) as value FROM drainage WHERE DRAIN_COD = NEW.DRAIN_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "spadstown" violates foreign key constraint "fk_04d94dfe_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04d9d1f2_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON spadstown FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.SOIL_COD IS NOT NULL) AND ((SELECT (SOIL_COD) as value FROM soil WHERE SOIL_COD = NEW.SOIL_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "spadstown" violates foreign key constraint "fk_04d9d1f2_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04da5a28_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON lvstosys FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosys" violates foreign key constraint "fk_04da5a28_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04dae7f4_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON lvstosys FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM livestoc WHERE LIVE_COD = NEW.LIVE_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosys" violates foreign key constraint "fk_04dae7f4_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_04db798a_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON wellbeing FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "wellbeing" violates foreign key constraint "fk_04db798a_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_11fb077e_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON crpprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeed" violates foreign key constraint "fk_11fb077e_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_11fbb070_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON crpprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeed" violates foreign key constraint "fk_11fbb070_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_11fc8fea_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON crpforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeed" violates foreign key constraint "fk_11fc8fea_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_11fd60d2_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON crpforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeed" violates foreign key constraint "fk_11fd60d2_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_11fe14d2_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON vegprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeed" violates foreign key constraint "fk_11fe14d2_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_11fedb2e_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON vegprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeed" violates foreign key constraint "fk_11fedb2e_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_11ff9578_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON vegforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeed" violates foreign key constraint "fk_11ff9578_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_12006d90_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON vegforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeed" violates foreign key constraint "fk_12006d90_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_120155fc_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON grassprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeed" violates foreign key constraint "fk_120155fc_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_12022c20_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON grassprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeed" violates foreign key constraint "fk_12022c20_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_12030438_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON grassforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeed" violates foreign key constraint "fk_12030438_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_1203ea6a_bcec_11e0_9e78_58946b4c242c BEFORE INSERT ON grassforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeed" violates foreign key constraint "fk_1203ea6a_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29cb5696_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON liveman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveman" violates foreign key constraint "fk_29cb5696_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29cbf222_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON liveman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveman" violates foreign key constraint "fk_29cbf222_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29cc7a26_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livelabour" violates foreign key constraint "fk_29cc7a26_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29cd31a0_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON otherprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherprod" violates foreign key constraint "fk_29cd31a0_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29ce0558_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livemantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || ACTY_COD) as value FROM liveman WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemantim" violates foreign key constraint "fk_29ce0558_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29ceeee6_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || ACTY_COD || NMONTH) as value FROM livemantim WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livelabour" violates foreign key constraint "fk_29ceeee6_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29d0895e_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livemangrp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrp" violates foreign key constraint "fk_29d0895e_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29d1445c_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livemangrp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrp" violates foreign key constraint "fk_29d1445c_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29d207b6_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livemangrptim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || ACTY_COD) as value FROM livemangrp WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrptim" violates foreign key constraint "fk_29d207b6_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29d2d448_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livemangrplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || ACTY_COD || NMONTH) as value FROM livemangrptim WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabour" violates foreign key constraint "fk_29d2d448_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_29d3b700_bced_11e0_9e78_58946b4c242c BEFORE INSERT ON livemangrplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabour" violates foreign key constraint "fk_29d3b700_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_322bba82_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforaman" violates foreign key constraint "fk_322bba82_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_322c6d1a_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD || CROP_COD) as value FROM cropfora WHERE FORA_COD = NEW.FORA_COD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforaman" violates foreign key constraint "fk_322c6d1a_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_322d0f86_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansold" violates foreign key constraint "fk_322d0f86_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_322da694_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansold" violates foreign key constraint "fk_322da694_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_322e3410_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamantim" violates foreign key constraint "fk_322e3410_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_322ed352_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "crpforamantim" violates foreign key constraint "fk_322ed352_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_322f701e_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD || NMONTH) as value FROM crpforamantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforalabour" violates foreign key constraint "fk_322f701e_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_32302482_bce4_11e0_a317_58946b4c242c BEFORE INSERT ON crpforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforalabour" violates foreign key constraint "fk_32302482_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334977de_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassman" violates foreign key constraint "fk_334977de_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334a053c_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassman" violates foreign key constraint "fk_334a053c_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334a93d0_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmantim" violates foreign key constraint "fk_334a93d0_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334b315a_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grasslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || NMONTH) as value FROM grassmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grasslabour" violates foreign key constraint "fk_334b315a_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334bd74a_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grasslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grasslabour" violates foreign key constraint "fk_334bd74a_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334c80b4_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || NMONTH) as value FROM grassmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanfert" violates foreign key constraint "fk_334c80b4_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334d32b6_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanfert" violates foreign key constraint "fk_334d32b6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334ddf2c_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfert" violates foreign key constraint "fk_334ddf2c_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334e9ba6_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfert" violates foreign key constraint "fk_334e9ba6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_334f51d6_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassmantim" violates foreign key constraint "fk_334f51d6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_33500fc2_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassmanfert" violates foreign key constraint "fk_33500fc2_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3350d272_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || NMONTH) as value FROM grassmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanheap" violates foreign key constraint "fk_3350d272_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3351a292_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanheap" violates foreign key constraint "fk_3351a292_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_33527082_bce8_11e0_a317_58946b4c242c BEFORE INSERT ON grassmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassmanheap" violates foreign key constraint "fk_33527082_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3994c7c6_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON feedgroups FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "feedgroups" violates foreign key constraint "fk_3994c7c6_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3995a826_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON liveavailres FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailres" violates foreign key constraint "fk_3995a826_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3996875a_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON liveavailres FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (RES_COD) as value FROM restypes WHERE RES_COD = NEW.FEED_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailres" violates foreign key constraint "fk_3996875a_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_39977278_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON stallfeeprch FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || FEED_COD) as value FROM liveavailres WHERE SYS_COD = NEW.SYS_COD AND FEED_COD = NEW.FEED_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprch" violates foreign key constraint "fk_39977278_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_39987088_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON stallfeeprch FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprch" violates foreign key constraint "fk_39987088_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_39997924_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON grazingman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingman" violates foreign key constraint "fk_39997924_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_399a8ba2_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON grazingman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingman" violates foreign key constraint "fk_399a8ba2_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_399baa0a_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON livegroups FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livegroups" violates foreign key constraint "fk_399baa0a_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_399ccfe8_bceb_11e0_9e78_58946b4c242c BEFORE INSERT ON grazingman FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.MLIVE_COD IS NOT NULL AND NEW.MPROD_COD IS NOT NULL) AND ((SELECT (LIVE_COD || PROD_COD) as value FROM lvproducts WHERE LIVE_COD = NEW.MLIVE_COD AND PROD_COD = NEW.MPROD_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grazingman" violates foreign key constraint "fk_399ccfe8_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df4cb58_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropman" violates foreign key constraint "fk_3df4cb58_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df553c0_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropman" violates foreign key constraint "fk_3df553c0_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df5da52_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmantim" violates foreign key constraint "fk_3df5da52_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df7044a_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "cropmantim" violates foreign key constraint "fk_3df7044a_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df7044a_bce2_11e0_a5d9_58946b4c242c0 BEFORE INSERT ON plotmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "plotmantim" violates foreign key constraint "fk_3df7044a_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER INS_fk_3df79fae_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON croplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || NMONTH) as value FROM cropmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "croplabour" violates foreign key constraint "fk_3df79fae_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df84800_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON croplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "croplabour" violates foreign key constraint "fk_3df84800_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df8edbe_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || NMONTH) as value FROM cropmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanfert" violates foreign key constraint "fk_3df8edbe_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanfert" violates foreign key constraint "fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c0 BEFORE INSERT ON plotmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanfert" violates foreign key constraint "fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER INS_fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "cropmanfert" violates foreign key constraint "fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c0 BEFORE INSERT ON plotmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "plotmanfert" violates foreign key constraint "fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER INS_fk_3dfaff5a_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfert" violates foreign key constraint "fk_3dfaff5a_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3dfbbdd2_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfert" violates foreign key constraint "fk_3dfbbdd2_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || NMONTH) as value FROM cropmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanheap" violates foreign key constraint "fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c0 BEFORE INSERT ON plotmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || NMONTH) as value FROM plotmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanheap" violates foreign key constraint "fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER INS_fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanheap" violates foreign key constraint "fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c0 BEFORE INSERT ON plotmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanheap" violates foreign key constraint "fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER INS_fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "cropmanheap" violates foreign key constraint "fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c0 BEFORE INSERT ON plotmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "plotmanheap" violates foreign key constraint "fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER INS_fk_42404990_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheap" violates foreign key constraint "fk_42404990_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4240db80_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheaplvprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheaplvprod" violates foreign key constraint "fk_4240db80_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_42417cf2_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheaplvprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheaplvprod" violates foreign key constraint "fk_42417cf2_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_42422850_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapprods" violates foreign key constraint "fk_42422850_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4242d584_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapaddprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapaddprods" violates foreign key constraint "fk_4242d584_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_42438ace_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapaddprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM mnrheapprods WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapaddprods" violates foreign key constraint "fk_42438ace_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_42444a54_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsold" violates foreign key constraint "fk_42444a54_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_42450cc8_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsold" violates foreign key constraint "fk_42450cc8_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4245d9a0_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeed" violates foreign key constraint "fk_4245d9a0_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4246acfe_bcfa_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeed" violates foreign key constraint "fk_4246acfe_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44360668_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON otherman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherman" violates foreign key constraint "fk_44360668_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44363a70_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON otherman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherman" violates foreign key constraint "fk_44363a70_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44366db0_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON othermantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || ACTY_COD) as value FROM otherman WHERE SYS_COD = NEW.SYS_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "othermantim" violates foreign key constraint "fk_44366db0_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4436a456_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON otherlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherlabour" violates foreign key constraint "fk_4436a456_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4436dbf6_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON farmassets FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "farmassets" violates foreign key constraint "fk_4436dbf6_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4437140e_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON otherhhcp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhcp" violates foreign key constraint "fk_4437140e_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44374c1c_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON otherhhexp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhexp" violates foreign key constraint "fk_44374c1c_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44378808_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON otherincome FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherincome" violates foreign key constraint "fk_44378808_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_4437c516_bcf5_11e0_9e78_58946b4c242c BEFORE INSERT ON otherlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || ACTY_COD || NMONTH) as value FROM othermantim WHERE SYS_COD = NEW.SYS_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "otherlabour" violates foreign key constraint "fk_4437c516_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44bdd730_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodman" violates foreign key constraint "fk_44bdd730_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44be5f16_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD || CROP_COD) as value FROM cropprods WHERE PROD_COD = NEW.PROD_COD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodman" violates foreign key constraint "fk_44be5f16_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44bf621c_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "crpprodmantim" violates foreign key constraint "fk_44bf621c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44bff0a6_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodlabour" violates foreign key constraint "fk_44bff0a6_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44c0841c_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansold" violates foreign key constraint "fk_44c0841c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44c1269c_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansold" violates foreign key constraint "fk_44c1269c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44c1c25a_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmantim" violates foreign key constraint "fk_44c1c25a_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_44c274f2_bce3_11e0_a317_58946b4c242c BEFORE INSERT ON crpprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD || NMONTH) as value FROM crpprodmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodlabour" violates foreign key constraint "fk_44c274f2_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_52042e10_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD) as value FROM ownusedv WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegman" violates foreign key constraint "fk_52042e10_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_5204c096_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegman" violates foreign key constraint "fk_5204c096_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_5205513c_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmantim" violates foreign key constraint "fk_5205513c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_5205f4de_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegmantim" violates foreign key constraint "fk_5205f4de_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_520691fa_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON veglabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || NMONTH) as value FROM vegmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "veglabour" violates foreign key constraint "fk_520691fa_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_52073ee8_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON veglabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "veglabour" violates foreign key constraint "fk_52073ee8_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_5207e4e2_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || NMONTH) as value FROM vegmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanfert" violates foreign key constraint "fk_5207e4e2_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_52089d4c_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanfert" violates foreign key constraint "fk_52089d4c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_52094b84_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegmanfert" violates foreign key constraint "fk_52094b84_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_520a0204_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfert" violates foreign key constraint "fk_520a0204_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_520ac89c_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfert" violates foreign key constraint "fk_520ac89c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_520b8c82_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || NMONTH) as value FROM vegmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanheap" violates foreign key constraint "fk_520b8c82_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_520c5e14_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanheap" violates foreign key constraint "fk_520c5e14_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_520d2dbc_bce5_11e0_a317_58946b4c242c BEFORE INSERT ON vegmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegmanheap" violates foreign key constraint "fk_520d2dbc_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ecf545c_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforaman" violates foreign key constraint "fk_6ecf545c_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ecf860c_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM pastfora WHERE CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforaman" violates foreign key constraint "fk_6ecf860c_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ecfb2c6_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansold" violates foreign key constraint "fk_6ecfb2c6_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ecfeb7e_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansold" violates foreign key constraint "fk_6ecfeb7e_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ed016c6_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamantim" violates foreign key constraint "fk_6ed016c6_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ed04f42_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassforamantim" violates foreign key constraint "fk_6ed04f42_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ed07f1c_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD || NMONTH) as value FROM grassforamantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforalabour" violates foreign key constraint "fk_6ed07f1c_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_6ed0bd38_bcea_11e0_a317_58946b4c242c BEFORE INSERT ON grassforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforalabour" violates foreign key constraint "fk_6ed0bd38_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81de4dee_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapcrpprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpprod" violates foreign key constraint "fk_81de4dee_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81df0784_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapcrpprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpprod" violates foreign key constraint "fk_81df0784_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81dfd6dc_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapcrpfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpfora" violates foreign key constraint "fk_81dfd6dc_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e0a60c_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapcrpfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpfora" violates foreign key constraint "fk_81e0a60c_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e18ba8_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapgrassprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassprod" violates foreign key constraint "fk_81e18ba8_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e26a96_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapgrassprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassprod" violates foreign key constraint "fk_81e26a96_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e35b04_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapgrassfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassfora" violates foreign key constraint "fk_81e35b04_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e44a64_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapgrassfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassfora" violates foreign key constraint "fk_81e44a64_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e549e6_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapvegprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegprod" violates foreign key constraint "fk_81e549e6_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e64d8c_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapvegprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegprod" violates foreign key constraint "fk_81e64d8c_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e7808a_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapvegfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegfora" violates foreign key constraint "fk_81e7808a_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_81e8dec6_bcfb_11e0_b883_58946b4c242c BEFORE INSERT ON mnrheapvegfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegfora" violates foreign key constraint "fk_81e8dec6_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e602aa_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON plotgpspos FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotgpspos" violates foreign key constraint "fk_91e602aa_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e67546_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON plotseasons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotseasons" violates foreign key constraint "fk_91e67546_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e6ee40_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON owneduse FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduse" violates foreign key constraint "fk_91e6ee40_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e76a8c_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON ownusedv FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedv" violates foreign key constraint "fk_91e76a8c_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e7eec6_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON plotpaddoks FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddoks" violates foreign key constraint "fk_91e7eec6_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e87a4e_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON plotpaddspe FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspe" violates foreign key constraint "fk_91e87a4e_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e908ba_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON plotpaddspedt FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROPD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspedt" violates foreign key constraint "fk_91e908ba_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91e99cf8_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON owneduse FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON) as value FROM plotseasons WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduse" violates foreign key constraint "fk_91e99cf8_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91ea399c_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON ownusedv FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedv" violates foreign key constraint "fk_91ea399c_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91eadcd0_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON plotpaddspe FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD) as value FROM plotpaddoks WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspe" violates foreign key constraint "fk_91eadcd0_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_91eb88ce_bce1_11e0_a5d9_58946b4c242c BEFORE INSERT ON plotpaddspedt FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspedt" violates foreign key constraint "fk_91eb88ce_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad2a85e_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforaman" violates foreign key constraint "fk_9ad2a85e_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad2dbee_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM cropfora WHERE CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforaman" violates foreign key constraint "fk_9ad2dbee_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad30588_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansold" violates foreign key constraint "fk_9ad30588_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad33a1c_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansold" violates foreign key constraint "fk_9ad33a1c_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad3628a_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamantim" violates foreign key constraint "fk_9ad3628a_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad39b42_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegforamantim" violates foreign key constraint "fk_9ad39b42_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad3c702_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD || NMONTH) as value FROM vegforamantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforalabour" violates foreign key constraint "fk_9ad3c702_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_9ad4005a_bce7_11e0_a317_58946b4c242c BEFORE INSERT ON vegforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforalabour" violates foreign key constraint "fk_9ad4005a_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cce75930_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodman" violates foreign key constraint "fk_cce75930_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cce7e5bc_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || PROD_COD) as value FROM cropprods WHERE CROP_COD = NEW.VEG_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodman" violates foreign key constraint "fk_cce7e5bc_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cce86a32_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmantim" violates foreign key constraint "fk_cce86a32_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cce900be_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegprodmantim" violates foreign key constraint "fk_cce900be_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cce990ec_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD || NMONTH) as value FROM vegprodmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodlabour" violates foreign key constraint "fk_cce990ec_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ccea3402_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodlabour" violates foreign key constraint "fk_ccea3402_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cceacfc0_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansold" violates foreign key constraint "fk_cceacfc0_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cceb82b2_bce6_11e0_a317_58946b4c242c BEFORE INSERT ON vegprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansold" violates foreign key constraint "fk_cceb82b2_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_cropmanlabour_cropman1 BEFORE INSERT ON cropmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanlabour" violates foreign key constraint "fk_cropmanlabour_cropman1"') END; END;
CREATE TRIGGER INS_fk_cropmanlabour_labforce1 BEFORE INSERT ON cropmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanlabour" violates foreign key constraint "fk_cropmanlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_cropmanperiods_cropman1 BEFORE INSERT ON cropmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanperiods" violates foreign key constraint "fk_cropmanperiods_cropman1"') END; END;
CREATE TRIGGER INS_fk_cropmanperiods_periods1 BEFORE INSERT ON cropmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanperiods" violates foreign key constraint "fk_cropmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_cropmanprchfertperiods_cropmanprchfert1 BEFORE INSERT ON cropmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FERTYP_COD) as value FROM cropmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfertperiods" violates foreign key constraint "fk_cropmanprchfertperiods_cropmanprchfert1"') END; END;
CREATE TRIGGER INS_fk_cropmanprchfertperiods_periods1 BEFORE INSERT ON cropmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfertperiods" violates foreign key constraint "fk_cropmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_cropmantim_periods1 BEFORE INSERT ON cropmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmantim" violates foreign key constraint "fk_cropmantim_periods1"') END; END;
CREATE TRIGGER INS_fk_crpforamanfeedperiods_crpforamanfeed1 BEFORE INSERT ON crpforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD || LIVE_ICOD || GROUP_COD) as value FROM crpforamanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeedperiods" violates foreign key constraint "fk_crpforamanfeedperiods_crpforamanfeed1"') END; END;
CREATE TRIGGER INS_fk_crpforamanfeedperiods_periods1 BEFORE INSERT ON crpforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeedperiods" violates foreign key constraint "fk_crpforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_crpforamanperiods_crpforaman1 BEFORE INSERT ON crpforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanperiods" violates foreign key constraint "fk_crpforamanperiods_crpforaman1"') END; END;
CREATE TRIGGER INS_fk_crpforamanperiods_periods1 BEFORE INSERT ON crpforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanperiods" violates foreign key constraint "fk_crpforamanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_crpforamansoldperiods_crpforamansold1 BEFORE INSERT ON crpforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD || MARK_COD) as value FROM crpforamansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansoldperiods" violates foreign key constraint "fk_crpforamansoldperiods_crpforamansold1"') END; END;
CREATE TRIGGER INS_fk_crpforamansoldperiods_periods1 BEFORE INSERT ON crpforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansoldperiods" violates foreign key constraint "fk_crpforamansoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_crpforamantim_periods BEFORE INSERT ON crpforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamantim" violates foreign key constraint "fk_crpforamantim_periods"') END; END;
CREATE TRIGGER INS_fk_crpprodmanfeedperiods_crpprodmanfeed1 BEFORE INSERT ON crpprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD || LIVE_ICOD || GROUP_COD) as value FROM crpprodmanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeedperiods" violates foreign key constraint "fk_crpprodmanfeedperiods_crpprodmanfeed1"') END; END;
CREATE TRIGGER INS_fk_crpprodmanfeedperiods_periods1 BEFORE INSERT ON crpprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeedperiods" violates foreign key constraint "fk_crpprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_crpprodmanperiods_crpprodman1 BEFORE INSERT ON crpprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanperiods" violates foreign key constraint "fk_crpprodmanperiods_crpprodman1"') END; END;
CREATE TRIGGER INS_fk_crpprodmanperiods_periods1 BEFORE INSERT ON crpprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanperiods" violates foreign key constraint "fk_crpprodmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_crpprodmansoldperiods_crpprodmansold1 BEFORE INSERT ON crpprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD || MARK_COD) as value FROM crpprodmansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansoldperiods" violates foreign key constraint "fk_crpprodmansoldperiods_crpprodmansold1"') END; END;
CREATE TRIGGER INS_fk_crpprodmansoldperiods_periods1 BEFORE INSERT ON crpprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansoldperiods" violates foreign key constraint "fk_crpprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_crpprodmantim_periods BEFORE INSERT ON crpprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmantim" violates foreign key constraint "fk_crpprodmantim_periods"') END; END;
CREATE TRIGGER INS_fk_e2e10f26_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodman" violates foreign key constraint "fk_e2e10f26_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e2e1bb1a_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || PROD_COD) as value FROM pastprods WHERE CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodman" violates foreign key constraint "fk_e2e1bb1a_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e2e27c58_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmantim" violates foreign key constraint "fk_e2e27c58_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e2e34ffc_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassprodmantim" violates foreign key constraint "fk_e2e34ffc_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e2e41e3c_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD || NMONTH) as value FROM grassprodmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodlabour" violates foreign key constraint "fk_e2e41e3c_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e2e50928_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodlabour" violates foreign key constraint "fk_e2e50928_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e2e5e942_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansold" violates foreign key constraint "fk_e2e5e942_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e2e6d992_bce9_11e0_a317_58946b4c242c BEFORE INSERT ON grassprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansold" violates foreign key constraint "fk_e2e6d992_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e67e4fee_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "actymethods" violates foreign key constraint "fk_e67e4fee_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e67f0178_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropprods" violates foreign key constraint "fk_e67f0178_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e67fbf1e_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM cpprods WHERE PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropprods" violates foreign key constraint "fk_e67fbf1e_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e680c62a_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropfora" violates foreign key constraint "fk_e680c62a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e6818d8a_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON cropfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD) as value FROM forages WHERE FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropfora" violates foreign key constraint "fk_e6818d8a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e6825a62_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON pastprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastprods" violates foreign key constraint "fk_e6825a62_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e6831844_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON pastprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM cpprods WHERE PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastprods" violates foreign key constraint "fk_e6831844_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e683dda6_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON pastfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastfora" violates foreign key constraint "fk_e683dda6_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e684a4ca_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON pastfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD) as value FROM forages WHERE FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastfora" violates foreign key constraint "fk_e684a4ca_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e6857184_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON lvproducts FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM livestoc WHERE LIVE_COD = NEW.LIVE_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvproducts" violates foreign key constraint "fk_e6857184_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e68642f8_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON lvproducts FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM products WHERE PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvproducts" violates foreign key constraint "fk_e68642f8_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e6871a7a_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON systype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM livestoc WHERE LIVE_COD = NEW.LIVE_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "systype" violates foreign key constraint "fk_e6871a7a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e687f8dc_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON systype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "systype" violates foreign key constraint "fk_e687f8dc_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_e688edd2_bce0_11e0_a5d9_58946b4c242c BEFORE INSERT ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.UNIT_COD IS NOT NULL) AND ((SELECT (UNIT_COD) as value FROM actyunits WHERE UNIT_COD = NEW.UNIT_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "activity" violates foreign key constraint "fk_e688edd2_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee3ece80_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvst FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvst" violates foreign key constraint "fk_ee3ece80_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee3f5dd2_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvst FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD || PROD_COD) as value FROM lvproducts WHERE LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvst" violates foreign key constraint "fk_ee3f5dd2_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee3fe626_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvsttim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttim" violates foreign key constraint "fk_ee3fe626_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee4080b8_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || NMONTH) as value FROM livehvsttim WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstlabour" violates foreign key constraint "fk_ee4080b8_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee4120e0_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstlabour" violates foreign key constraint "fk_ee4120e0_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee41c09a_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsold" violates foreign key constraint "fk_ee41c09a_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee426bb2_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsold" violates foreign key constraint "fk_ee426bb2_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee43d100_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstsoldcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD) as value FROM livehvstcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcat" violates foreign key constraint "fk_ee43d100_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee4490b8_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstsoldcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcat" violates foreign key constraint "fk_ee4490b8_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee454b02_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeed" violates foreign key constraint "fk_ee454b02_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_ee4617da_bcf8_11e0_948f_58946b4c242c BEFORE INSERT ON livehvstfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.FLIVE_ICOD AND GROUP_COD = NEW.FGROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeed" violates foreign key constraint "fk_ee4617da_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER INS_fk_feedgroupslabour_feedgroups1 BEFORE INSERT ON feedgroupslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "feedgroupslabour" violates foreign key constraint "fk_feedgroupslabour_feedgroups1"') END; END;
CREATE TRIGGER INS_fk_feedgroupslabour_labforce1 BEFORE INSERT ON feedgroupslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "feedgroupslabour" violates foreign key constraint "fk_feedgroupslabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_grassforamanfeedperiods_grassforamanfeed1 BEFORE INSERT ON grassforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD || LIVE_ICOD || GROUP_COD) as value FROM grassforamanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeedperiods" violates foreign key constraint "fk_grassforamanfeedperiods_grassforamanfeed1"') END; END;
CREATE TRIGGER INS_fk_grassforamanfeedperiods_periods1 BEFORE INSERT ON grassforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeedperiods" violates foreign key constraint "fk_grassforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassforamanperiods_grassforaman1 BEFORE INSERT ON grassforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanperiods" violates foreign key constraint "fk_grassforamanperiods_grassforaman1"') END; END;
CREATE TRIGGER INS_fk_grassforamanperiods_periods1 BEFORE INSERT ON grassforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanperiods" violates foreign key constraint "fk_grassforamanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassforamansoldperiods_grassforamansold1 BEFORE INSERT ON grassforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD || MARK_COD) as value FROM grassforamansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansoldperiods" violates foreign key constraint "fk_grassforamansoldperiods_grassforamansold1"') END; END;
CREATE TRIGGER INS_fk_grassforamansoldperiods_periods1 BEFORE INSERT ON grassforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansoldperiods" violates foreign key constraint "fk_grassforamansoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassforamantim_periods BEFORE INSERT ON grassforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamantim" violates foreign key constraint "fk_grassforamantim_periods"') END; END;
CREATE TRIGGER INS_fk_grassmanlabour_grassman1 BEFORE INSERT ON grassmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanlabour" violates foreign key constraint "fk_grassmanlabour_grassman1"') END; END;
CREATE TRIGGER INS_fk_grassmanlabour_labforce1 BEFORE INSERT ON grassmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanlabour" violates foreign key constraint "fk_grassmanlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_grassmanperiods_grassman1 BEFORE INSERT ON grassmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanperiods" violates foreign key constraint "fk_grassmanperiods_grassman1"') END; END;
CREATE TRIGGER INS_fk_grassmanperiods_periods1 BEFORE INSERT ON grassmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanperiods" violates foreign key constraint "fk_grassmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassmanprchfertperiods_grassmanprchfert1 BEFORE INSERT ON grassmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FERTYP_COD) as value FROM grassmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfertperiods" violates foreign key constraint "fk_grassmanprchfertperiods_grassmanprchfert1"') END; END;
CREATE TRIGGER INS_fk_grassmanprchfertperiods_periods1 BEFORE INSERT ON grassmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfertperiods" violates foreign key constraint "fk_grassmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassmantim_periods BEFORE INSERT ON grassmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmantim" violates foreign key constraint "fk_grassmantim_periods"') END; END;
CREATE TRIGGER INS_fk_grassprodmanfeedperiods_grassprodmanfeed1 BEFORE INSERT ON grassprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD || LIVE_ICOD || GROUP_COD) as value FROM grassprodmanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeedperiods" violates foreign key constraint "fk_grassprodmanfeedperiods_grassprodmanfeed1"') END; END;
CREATE TRIGGER INS_fk_grassprodmanfeedperiods_periods1 BEFORE INSERT ON grassprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeedperiods" violates foreign key constraint "fk_grassprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassprodmanperiods_grassprodman1 BEFORE INSERT ON grassprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanperiods" violates foreign key constraint "fk_grassprodmanperiods_grassprodman1"') END; END;
CREATE TRIGGER INS_fk_grassprodmanperiods_periods1 BEFORE INSERT ON grassprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanperiods" violates foreign key constraint "fk_grassprodmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassprodmansoldperiods_grassprodmansold1 BEFORE INSERT ON grassprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD || MARK_COD) as value FROM grassprodmansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansoldperiods" violates foreign key constraint "fk_grassprodmansoldperiods_grassprodmansold1"') END; END;
CREATE TRIGGER INS_fk_grassprodmansoldperiods_periods1 BEFORE INSERT ON grassprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansoldperiods" violates foreign key constraint "fk_grassprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grassprodmantim_periods BEFORE INSERT ON grassprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmantim" violates foreign key constraint "fk_grassprodmantim_periods"') END; END;
CREATE TRIGGER INS_fk_grazingmanperiods_grazingman1 BEFORE INSERT ON grazingmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || LIVE_ICOD || GROUP_COD) as value FROM grazingman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingmanperiods" violates foreign key constraint "fk_grazingmanperiods_grazingman1"') END; END;
CREATE TRIGGER INS_fk_grazingmanperiods_periods1 BEFORE INSERT ON grazingmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingmanperiods" violates foreign key constraint "fk_grazingmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforacons_grpcrpforaprod1 BEFORE INSERT ON grpcrpforacons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || FORA_COD) as value FROM grpcrpforaprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforacons" violates foreign key constraint "fk_grpcrpforacons_grpcrpforaprod1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforacons_periods1 BEFORE INSERT ON grpcrpforacons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforacons" violates foreign key constraint "fk_grpcrpforacons_periods1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforaprod_cropfora1 BEFORE INSERT ON grpcrpforaprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM cropfora WHERE CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforaprod" violates foreign key constraint "fk_grpcrpforaprod_cropfora1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforaprod_system1 BEFORE INSERT ON grpcrpforaprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforaprod" violates foreign key constraint "fk_grpcrpforaprod_system1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforasold_grpcrpforaprod1 BEFORE INSERT ON grpcrpforasold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || FORA_COD) as value FROM grpcrpforaprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasold" violates foreign key constraint "fk_grpcrpforasold_grpcrpforaprod1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforasold_markoutlet1 BEFORE INSERT ON grpcrpforasold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasold" violates foreign key constraint "fk_grpcrpforasold_markoutlet1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforasoldperiods_grpcrpforasold1 BEFORE INSERT ON grpcrpforasoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || FORA_COD || MARK_COD) as value FROM grpcrpforasold WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasoldperiods" violates foreign key constraint "fk_grpcrpforasoldperiods_grpcrpforasold1"') END; END;
CREATE TRIGGER INS_fk_grpcrpforasoldperiods_periods1 BEFORE INSERT ON grpcrpforasoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasoldperiods" violates foreign key constraint "fk_grpcrpforasoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodscons_grpcrpprodsprod1 BEFORE INSERT ON grpcrpprodscons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || PROD_COD) as value FROM grpcrpprodsprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodscons" violates foreign key constraint "fk_grpcrpprodscons_grpcrpprodsprod1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodscons_periods1 BEFORE INSERT ON grpcrpprodscons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodscons" violates foreign key constraint "fk_grpcrpprodscons_periods1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodsprod_cropprods1 BEFORE INSERT ON grpcrpprodsprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || PROD_COD) as value FROM cropprods WHERE CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodsprod" violates foreign key constraint "fk_grpcrpprodsprod_cropprods1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodsprod_system1 BEFORE INSERT ON grpcrpprodsprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodsprod" violates foreign key constraint "fk_grpcrpprodsprod_system1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodssold_grpcrpprodsprod1 BEFORE INSERT ON grpcrpprodssold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || PROD_COD) as value FROM grpcrpprodsprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssold" violates foreign key constraint "fk_grpcrpprodssold_grpcrpprodsprod1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodssold_markoutlet1 BEFORE INSERT ON grpcrpprodssold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssold" violates foreign key constraint "fk_grpcrpprodssold_markoutlet1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodssoldperiods_grpcrpprodssold1 BEFORE INSERT ON grpcrpprodssoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || PROD_COD || MARK_COD) as value FROM grpcrpprodssold WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssoldperiods" violates foreign key constraint "fk_grpcrpprodssoldperiods_grpcrpprodssold1"') END; END;
CREATE TRIGGER INS_fk_grpcrpprodssoldperiods_periods1 BEFORE INSERT ON grpcrpprodssoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssoldperiods" violates foreign key constraint "fk_grpcrpprodssoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_liveavailresperiods_liveavailres1 BEFORE INSERT ON liveavailresperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || FEED_COD) as value FROM liveavailres WHERE SYS_COD = NEW.SYS_COD AND FEED_COD = NEW.FEED_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailresperiods" violates foreign key constraint "fk_liveavailresperiods_liveavailres1"') END; END;
CREATE TRIGGER INS_fk_liveavailresperiods_periods1 BEFORE INSERT ON liveavailresperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailresperiods" violates foreign key constraint "fk_liveavailresperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_livegroupsperiods_livegroups1 BEFORE INSERT ON livegroupsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || HERD_COD) as value FROM livegroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livegroupsperiods" violates foreign key constraint "fk_livegroupsperiods_livegroups1"') END; END;
CREATE TRIGGER INS_fk_livegroupsperiods_periods1 BEFORE INSERT ON livegroupsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livegroupsperiods" violates foreign key constraint "fk_livegroupsperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_livehvstcat_livehvst1 BEFORE INSERT ON livehvstcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstcat" violates foreign key constraint "fk_livehvstcat_livehvst1"') END; END;
CREATE TRIGGER INS_fk_livehvstcatperiods_livehvstcat1 BEFORE INSERT ON livehvstcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD) as value FROM livehvstcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstcatperiods" violates foreign key constraint "fk_livehvstcatperiods_livehvstcat1"') END; END;
CREATE TRIGGER INS_fk_livehvstcatperiods_periods1 BEFORE INSERT ON livehvstcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstcatperiods" violates foreign key constraint "fk_livehvstcatperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_livehvstfeedperiods_livehvstfeed1 BEFORE INSERT ON livehvstfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || FLIVE_ICOD || FGROUP_COD) as value FROM livehvstfeed WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND FLIVE_ICOD = NEW.FLIVE_ICOD AND FGROUP_COD = NEW.FGROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeedperiods" violates foreign key constraint "fk_livehvstfeedperiods_livehvstfeed1"') END; END;
CREATE TRIGGER INS_fk_livehvstfeedperiods_periods1 BEFORE INSERT ON livehvstfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeedperiods" violates foreign key constraint "fk_livehvstfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_livehvstperiods_livehvst1 BEFORE INSERT ON livehvstperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstperiods" violates foreign key constraint "fk_livehvstperiods_livehvst1"') END; END;
CREATE TRIGGER INS_fk_livehvstperiods_periods1 BEFORE INSERT ON livehvstperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstperiods" violates foreign key constraint "fk_livehvstperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_livehvstsoldcatperiods_livehvstsoldcat1 BEFORE INSERT ON livehvstsoldcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD || MARK_COD) as value FROM livehvstsoldcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcatperiods" violates foreign key constraint "fk_livehvstsoldcatperiods_livehvstsoldcat1"') END; END;
CREATE TRIGGER INS_fk_livehvstsoldcatperiods_periods1 BEFORE INSERT ON livehvstsoldcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcatperiods" violates foreign key constraint "fk_livehvstsoldcatperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_livehvstsoldperiods_livehvstsold1 BEFORE INSERT ON livehvstsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || MARK_COD) as value FROM livehvstsold WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldperiods" violates foreign key constraint "fk_livehvstsoldperiods_livehvstsold1"') END; END;
CREATE TRIGGER INS_fk_livehvstsoldperiods_periods1 BEFORE INSERT ON livehvstsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldperiods" violates foreign key constraint "fk_livehvstsoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_livehvsttim_periods BEFORE INSERT ON livehvsttim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttim" violates foreign key constraint "fk_livehvsttim_periods"') END; END;
CREATE TRIGGER INS_fk_livehvsttimcat_livehvstcat1 BEFORE INSERT ON livehvsttimcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD) as value FROM livehvstcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttimcat" violates foreign key constraint "fk_livehvsttimcat_livehvstcat1"') END; END;
CREATE TRIGGER INS_fk_livehvsttimcat_periods1 BEFORE INSERT ON livehvsttimcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttimcat" violates foreign key constraint "fk_livehvsttimcat_periods1"') END; END;
CREATE TRIGGER INS_fk_livemangrplabourB_labforce1 BEFORE INSERT ON livemangrplabourB FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabourB" violates foreign key constraint "fk_livemangrplabourB_labforce1"') END; END;
CREATE TRIGGER INS_fk_livemangrptim_periods BEFORE INSERT ON livemangrptim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrptim" violates foreign key constraint "fk_livemangrptim_periods"') END; END;
CREATE TRIGGER INS_fk_livemanlabour_labforce1 BEFORE INSERT ON livemanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemanlabour" violates foreign key constraint "fk_livemanlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_livemanlabour_liveman1 BEFORE INSERT ON livemanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || ACTY_COD) as value FROM liveman WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemanlabour" violates foreign key constraint "fk_livemanlabour_liveman1"') END; END;
CREATE TRIGGER INS_fk_livemantim_periods BEFORE INSERT ON livemantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livemantim" violates foreign key constraint "fk_livemantim_periods"') END; END;
CREATE TRIGGER INS_fk_lvstosysherdstr_lvstosys1 BEFORE INSERT ON lvstosysherdstr FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosysherdstr" violates foreign key constraint "fk_lvstosysherdstr_lvstosys1"') END; END;
CREATE TRIGGER INS_fk_lvstosyslabour_labforce1 BEFORE INSERT ON lvstosyslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosyslabour" violates foreign key constraint "fk_lvstosyslabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_lvstosyslabour_lvstosys1 BEFORE INSERT ON lvstosyslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosyslabour" violates foreign key constraint "fk_lvstosyslabour_lvstosys1"') END; END;
CREATE TRIGGER INS_fk_lvstosysperiods_lvstosys1 BEFORE INSERT ON lvstosysperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosysperiods" violates foreign key constraint "fk_lvstosysperiods_lvstosys1"') END; END;
CREATE TRIGGER INS_fk_lvstosysperiods_periods1 BEFORE INSERT ON lvstosysperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosysperiods" violates foreign key constraint "fk_lvstosysperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_mnrheapfeedperiods_mnrheapfeed1 BEFORE INSERT ON mnrheapfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD || LIVE_ICOD || GROUP_COD) as value FROM mnrheapfeed WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeedperiods" violates foreign key constraint "fk_mnrheapfeedperiods_mnrheapfeed1"') END; END;
CREATE TRIGGER INS_fk_mnrheapfeedperiods_periods1 BEFORE INSERT ON mnrheapfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeedperiods" violates foreign key constraint "fk_mnrheapfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_mnrheapprodsperiods_mnrheapprods1 BEFORE INSERT ON mnrheapprodsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM mnrheapprods WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapprodsperiods" violates foreign key constraint "fk_mnrheapprodsperiods_mnrheapprods1"') END; END;
CREATE TRIGGER INS_fk_mnrheapprodsperiods_periods1 BEFORE INSERT ON mnrheapprodsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapprodsperiods" violates foreign key constraint "fk_mnrheapprodsperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_mnrheapsoldperiods_mnrheapsold1 BEFORE INSERT ON mnrheapsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD || MARK_COD) as value FROM mnrheapsold WHERE SYS_COD = NEW.mnrheapsold_SYS_COD AND HEAP_COD = NEW.mnrheapsold_HEAP_COD AND MARK_COD = NEW.mnrheapsold_MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsoldperiods" violates foreign key constraint "fk_mnrheapsoldperiods_mnrheapsold1"') END; END;
CREATE TRIGGER INS_fk_mnrheapsoldperiods_periods1 BEFORE INSERT ON mnrheapsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsoldperiods" violates foreign key constraint "fk_mnrheapsoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_moduletree_moduletree1 BEFORE INSERT ON moduletree FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.parent_module IS NOT NULL) AND ((SELECT (module_id) as value FROM moduletree WHERE module_id = NEW.parent_module) IS NULL)) THEN RAISE(ABORT, 'insert on table "moduletree" violates foreign key constraint "fk_moduletree_moduletree1"') END; END;
CREATE TRIGGER INS_fk_otherhhcpperiods_otherhhcp1 BEFORE INSERT ON otherhhcpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM otherhhcp WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhcpperiods" violates foreign key constraint "fk_otherhhcpperiods_otherhhcp1"') END; END;
CREATE TRIGGER INS_fk_otherhhcpperiods_periods1 BEFORE INSERT ON otherhhcpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhcpperiods" violates foreign key constraint "fk_otherhhcpperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_otherhhexpperiods_otherhhexp1 BEFORE INSERT ON otherhhexpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM otherhhexp WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhexpperiods" violates foreign key constraint "fk_otherhhexpperiods_otherhhexp1"') END; END;
CREATE TRIGGER INS_fk_otherhhexpperiods_periods1 BEFORE INSERT ON otherhhexpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhexpperiods" violates foreign key constraint "fk_otherhhexpperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_otherincomeperiods_otherincome1 BEFORE INSERT ON otherincomeperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM otherincome WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherincomeperiods" violates foreign key constraint "fk_otherincomeperiods_otherincome1"') END; END;
CREATE TRIGGER INS_fk_otherincomeperiods_periods1 BEFORE INSERT ON otherincomeperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherincomeperiods" violates foreign key constraint "fk_otherincomeperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_othermanlabour_labforce1 BEFORE INSERT ON othermanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "othermanlabour" violates foreign key constraint "fk_othermanlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_othermanlabour_otherman1 BEFORE INSERT ON othermanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || ACTY_COD) as value FROM otherman WHERE SYS_COD = NEW.SYS_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "othermanlabour" violates foreign key constraint "fk_othermanlabour_otherman1"') END; END;
CREATE TRIGGER INS_fk_othermantim_periods BEFORE INSERT ON othermantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "othermantim" violates foreign key constraint "fk_othermantim_periods"') END; END;
CREATE TRIGGER INS_fk_otherprodperiods_otherprod1 BEFORE INSERT ON otherprodperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || PROD_COD) as value FROM otherprod WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherprodperiods" violates foreign key constraint "fk_otherprodperiods_otherprod1"') END; END;
CREATE TRIGGER INS_fk_otherprodperiods_periods1 BEFORE INSERT ON otherprodperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherprodperiods" violates foreign key constraint "fk_otherprodperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_owneduselabour_labforce1 BEFORE INSERT ON owneduselabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduselabour" violates foreign key constraint "fk_owneduselabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_owneduselabour_owneduse1 BEFORE INSERT ON owneduselabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduselabour" violates foreign key constraint "fk_owneduselabour_owneduse1"') END; END;
CREATE TRIGGER INS_fk_owneduseperiods_owneduse1 BEFORE INSERT ON owneduseperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduseperiods" violates foreign key constraint "fk_owneduseperiods_owneduse1"') END; END;
CREATE TRIGGER INS_fk_owneduseperiods_periods1 BEFORE INSERT ON owneduseperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduseperiods" violates foreign key constraint "fk_owneduseperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_ownusedvlabour_labforce1 BEFORE INSERT ON ownusedvlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvlabour" violates foreign key constraint "fk_ownusedvlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_ownusedvlabour_ownusedv1 BEFORE INSERT ON ownusedvlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD) as value FROM ownusedv WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvlabour" violates foreign key constraint "fk_ownusedvlabour_ownusedv1"') END; END;
CREATE TRIGGER INS_fk_ownusedvperiods_ownusedv1 BEFORE INSERT ON ownusedvperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD) as value FROM ownusedv WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvperiods" violates foreign key constraint "fk_ownusedvperiods_ownusedv1"') END; END;
CREATE TRIGGER INS_fk_ownusedvperiods_periods1 BEFORE INSERT ON ownusedvperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvperiods" violates foreign key constraint "fk_ownusedvperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_plotlabour_labforce1 BEFORE INSERT ON plotlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotlabour" violates foreign key constraint "fk_plotlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_plotlabour_plotmantim1 BEFORE INSERT ON plotlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || NMONTH) as value FROM plotmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotlabour" violates foreign key constraint "fk_plotlabour_plotmantim1"') END; END;
CREATE TRIGGER INS_fk_plotman_activity1 BEFORE INSERT ON plotman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotman" violates foreign key constraint "fk_plotman_activity1"') END; END;
CREATE TRIGGER INS_fk_plotman_plotmantim BEFORE INSERT ON plotmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmantim" violates foreign key constraint "fk_plotman_plotmantim"') END; END;
CREATE TRIGGER INS_fk_plotman_spadstown1 BEFORE INSERT ON plotman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotman" violates foreign key constraint "fk_plotman_spadstown1"') END; END;
CREATE TRIGGER INS_fk_plotmanfert_plotmantim1 BEFORE INSERT ON plotmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || NMONTH) as value FROM plotmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanfert" violates foreign key constraint "fk_plotmanfert_plotmantim1"') END; END;
CREATE TRIGGER INS_fk_plotmanlabour_labforce1 BEFORE INSERT ON plotmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanlabour" violates foreign key constraint "fk_plotmanlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_plotmanlabour_plotman1 BEFORE INSERT ON plotmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanlabour" violates foreign key constraint "fk_plotmanlabour_plotman1"') END; END;
CREATE TRIGGER INS_fk_plotmanperiods_periods1 BEFORE INSERT ON plotmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanperiods" violates foreign key constraint "fk_plotmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_plotmanperiods_plotman1 BEFORE INSERT ON plotmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanperiods" violates foreign key constraint "fk_plotmanperiods_plotman1"') END; END;
CREATE TRIGGER INS_fk_plotmanprchfert_ferttype1 BEFORE INSERT ON plotmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfert" violates foreign key constraint "fk_plotmanprchfert_ferttype1"') END; END;
CREATE TRIGGER INS_fk_plotmanprchfert_plotman1 BEFORE INSERT ON plotmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfert" violates foreign key constraint "fk_plotmanprchfert_plotman1"') END; END;
CREATE TRIGGER INS_fk_plotmanprchfertperiods_periods1 BEFORE INSERT ON plotmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfertperiods" violates foreign key constraint "fk_plotmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_plotmanprchfertperiods_plotmanprchfert1 BEFORE INSERT ON plotmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || FERTYP_COD) as value FROM plotmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfertperiods" violates foreign key constraint "fk_plotmanprchfertperiods_plotmanprchfert1"') END; END;
CREATE TRIGGER INS_fk_plotmantim_periods10 BEFORE INSERT ON plotmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmantim" violates foreign key constraint "fk_plotmantim_periods10"') END; END;
CREATE TRIGGER INS_fk_plotpaddspelabour_labforce1 BEFORE INSERT ON plotpaddspelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspelabour" violates foreign key constraint "fk_plotpaddspelabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_plotpaddspelabour_plotpaddspe1 BEFORE INSERT ON plotpaddspelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspelabour" violates foreign key constraint "fk_plotpaddspelabour_plotpaddspe1"') END; END;
CREATE TRIGGER INS_fk_plotseasonsperiods_periods1 BEFORE INSERT ON plotseasonsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "plotseasonsperiods" violates foreign key constraint "fk_plotseasonsperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_plotseasonsperiods_plotseasons1 BEFORE INSERT ON plotseasonsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON) as value FROM plotseasons WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON) IS NULL) THEN RAISE(ABORT, 'insert on table "plotseasonsperiods" violates foreign key constraint "fk_plotseasonsperiods_plotseasons1"') END; END;
CREATE TRIGGER INS_fk_stallfeeprchperiods_periods1 BEFORE INSERT ON stallfeeprchperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprchperiods" violates foreign key constraint "fk_stallfeeprchperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_stallfeeprchperiods_stallfeeprch1 BEFORE INSERT ON stallfeeprchperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || FEED_COD || LIVE_ICOD || GROUP_COD) as value FROM stallfeeprch WHERE SYS_COD = NEW.SYS_COD AND FEED_COD = NEW.FEED_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprchperiods" violates foreign key constraint "fk_stallfeeprchperiods_stallfeeprch1"') END; END;
CREATE TRIGGER INS_fk_sysmodulenotes_system1 BEFORE INSERT ON sysmodulenotes FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "sysmodulenotes" violates foreign key constraint "fk_sysmodulenotes_system1"') END; END;
CREATE TRIGGER INS_fk_systemperiod_periods1 BEFORE INSERT ON systemperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "systemperiods" violates foreign key constraint "fk_systemperiod_periods1"') END; END;
CREATE TRIGGER INS_fk_systemperiod_system1 BEFORE INSERT ON systemperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "systemperiods" violates foreign key constraint "fk_systemperiod_system1"') END; END;
CREATE TRIGGER INS_fk_table1_labforce1 BEFORE INSERT ON labforceperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "labforceperiods" violates foreign key constraint "fk_table1_labforce1"') END; END;
CREATE TRIGGER INS_fk_table1_livemangrp1 BEFORE INSERT ON livemangrplabourB FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || ACTY_COD) as value FROM livemangrp WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabourB" violates foreign key constraint "fk_table1_livemangrp1"') END; END;
CREATE TRIGGER INS_fk_table1_periods1 BEFORE INSERT ON labforceperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "labforceperiods" violates foreign key constraint "fk_table1_periods1"') END; END;
CREATE TRIGGER INS_fk_vegforamanfeedperiods_periods1 BEFORE INSERT ON vegforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeedperiods" violates foreign key constraint "fk_vegforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegforamanfeedperiods_vegforamanfeed1 BEFORE INSERT ON vegforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD || LIVE_ICOD || GROUP_COD) as value FROM vegforamanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeedperiods" violates foreign key constraint "fk_vegforamanfeedperiods_vegforamanfeed1"') END; END;
CREATE TRIGGER INS_fk_vegforamanperiods_periods1 BEFORE INSERT ON vegforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanperiods" violates foreign key constraint "fk_vegforamanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegforamanperiods_vegforaman1 BEFORE INSERT ON vegforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanperiods" violates foreign key constraint "fk_vegforamanperiods_vegforaman1"') END; END;
CREATE TRIGGER INS_fk_vegforamansoldperiods_periods1 BEFORE INSERT ON vegforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansoldperiods" violates foreign key constraint "fk_vegforamansoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegforamansoldperiods_vegforamansold1 BEFORE INSERT ON vegforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD || MARK_COD) as value FROM vegforamansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansoldperiods" violates foreign key constraint "fk_vegforamansoldperiods_vegforamansold1"') END; END;
CREATE TRIGGER INS_fk_vegforamantim_periods BEFORE INSERT ON vegforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamantim" violates foreign key constraint "fk_vegforamantim_periods"') END; END;
CREATE TRIGGER INS_fk_vegmanlabour_labforce1 BEFORE INSERT ON vegmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanlabour" violates foreign key constraint "fk_vegmanlabour_labforce1"') END; END;
CREATE TRIGGER INS_fk_vegmanlabour_vegman1 BEFORE INSERT ON vegmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanlabour" violates foreign key constraint "fk_vegmanlabour_vegman1"') END; END;
CREATE TRIGGER INS_fk_vegmanperiods_periods1 BEFORE INSERT ON vegmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanperiods" violates foreign key constraint "fk_vegmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegmanperiods_vegman1 BEFORE INSERT ON vegmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanperiods" violates foreign key constraint "fk_vegmanperiods_vegman1"') END; END;
CREATE TRIGGER INS_fk_vegmanprchfertperiods_periods1 BEFORE INSERT ON vegmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfertperiods" violates foreign key constraint "fk_vegmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegmanprchfertperiods_vegmanprchfert1 BEFORE INSERT ON vegmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FERTYP_COD) as value FROM vegmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfertperiods" violates foreign key constraint "fk_vegmanprchfertperiods_vegmanprchfert1"') END; END;
CREATE TRIGGER INS_fk_vegmantim_periods BEFORE INSERT ON vegmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmantim" violates foreign key constraint "fk_vegmantim_periods"') END; END;
CREATE TRIGGER INS_fk_vegprodmanfeedperiods_periods1 BEFORE INSERT ON vegprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeedperiods" violates foreign key constraint "fk_vegprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegprodmanfeedperiods_vegprodmanfeed1 BEFORE INSERT ON vegprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD || LIVE_ICOD || GROUP_COD) as value FROM vegprodmanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeedperiods" violates foreign key constraint "fk_vegprodmanfeedperiods_vegprodmanfeed1"') END; END;
CREATE TRIGGER INS_fk_vegprodmanperiods_periods1 BEFORE INSERT ON vegprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanperiods" violates foreign key constraint "fk_vegprodmanperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegprodmanperiods_vegprodman1 BEFORE INSERT ON vegprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanperiods" violates foreign key constraint "fk_vegprodmanperiods_vegprodman1"') END; END;
CREATE TRIGGER INS_fk_vegprodmansoldperiods_periods1 BEFORE INSERT ON vegprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansoldperiods" violates foreign key constraint "fk_vegprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER INS_fk_vegprodmansoldperiods_vegprodmansold1 BEFORE INSERT ON vegprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD || MARK_COD) as value FROM vegprodmansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansoldperiods" violates foreign key constraint "fk_vegprodmansoldperiods_vegprodmansold1"') END; END;
CREATE TRIGGER INS_fk_vegprodmantim_periods BEFORE INSERT ON vegprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmantim" violates foreign key constraint "fk_vegprodmantim_periods"') END; END;
CREATE TRIGGER UPD_fk_04d77330_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON system FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYST_COD) as value FROM systype WHERE SYST_COD = NEW.SYST_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "system" violates foreign key constraint "fk_04d77330_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04d7e1e4_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON system FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CNTY_COD) as value FROM country WHERE CNTY_COD = NEW.CNTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "system" violates foreign key constraint "fk_04d7e1e4_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04d85584_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON labforce FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "labforce" violates foreign key constraint "fk_04d85584_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04d8cf32_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON spadstown FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "spadstown" violates foreign key constraint "fk_04d8cf32_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04d94dfe_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON spadstown FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.DRAIN_COD IS NOT NULL) AND ((SELECT (DRAIN_COD) as value FROM drainage WHERE DRAIN_COD = NEW.DRAIN_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "spadstown" violates foreign key constraint "fk_04d94dfe_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04d9d1f2_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON spadstown FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.SOIL_COD IS NOT NULL) AND ((SELECT (SOIL_COD) as value FROM soil WHERE SOIL_COD = NEW.SOIL_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "spadstown" violates foreign key constraint "fk_04d9d1f2_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04da5a28_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON lvstosys FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosys" violates foreign key constraint "fk_04da5a28_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04dae7f4_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON lvstosys FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM livestoc WHERE LIVE_COD = NEW.LIVE_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosys" violates foreign key constraint "fk_04dae7f4_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_04db798a_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON wellbeing FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "wellbeing" violates foreign key constraint "fk_04db798a_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_11fb077e_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON crpprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeed" violates foreign key constraint "fk_11fb077e_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_11fbb070_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON crpprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeed" violates foreign key constraint "fk_11fbb070_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_11fc8fea_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON crpforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeed" violates foreign key constraint "fk_11fc8fea_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_11fd60d2_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON crpforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeed" violates foreign key constraint "fk_11fd60d2_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_11fe14d2_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON vegprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeed" violates foreign key constraint "fk_11fe14d2_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_11fedb2e_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON vegprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeed" violates foreign key constraint "fk_11fedb2e_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_11ff9578_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON vegforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeed" violates foreign key constraint "fk_11ff9578_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_12006d90_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON vegforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeed" violates foreign key constraint "fk_12006d90_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_120155fc_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON grassprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeed" violates foreign key constraint "fk_120155fc_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_12022c20_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON grassprodmanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeed" violates foreign key constraint "fk_12022c20_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_12030438_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON grassforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeed" violates foreign key constraint "fk_12030438_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_1203ea6a_bcec_11e0_9e78_58946b4c242c BEFORE UPDATE ON grassforamanfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeed" violates foreign key constraint "fk_1203ea6a_bcec_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29cb5696_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON liveman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveman" violates foreign key constraint "fk_29cb5696_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29cbf222_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON liveman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveman" violates foreign key constraint "fk_29cbf222_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29cc7a26_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livelabour" violates foreign key constraint "fk_29cc7a26_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29cd31a0_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherprod" violates foreign key constraint "fk_29cd31a0_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29ce0558_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livemantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || ACTY_COD) as value FROM liveman WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemantim" violates foreign key constraint "fk_29ce0558_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29ceeee6_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || ACTY_COD || NMONTH) as value FROM livemantim WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livelabour" violates foreign key constraint "fk_29ceeee6_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29d0895e_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livemangrp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrp" violates foreign key constraint "fk_29d0895e_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29d1445c_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livemangrp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrp" violates foreign key constraint "fk_29d1445c_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29d207b6_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livemangrptim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || ACTY_COD) as value FROM livemangrp WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrptim" violates foreign key constraint "fk_29d207b6_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29d2d448_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livemangrplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || ACTY_COD || NMONTH) as value FROM livemangrptim WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabour" violates foreign key constraint "fk_29d2d448_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_29d3b700_bced_11e0_9e78_58946b4c242c BEFORE UPDATE ON livemangrplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabour" violates foreign key constraint "fk_29d3b700_bced_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_322bba82_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforaman" violates foreign key constraint "fk_322bba82_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_322c6d1a_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD || CROP_COD) as value FROM cropfora WHERE FORA_COD = NEW.FORA_COD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforaman" violates foreign key constraint "fk_322c6d1a_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_322d0f86_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansold" violates foreign key constraint "fk_322d0f86_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_322da694_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansold" violates foreign key constraint "fk_322da694_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_322e3410_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamantim" violates foreign key constraint "fk_322e3410_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_322ed352_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "crpforamantim" violates foreign key constraint "fk_322ed352_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_322f701e_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD || NMONTH) as value FROM crpforamantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforalabour" violates foreign key constraint "fk_322f701e_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_32302482_bce4_11e0_a317_58946b4c242c BEFORE UPDATE ON crpforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforalabour" violates foreign key constraint "fk_32302482_bce4_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334977de_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassman" violates foreign key constraint "fk_334977de_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334a053c_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassman" violates foreign key constraint "fk_334a053c_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334a93d0_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmantim" violates foreign key constraint "fk_334a93d0_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334b315a_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grasslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || NMONTH) as value FROM grassmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grasslabour" violates foreign key constraint "fk_334b315a_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334bd74a_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grasslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grasslabour" violates foreign key constraint "fk_334bd74a_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334c80b4_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || NMONTH) as value FROM grassmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanfert" violates foreign key constraint "fk_334c80b4_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334d32b6_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanfert" violates foreign key constraint "fk_334d32b6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334ddf2c_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfert" violates foreign key constraint "fk_334ddf2c_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334e9ba6_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfert" violates foreign key constraint "fk_334e9ba6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_334f51d6_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassmantim" violates foreign key constraint "fk_334f51d6_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_33500fc2_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassmanfert" violates foreign key constraint "fk_33500fc2_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3350d272_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || NMONTH) as value FROM grassmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanheap" violates foreign key constraint "fk_3350d272_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3351a292_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanheap" violates foreign key constraint "fk_3351a292_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_33527082_bce8_11e0_a317_58946b4c242c BEFORE UPDATE ON grassmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassmanheap" violates foreign key constraint "fk_33527082_bce8_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3994c7c6_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON feedgroups FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "feedgroups" violates foreign key constraint "fk_3994c7c6_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3995a826_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON liveavailres FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailres" violates foreign key constraint "fk_3995a826_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3996875a_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON liveavailres FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (RES_COD) as value FROM restypes WHERE RES_COD = NEW.FEED_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailres" violates foreign key constraint "fk_3996875a_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_39977278_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON stallfeeprch FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || FEED_COD) as value FROM liveavailres WHERE SYS_COD = NEW.SYS_COD AND FEED_COD = NEW.FEED_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprch" violates foreign key constraint "fk_39977278_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_39987088_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON stallfeeprch FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprch" violates foreign key constraint "fk_39987088_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_39997924_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON grazingman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingman" violates foreign key constraint "fk_39997924_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_399a8ba2_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON grazingman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingman" violates foreign key constraint "fk_399a8ba2_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_399baa0a_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON livegroups FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livegroups" violates foreign key constraint "fk_399baa0a_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_399ccfe8_bceb_11e0_9e78_58946b4c242c BEFORE UPDATE ON grazingman FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.MLIVE_COD IS NOT NULL AND NEW.MPROD_COD IS NOT NULL) AND ((SELECT (LIVE_COD || PROD_COD) as value FROM lvproducts WHERE LIVE_COD = NEW.MLIVE_COD AND PROD_COD = NEW.MPROD_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grazingman" violates foreign key constraint "fk_399ccfe8_bceb_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df4cb58_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropman" violates foreign key constraint "fk_3df4cb58_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df553c0_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropman" violates foreign key constraint "fk_3df553c0_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df5da52_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmantim" violates foreign key constraint "fk_3df5da52_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df7044a_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "cropmantim" violates foreign key constraint "fk_3df7044a_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df7044a_bce2_11e0_a5d9_58946b4c242c0 BEFORE UPDATE ON plotmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "plotmantim" violates foreign key constraint "fk_3df7044a_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER UPD_fk_3df79fae_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON croplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || NMONTH) as value FROM cropmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "croplabour" violates foreign key constraint "fk_3df79fae_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df84800_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON croplabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "croplabour" violates foreign key constraint "fk_3df84800_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df8edbe_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || NMONTH) as value FROM cropmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanfert" violates foreign key constraint "fk_3df8edbe_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanfert" violates foreign key constraint "fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c0 BEFORE UPDATE ON plotmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanfert" violates foreign key constraint "fk_3df9a02e_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER UPD_fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "cropmanfert" violates foreign key constraint "fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c0 BEFORE UPDATE ON plotmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "plotmanfert" violates foreign key constraint "fk_3dfa4a06_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER UPD_fk_3dfaff5a_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfert" violates foreign key constraint "fk_3dfaff5a_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3dfbbdd2_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfert" violates foreign key constraint "fk_3dfbbdd2_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || NMONTH) as value FROM cropmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanheap" violates foreign key constraint "fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c0 BEFORE UPDATE ON plotmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || NMONTH) as value FROM plotmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanheap" violates foreign key constraint "fk_3dfc790c_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER UPD_fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanheap" violates foreign key constraint "fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c0 BEFORE UPDATE ON plotmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanheap" violates foreign key constraint "fk_3dfd4490_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER UPD_fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "cropmanheap" violates foreign key constraint "fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c0 BEFORE UPDATE ON plotmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "plotmanheap" violates foreign key constraint "fk_3dfe0a56_bce2_11e0_a5d9_58946b4c242c0"') END; END;
CREATE TRIGGER UPD_fk_42404990_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheap" violates foreign key constraint "fk_42404990_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4240db80_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheaplvprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheaplvprod" violates foreign key constraint "fk_4240db80_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_42417cf2_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheaplvprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheaplvprod" violates foreign key constraint "fk_42417cf2_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_42422850_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapprods" violates foreign key constraint "fk_42422850_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4242d584_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapaddprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapaddprods" violates foreign key constraint "fk_4242d584_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_42438ace_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapaddprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM mnrheapprods WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapaddprods" violates foreign key constraint "fk_42438ace_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_42444a54_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsold" violates foreign key constraint "fk_42444a54_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_42450cc8_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsold" violates foreign key constraint "fk_42450cc8_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4245d9a0_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeed" violates foreign key constraint "fk_4245d9a0_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4246acfe_bcfa_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeed" violates foreign key constraint "fk_4246acfe_bcfa_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44360668_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherman" violates foreign key constraint "fk_44360668_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44363a70_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherman" violates foreign key constraint "fk_44363a70_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44366db0_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON othermantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || ACTY_COD) as value FROM otherman WHERE SYS_COD = NEW.SYS_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "othermantim" violates foreign key constraint "fk_44366db0_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4436a456_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherlabour" violates foreign key constraint "fk_4436a456_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4436dbf6_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON farmassets FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "farmassets" violates foreign key constraint "fk_4436dbf6_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4437140e_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherhhcp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhcp" violates foreign key constraint "fk_4437140e_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44374c1c_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherhhexp FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhexp" violates foreign key constraint "fk_44374c1c_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44378808_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherincome FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherincome" violates foreign key constraint "fk_44378808_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_4437c516_bcf5_11e0_9e78_58946b4c242c BEFORE UPDATE ON otherlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || ACTY_COD || NMONTH) as value FROM othermantim WHERE SYS_COD = NEW.SYS_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "otherlabour" violates foreign key constraint "fk_4437c516_bcf5_11e0_9e78_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44bdd730_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodman" violates foreign key constraint "fk_44bdd730_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44be5f16_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD || CROP_COD) as value FROM cropprods WHERE PROD_COD = NEW.PROD_COD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodman" violates foreign key constraint "fk_44be5f16_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44bf621c_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "crpprodmantim" violates foreign key constraint "fk_44bf621c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44bff0a6_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodlabour" violates foreign key constraint "fk_44bff0a6_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44c0841c_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansold" violates foreign key constraint "fk_44c0841c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44c1269c_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansold" violates foreign key constraint "fk_44c1269c_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44c1c25a_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmantim" violates foreign key constraint "fk_44c1c25a_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_44c274f2_bce3_11e0_a317_58946b4c242c BEFORE UPDATE ON crpprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD || NMONTH) as value FROM crpprodmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodlabour" violates foreign key constraint "fk_44c274f2_bce3_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_52042e10_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD) as value FROM ownusedv WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegman" violates foreign key constraint "fk_52042e10_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_5204c096_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegman" violates foreign key constraint "fk_5204c096_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_5205513c_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmantim" violates foreign key constraint "fk_5205513c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_5205f4de_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegmantim" violates foreign key constraint "fk_5205f4de_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_520691fa_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON veglabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || NMONTH) as value FROM vegmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "veglabour" violates foreign key constraint "fk_520691fa_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_52073ee8_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON veglabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "veglabour" violates foreign key constraint "fk_52073ee8_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_5207e4e2_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || NMONTH) as value FROM vegmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanfert" violates foreign key constraint "fk_5207e4e2_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_52089d4c_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanfert" violates foreign key constraint "fk_52089d4c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_52094b84_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegmanfert" violates foreign key constraint "fk_52094b84_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_520a0204_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfert" violates foreign key constraint "fk_520a0204_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_520ac89c_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfert" violates foreign key constraint "fk_520ac89c_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_520b8c82_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || NMONTH) as value FROM vegmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanheap" violates foreign key constraint "fk_520b8c82_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_520c5e14_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanheap" violates foreign key constraint "fk_520c5e14_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_520d2dbc_bce5_11e0_a317_58946b4c242c BEFORE UPDATE ON vegmanheap FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegmanheap" violates foreign key constraint "fk_520d2dbc_bce5_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ecf545c_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforaman" violates foreign key constraint "fk_6ecf545c_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ecf860c_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM pastfora WHERE CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforaman" violates foreign key constraint "fk_6ecf860c_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ecfb2c6_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansold" violates foreign key constraint "fk_6ecfb2c6_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ecfeb7e_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansold" violates foreign key constraint "fk_6ecfeb7e_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ed016c6_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamantim" violates foreign key constraint "fk_6ed016c6_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ed04f42_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassforamantim" violates foreign key constraint "fk_6ed04f42_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ed07f1c_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD || NMONTH) as value FROM grassforamantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforalabour" violates foreign key constraint "fk_6ed07f1c_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_6ed0bd38_bcea_11e0_a317_58946b4c242c BEFORE UPDATE ON grassforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforalabour" violates foreign key constraint "fk_6ed0bd38_bcea_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81de4dee_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapcrpprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpprod" violates foreign key constraint "fk_81de4dee_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81df0784_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapcrpprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpprod" violates foreign key constraint "fk_81df0784_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81dfd6dc_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapcrpfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpfora" violates foreign key constraint "fk_81dfd6dc_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e0a60c_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapcrpfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapcrpfora" violates foreign key constraint "fk_81e0a60c_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e18ba8_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapgrassprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassprod" violates foreign key constraint "fk_81e18ba8_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e26a96_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapgrassprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassprod" violates foreign key constraint "fk_81e26a96_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e35b04_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapgrassfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassfora" violates foreign key constraint "fk_81e35b04_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e44a64_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapgrassfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapgrassfora" violates foreign key constraint "fk_81e44a64_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e549e6_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapvegprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegprod" violates foreign key constraint "fk_81e549e6_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e64d8c_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapvegprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegprod" violates foreign key constraint "fk_81e64d8c_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e7808a_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapvegfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD) as value FROM mnrheap WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegfora" violates foreign key constraint "fk_81e7808a_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_81e8dec6_bcfb_11e0_b883_58946b4c242c BEFORE UPDATE ON mnrheapvegfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapvegfora" violates foreign key constraint "fk_81e8dec6_bcfb_11e0_b883_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e602aa_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON plotgpspos FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotgpspos" violates foreign key constraint "fk_91e602aa_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e67546_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON plotseasons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotseasons" violates foreign key constraint "fk_91e67546_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e6ee40_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON owneduse FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduse" violates foreign key constraint "fk_91e6ee40_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e76a8c_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON ownusedv FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedv" violates foreign key constraint "fk_91e76a8c_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e7eec6_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON plotpaddoks FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddoks" violates foreign key constraint "fk_91e7eec6_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e87a4e_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON plotpaddspe FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspe" violates foreign key constraint "fk_91e87a4e_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e908ba_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON plotpaddspedt FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROPD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspedt" violates foreign key constraint "fk_91e908ba_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91e99cf8_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON owneduse FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON) as value FROM plotseasons WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduse" violates foreign key constraint "fk_91e99cf8_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91ea399c_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON ownusedv FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedv" violates foreign key constraint "fk_91ea399c_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91eadcd0_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON plotpaddspe FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD) as value FROM plotpaddoks WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspe" violates foreign key constraint "fk_91eadcd0_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_91eb88ce_bce1_11e0_a5d9_58946b4c242c BEFORE UPDATE ON plotpaddspedt FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspedt" violates foreign key constraint "fk_91eb88ce_bce1_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad2a85e_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforaman" violates foreign key constraint "fk_9ad2a85e_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad2dbee_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforaman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM cropfora WHERE CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforaman" violates foreign key constraint "fk_9ad2dbee_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad30588_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansold" violates foreign key constraint "fk_9ad30588_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad33a1c_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforamansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansold" violates foreign key constraint "fk_9ad33a1c_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad3628a_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamantim" violates foreign key constraint "fk_9ad3628a_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad39b42_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegforamantim" violates foreign key constraint "fk_9ad39b42_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad3c702_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD || NMONTH) as value FROM vegforamantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforalabour" violates foreign key constraint "fk_9ad3c702_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_9ad4005a_bce7_11e0_a317_58946b4c242c BEFORE UPDATE ON vegforalabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforalabour" violates foreign key constraint "fk_9ad4005a_bce7_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cce75930_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodman" violates foreign key constraint "fk_cce75930_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cce7e5bc_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || PROD_COD) as value FROM cropprods WHERE CROP_COD = NEW.VEG_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodman" violates foreign key constraint "fk_cce7e5bc_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cce86a32_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmantim" violates foreign key constraint "fk_cce86a32_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cce900be_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "vegprodmantim" violates foreign key constraint "fk_cce900be_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cce990ec_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD || NMONTH) as value FROM vegprodmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodlabour" violates foreign key constraint "fk_cce990ec_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ccea3402_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodlabour" violates foreign key constraint "fk_ccea3402_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cceacfc0_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansold" violates foreign key constraint "fk_cceacfc0_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cceb82b2_bce6_11e0_a317_58946b4c242c BEFORE UPDATE ON vegprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansold" violates foreign key constraint "fk_cceb82b2_bce6_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_cropmanlabour_cropman1 BEFORE UPDATE ON cropmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanlabour" violates foreign key constraint "fk_cropmanlabour_cropman1"') END; END;
CREATE TRIGGER UPD_fk_cropmanlabour_labforce1 BEFORE UPDATE ON cropmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanlabour" violates foreign key constraint "fk_cropmanlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_cropmanperiods_cropman1 BEFORE UPDATE ON cropmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD) as value FROM cropman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanperiods" violates foreign key constraint "fk_cropmanperiods_cropman1"') END; END;
CREATE TRIGGER UPD_fk_cropmanperiods_periods1 BEFORE UPDATE ON cropmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanperiods" violates foreign key constraint "fk_cropmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_cropmanprchfertperiods_cropmanprchfert1 BEFORE UPDATE ON cropmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FERTYP_COD) as value FROM cropmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfertperiods" violates foreign key constraint "fk_cropmanprchfertperiods_cropmanprchfert1"') END; END;
CREATE TRIGGER UPD_fk_cropmanprchfertperiods_periods1 BEFORE UPDATE ON cropmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmanprchfertperiods" violates foreign key constraint "fk_cropmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_cropmantim_periods1 BEFORE UPDATE ON cropmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "cropmantim" violates foreign key constraint "fk_cropmantim_periods1"') END; END;
CREATE TRIGGER UPD_fk_crpforamanfeedperiods_crpforamanfeed1 BEFORE UPDATE ON crpforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD || LIVE_ICOD || GROUP_COD) as value FROM crpforamanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeedperiods" violates foreign key constraint "fk_crpforamanfeedperiods_crpforamanfeed1"') END; END;
CREATE TRIGGER UPD_fk_crpforamanfeedperiods_periods1 BEFORE UPDATE ON crpforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanfeedperiods" violates foreign key constraint "fk_crpforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_crpforamanperiods_crpforaman1 BEFORE UPDATE ON crpforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD) as value FROM crpforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanperiods" violates foreign key constraint "fk_crpforamanperiods_crpforaman1"') END; END;
CREATE TRIGGER UPD_fk_crpforamanperiods_periods1 BEFORE UPDATE ON crpforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamanperiods" violates foreign key constraint "fk_crpforamanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_crpforamansoldperiods_crpforamansold1 BEFORE UPDATE ON crpforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || FORA_COD || MARK_COD) as value FROM crpforamansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansoldperiods" violates foreign key constraint "fk_crpforamansoldperiods_crpforamansold1"') END; END;
CREATE TRIGGER UPD_fk_crpforamansoldperiods_periods1 BEFORE UPDATE ON crpforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamansoldperiods" violates foreign key constraint "fk_crpforamansoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_crpforamantim_periods BEFORE UPDATE ON crpforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpforamantim" violates foreign key constraint "fk_crpforamantim_periods"') END; END;
CREATE TRIGGER UPD_fk_crpprodmanfeedperiods_crpprodmanfeed1 BEFORE UPDATE ON crpprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD || LIVE_ICOD || GROUP_COD) as value FROM crpprodmanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeedperiods" violates foreign key constraint "fk_crpprodmanfeedperiods_crpprodmanfeed1"') END; END;
CREATE TRIGGER UPD_fk_crpprodmanfeedperiods_periods1 BEFORE UPDATE ON crpprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanfeedperiods" violates foreign key constraint "fk_crpprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_crpprodmanperiods_crpprodman1 BEFORE UPDATE ON crpprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD) as value FROM crpprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanperiods" violates foreign key constraint "fk_crpprodmanperiods_crpprodman1"') END; END;
CREATE TRIGGER UPD_fk_crpprodmanperiods_periods1 BEFORE UPDATE ON crpprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmanperiods" violates foreign key constraint "fk_crpprodmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_crpprodmansoldperiods_crpprodmansold1 BEFORE UPDATE ON crpprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || ACTY_COD || PROD_COD || MARK_COD) as value FROM crpprodmansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansoldperiods" violates foreign key constraint "fk_crpprodmansoldperiods_crpprodmansold1"') END; END;
CREATE TRIGGER UPD_fk_crpprodmansoldperiods_periods1 BEFORE UPDATE ON crpprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmansoldperiods" violates foreign key constraint "fk_crpprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_crpprodmantim_periods BEFORE UPDATE ON crpprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "crpprodmantim" violates foreign key constraint "fk_crpprodmantim_periods"') END; END;
CREATE TRIGGER UPD_fk_e2e10f26_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodman" violates foreign key constraint "fk_e2e10f26_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e2e1bb1a_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || PROD_COD) as value FROM pastprods WHERE CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodman" violates foreign key constraint "fk_e2e1bb1a_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e2e27c58_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmantim" violates foreign key constraint "fk_e2e27c58_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e2e34ffc_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.ACTYM_COD IS NOT NULL AND NEW.MET_COD IS NOT NULL) AND ((SELECT (ACTY_COD || MET_COD) as value FROM actymethods WHERE ACTY_COD = NEW.ACTYM_COD AND MET_COD = NEW.MET_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "grassprodmantim" violates foreign key constraint "fk_e2e34ffc_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e2e41e3c_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD || NMONTH) as value FROM grassprodmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodlabour" violates foreign key constraint "fk_e2e41e3c_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e2e50928_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodlabour" violates foreign key constraint "fk_e2e50928_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e2e5e942_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansold" violates foreign key constraint "fk_e2e5e942_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e2e6d992_bce9_11e0_a317_58946b4c242c BEFORE UPDATE ON grassprodmansold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansold" violates foreign key constraint "fk_e2e6d992_bce9_11e0_a317_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e67e4fee_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON actymethods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "actymethods" violates foreign key constraint "fk_e67e4fee_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e67f0178_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropprods" violates foreign key constraint "fk_e67f0178_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e67fbf1e_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM cpprods WHERE PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropprods" violates foreign key constraint "fk_e67fbf1e_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e680c62a_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropfora" violates foreign key constraint "fk_e680c62a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e6818d8a_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON cropfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD) as value FROM forages WHERE FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "cropfora" violates foreign key constraint "fk_e6818d8a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e6825a62_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON pastprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastprods" violates foreign key constraint "fk_e6825a62_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e6831844_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON pastprods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM cpprods WHERE PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastprods" violates foreign key constraint "fk_e6831844_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e683dda6_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON pastfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM pastures WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastfora" violates foreign key constraint "fk_e683dda6_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e684a4ca_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON pastfora FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FORA_COD) as value FROM forages WHERE FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "pastfora" violates foreign key constraint "fk_e684a4ca_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e6857184_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON lvproducts FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM livestoc WHERE LIVE_COD = NEW.LIVE_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvproducts" violates foreign key constraint "fk_e6857184_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e68642f8_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON lvproducts FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (PROD_COD) as value FROM products WHERE PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvproducts" violates foreign key constraint "fk_e68642f8_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e6871a7a_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON systype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD) as value FROM livestoc WHERE LIVE_COD = NEW.LIVE_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "systype" violates foreign key constraint "fk_e6871a7a_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e687f8dc_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON systype FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD) as value FROM crop WHERE CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "systype" violates foreign key constraint "fk_e687f8dc_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_e688edd2_bce0_11e0_a5d9_58946b4c242c BEFORE UPDATE ON activity FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.UNIT_COD IS NOT NULL) AND ((SELECT (UNIT_COD) as value FROM actyunits WHERE UNIT_COD = NEW.UNIT_COD) IS NULL)) THEN RAISE(ABORT, 'insert on table "activity" violates foreign key constraint "fk_e688edd2_bce0_11e0_a5d9_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee3ece80_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvst FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvst" violates foreign key constraint "fk_ee3ece80_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee3f5dd2_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvst FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (LIVE_COD || PROD_COD) as value FROM lvproducts WHERE LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvst" violates foreign key constraint "fk_ee3f5dd2_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee3fe626_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvsttim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttim" violates foreign key constraint "fk_ee3fe626_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee4080b8_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || NMONTH) as value FROM livehvsttim WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstlabour" violates foreign key constraint "fk_ee4080b8_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee4120e0_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstlabour" violates foreign key constraint "fk_ee4120e0_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee41c09a_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsold" violates foreign key constraint "fk_ee41c09a_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee426bb2_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstsold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsold" violates foreign key constraint "fk_ee426bb2_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee43d100_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstsoldcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD) as value FROM livehvstcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcat" violates foreign key constraint "fk_ee43d100_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee4490b8_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstsoldcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcat" violates foreign key constraint "fk_ee4490b8_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee454b02_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeed" violates foreign key constraint "fk_ee454b02_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_ee4617da_bcf8_11e0_948f_58946b4c242c BEFORE UPDATE ON livehvstfeed FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.FLIVE_ICOD AND GROUP_COD = NEW.FGROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeed" violates foreign key constraint "fk_ee4617da_bcf8_11e0_948f_58946b4c242c"') END; END;
CREATE TRIGGER UPD_fk_feedgroupslabour_feedgroups1 BEFORE UPDATE ON feedgroupslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD) as value FROM feedgroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "feedgroupslabour" violates foreign key constraint "fk_feedgroupslabour_feedgroups1"') END; END;
CREATE TRIGGER UPD_fk_feedgroupslabour_labforce1 BEFORE UPDATE ON feedgroupslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "feedgroupslabour" violates foreign key constraint "fk_feedgroupslabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_grassforamanfeedperiods_grassforamanfeed1 BEFORE UPDATE ON grassforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD || LIVE_ICOD || GROUP_COD) as value FROM grassforamanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeedperiods" violates foreign key constraint "fk_grassforamanfeedperiods_grassforamanfeed1"') END; END;
CREATE TRIGGER UPD_fk_grassforamanfeedperiods_periods1 BEFORE UPDATE ON grassforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanfeedperiods" violates foreign key constraint "fk_grassforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassforamanperiods_grassforaman1 BEFORE UPDATE ON grassforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD) as value FROM grassforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanperiods" violates foreign key constraint "fk_grassforamanperiods_grassforaman1"') END; END;
CREATE TRIGGER UPD_fk_grassforamanperiods_periods1 BEFORE UPDATE ON grassforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamanperiods" violates foreign key constraint "fk_grassforamanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassforamansoldperiods_grassforamansold1 BEFORE UPDATE ON grassforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FORA_COD || MARK_COD) as value FROM grassforamansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansoldperiods" violates foreign key constraint "fk_grassforamansoldperiods_grassforamansold1"') END; END;
CREATE TRIGGER UPD_fk_grassforamansoldperiods_periods1 BEFORE UPDATE ON grassforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamansoldperiods" violates foreign key constraint "fk_grassforamansoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassforamantim_periods BEFORE UPDATE ON grassforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassforamantim" violates foreign key constraint "fk_grassforamantim_periods"') END; END;
CREATE TRIGGER UPD_fk_grassmanlabour_grassman1 BEFORE UPDATE ON grassmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanlabour" violates foreign key constraint "fk_grassmanlabour_grassman1"') END; END;
CREATE TRIGGER UPD_fk_grassmanlabour_labforce1 BEFORE UPDATE ON grassmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanlabour" violates foreign key constraint "fk_grassmanlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_grassmanperiods_grassman1 BEFORE UPDATE ON grassmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD) as value FROM grassman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanperiods" violates foreign key constraint "fk_grassmanperiods_grassman1"') END; END;
CREATE TRIGGER UPD_fk_grassmanperiods_periods1 BEFORE UPDATE ON grassmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanperiods" violates foreign key constraint "fk_grassmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassmanprchfertperiods_grassmanprchfert1 BEFORE UPDATE ON grassmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || FERTYP_COD) as value FROM grassmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfertperiods" violates foreign key constraint "fk_grassmanprchfertperiods_grassmanprchfert1"') END; END;
CREATE TRIGGER UPD_fk_grassmanprchfertperiods_periods1 BEFORE UPDATE ON grassmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmanprchfertperiods" violates foreign key constraint "fk_grassmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassmantim_periods BEFORE UPDATE ON grassmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassmantim" violates foreign key constraint "fk_grassmantim_periods"') END; END;
CREATE TRIGGER UPD_fk_grassprodmanfeedperiods_grassprodmanfeed1 BEFORE UPDATE ON grassprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD || LIVE_ICOD || GROUP_COD) as value FROM grassprodmanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeedperiods" violates foreign key constraint "fk_grassprodmanfeedperiods_grassprodmanfeed1"') END; END;
CREATE TRIGGER UPD_fk_grassprodmanfeedperiods_periods1 BEFORE UPDATE ON grassprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanfeedperiods" violates foreign key constraint "fk_grassprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassprodmanperiods_grassprodman1 BEFORE UPDATE ON grassprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD) as value FROM grassprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanperiods" violates foreign key constraint "fk_grassprodmanperiods_grassprodman1"') END; END;
CREATE TRIGGER UPD_fk_grassprodmanperiods_periods1 BEFORE UPDATE ON grassprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmanperiods" violates foreign key constraint "fk_grassprodmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassprodmansoldperiods_grassprodmansold1 BEFORE UPDATE ON grassprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || ACTY_COD || PROD_COD || MARK_COD) as value FROM grassprodmansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansoldperiods" violates foreign key constraint "fk_grassprodmansoldperiods_grassprodmansold1"') END; END;
CREATE TRIGGER UPD_fk_grassprodmansoldperiods_periods1 BEFORE UPDATE ON grassprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmansoldperiods" violates foreign key constraint "fk_grassprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grassprodmantim_periods BEFORE UPDATE ON grassprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "grassprodmantim" violates foreign key constraint "fk_grassprodmantim_periods"') END; END;
CREATE TRIGGER UPD_fk_grazingmanperiods_grazingman1 BEFORE UPDATE ON grazingmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD || LIVE_ICOD || GROUP_COD) as value FROM grazingman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingmanperiods" violates foreign key constraint "fk_grazingmanperiods_grazingman1"') END; END;
CREATE TRIGGER UPD_fk_grazingmanperiods_periods1 BEFORE UPDATE ON grazingmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grazingmanperiods" violates foreign key constraint "fk_grazingmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforacons_grpcrpforaprod1 BEFORE UPDATE ON grpcrpforacons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || FORA_COD) as value FROM grpcrpforaprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforacons" violates foreign key constraint "fk_grpcrpforacons_grpcrpforaprod1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforacons_periods1 BEFORE UPDATE ON grpcrpforacons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforacons" violates foreign key constraint "fk_grpcrpforacons_periods1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforaprod_cropfora1 BEFORE UPDATE ON grpcrpforaprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || FORA_COD) as value FROM cropfora WHERE CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforaprod" violates foreign key constraint "fk_grpcrpforaprod_cropfora1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforaprod_system1 BEFORE UPDATE ON grpcrpforaprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforaprod" violates foreign key constraint "fk_grpcrpforaprod_system1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforasold_grpcrpforaprod1 BEFORE UPDATE ON grpcrpforasold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || FORA_COD) as value FROM grpcrpforaprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasold" violates foreign key constraint "fk_grpcrpforasold_grpcrpforaprod1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforasold_markoutlet1 BEFORE UPDATE ON grpcrpforasold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasold" violates foreign key constraint "fk_grpcrpforasold_markoutlet1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforasoldperiods_grpcrpforasold1 BEFORE UPDATE ON grpcrpforasoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || FORA_COD || MARK_COD) as value FROM grpcrpforasold WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasoldperiods" violates foreign key constraint "fk_grpcrpforasoldperiods_grpcrpforasold1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpforasoldperiods_periods1 BEFORE UPDATE ON grpcrpforasoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpforasoldperiods" violates foreign key constraint "fk_grpcrpforasoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodscons_grpcrpprodsprod1 BEFORE UPDATE ON grpcrpprodscons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || PROD_COD) as value FROM grpcrpprodsprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodscons" violates foreign key constraint "fk_grpcrpprodscons_grpcrpprodsprod1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodscons_periods1 BEFORE UPDATE ON grpcrpprodscons FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodscons" violates foreign key constraint "fk_grpcrpprodscons_periods1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodsprod_cropprods1 BEFORE UPDATE ON grpcrpprodsprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (CROP_COD || PROD_COD) as value FROM cropprods WHERE CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodsprod" violates foreign key constraint "fk_grpcrpprodsprod_cropprods1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodsprod_system1 BEFORE UPDATE ON grpcrpprodsprod FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodsprod" violates foreign key constraint "fk_grpcrpprodsprod_system1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodssold_grpcrpprodsprod1 BEFORE UPDATE ON grpcrpprodssold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || PROD_COD) as value FROM grpcrpprodsprod WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssold" violates foreign key constraint "fk_grpcrpprodssold_grpcrpprodsprod1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodssold_markoutlet1 BEFORE UPDATE ON grpcrpprodssold FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (MARK_COD) as value FROM markoutlet WHERE MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssold" violates foreign key constraint "fk_grpcrpprodssold_markoutlet1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodssoldperiods_grpcrpprodssold1 BEFORE UPDATE ON grpcrpprodssoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || CROP_COD || PROD_COD || MARK_COD) as value FROM grpcrpprodssold WHERE SYS_COD = NEW.SYS_COD AND CROP_COD = NEW.CROP_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssoldperiods" violates foreign key constraint "fk_grpcrpprodssoldperiods_grpcrpprodssold1"') END; END;
CREATE TRIGGER UPD_fk_grpcrpprodssoldperiods_periods1 BEFORE UPDATE ON grpcrpprodssoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "grpcrpprodssoldperiods" violates foreign key constraint "fk_grpcrpprodssoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_liveavailresperiods_liveavailres1 BEFORE UPDATE ON liveavailresperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || FEED_COD) as value FROM liveavailres WHERE SYS_COD = NEW.SYS_COD AND FEED_COD = NEW.FEED_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailresperiods" violates foreign key constraint "fk_liveavailresperiods_liveavailres1"') END; END;
CREATE TRIGGER UPD_fk_liveavailresperiods_periods1 BEFORE UPDATE ON liveavailresperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "liveavailresperiods" violates foreign key constraint "fk_liveavailresperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_livegroupsperiods_livegroups1 BEFORE UPDATE ON livegroupsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || HERD_COD) as value FROM livegroups WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livegroupsperiods" violates foreign key constraint "fk_livegroupsperiods_livegroups1"') END; END;
CREATE TRIGGER UPD_fk_livegroupsperiods_periods1 BEFORE UPDATE ON livegroupsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livegroupsperiods" violates foreign key constraint "fk_livegroupsperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_livehvstcat_livehvst1 BEFORE UPDATE ON livehvstcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstcat" violates foreign key constraint "fk_livehvstcat_livehvst1"') END; END;
CREATE TRIGGER UPD_fk_livehvstcatperiods_livehvstcat1 BEFORE UPDATE ON livehvstcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD) as value FROM livehvstcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstcatperiods" violates foreign key constraint "fk_livehvstcatperiods_livehvstcat1"') END; END;
CREATE TRIGGER UPD_fk_livehvstcatperiods_periods1 BEFORE UPDATE ON livehvstcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstcatperiods" violates foreign key constraint "fk_livehvstcatperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_livehvstfeedperiods_livehvstfeed1 BEFORE UPDATE ON livehvstfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || FLIVE_ICOD || FGROUP_COD) as value FROM livehvstfeed WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND FLIVE_ICOD = NEW.FLIVE_ICOD AND FGROUP_COD = NEW.FGROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeedperiods" violates foreign key constraint "fk_livehvstfeedperiods_livehvstfeed1"') END; END;
CREATE TRIGGER UPD_fk_livehvstfeedperiods_periods1 BEFORE UPDATE ON livehvstfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstfeedperiods" violates foreign key constraint "fk_livehvstfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_livehvstperiods_livehvst1 BEFORE UPDATE ON livehvstperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD) as value FROM livehvst WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstperiods" violates foreign key constraint "fk_livehvstperiods_livehvst1"') END; END;
CREATE TRIGGER UPD_fk_livehvstperiods_periods1 BEFORE UPDATE ON livehvstperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstperiods" violates foreign key constraint "fk_livehvstperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_livehvstsoldcatperiods_livehvstsoldcat1 BEFORE UPDATE ON livehvstsoldcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD || MARK_COD) as value FROM livehvstsoldcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcatperiods" violates foreign key constraint "fk_livehvstsoldcatperiods_livehvstsoldcat1"') END; END;
CREATE TRIGGER UPD_fk_livehvstsoldcatperiods_periods1 BEFORE UPDATE ON livehvstsoldcatperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldcatperiods" violates foreign key constraint "fk_livehvstsoldcatperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_livehvstsoldperiods_livehvstsold1 BEFORE UPDATE ON livehvstsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || MARK_COD) as value FROM livehvstsold WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldperiods" violates foreign key constraint "fk_livehvstsoldperiods_livehvstsold1"') END; END;
CREATE TRIGGER UPD_fk_livehvstsoldperiods_periods1 BEFORE UPDATE ON livehvstsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvstsoldperiods" violates foreign key constraint "fk_livehvstsoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_livehvsttim_periods BEFORE UPDATE ON livehvsttim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttim" violates foreign key constraint "fk_livehvsttim_periods"') END; END;
CREATE TRIGGER UPD_fk_livehvsttimcat_livehvstcat1 BEFORE UPDATE ON livehvsttimcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || LIVE_COD || PROD_COD || HERD_COD) as value FROM livehvstcat WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND LIVE_COD = NEW.LIVE_COD AND PROD_COD = NEW.PROD_COD AND HERD_COD = NEW.HERD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttimcat" violates foreign key constraint "fk_livehvsttimcat_livehvstcat1"') END; END;
CREATE TRIGGER UPD_fk_livehvsttimcat_periods1 BEFORE UPDATE ON livehvsttimcat FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livehvsttimcat" violates foreign key constraint "fk_livehvsttimcat_periods1"') END; END;
CREATE TRIGGER UPD_fk_livemangrplabourB_labforce1 BEFORE UPDATE ON livemangrplabourB FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabourB" violates foreign key constraint "fk_livemangrplabourB_labforce1"') END; END;
CREATE TRIGGER UPD_fk_livemangrptim_periods BEFORE UPDATE ON livemangrptim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrptim" violates foreign key constraint "fk_livemangrptim_periods"') END; END;
CREATE TRIGGER UPD_fk_livemanlabour_labforce1 BEFORE UPDATE ON livemanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemanlabour" violates foreign key constraint "fk_livemanlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_livemanlabour_liveman1 BEFORE UPDATE ON livemanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || ACTY_COD) as value FROM liveman WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemanlabour" violates foreign key constraint "fk_livemanlabour_liveman1"') END; END;
CREATE TRIGGER UPD_fk_livemantim_periods BEFORE UPDATE ON livemantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "livemantim" violates foreign key constraint "fk_livemantim_periods"') END; END;
CREATE TRIGGER UPD_fk_lvstosysherdstr_lvstosys1 BEFORE UPDATE ON lvstosysherdstr FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosysherdstr" violates foreign key constraint "fk_lvstosysherdstr_lvstosys1"') END; END;
CREATE TRIGGER UPD_fk_lvstosyslabour_labforce1 BEFORE UPDATE ON lvstosyslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosyslabour" violates foreign key constraint "fk_lvstosyslabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_lvstosyslabour_lvstosys1 BEFORE UPDATE ON lvstosyslabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosyslabour" violates foreign key constraint "fk_lvstosyslabour_lvstosys1"') END; END;
CREATE TRIGGER UPD_fk_lvstosysperiods_lvstosys1 BEFORE UPDATE ON lvstosysperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD) as value FROM lvstosys WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosysperiods" violates foreign key constraint "fk_lvstosysperiods_lvstosys1"') END; END;
CREATE TRIGGER UPD_fk_lvstosysperiods_periods1 BEFORE UPDATE ON lvstosysperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "lvstosysperiods" violates foreign key constraint "fk_lvstosysperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_mnrheapfeedperiods_mnrheapfeed1 BEFORE UPDATE ON mnrheapfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD || LIVE_ICOD || GROUP_COD) as value FROM mnrheapfeed WHERE SYS_COD = NEW.SYS_COD AND HEAP_COD = NEW.HEAP_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeedperiods" violates foreign key constraint "fk_mnrheapfeedperiods_mnrheapfeed1"') END; END;
CREATE TRIGGER UPD_fk_mnrheapfeedperiods_periods1 BEFORE UPDATE ON mnrheapfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapfeedperiods" violates foreign key constraint "fk_mnrheapfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_mnrheapprodsperiods_mnrheapprods1 BEFORE UPDATE ON mnrheapprodsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM mnrheapprods WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapprodsperiods" violates foreign key constraint "fk_mnrheapprodsperiods_mnrheapprods1"') END; END;
CREATE TRIGGER UPD_fk_mnrheapprodsperiods_periods1 BEFORE UPDATE ON mnrheapprodsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapprodsperiods" violates foreign key constraint "fk_mnrheapprodsperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_mnrheapsoldperiods_mnrheapsold1 BEFORE UPDATE ON mnrheapsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || HEAP_COD || MARK_COD) as value FROM mnrheapsold WHERE SYS_COD = NEW.mnrheapsold_SYS_COD AND HEAP_COD = NEW.mnrheapsold_HEAP_COD AND MARK_COD = NEW.mnrheapsold_MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsoldperiods" violates foreign key constraint "fk_mnrheapsoldperiods_mnrheapsold1"') END; END;
CREATE TRIGGER UPD_fk_mnrheapsoldperiods_periods1 BEFORE UPDATE ON mnrheapsoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "mnrheapsoldperiods" violates foreign key constraint "fk_mnrheapsoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_moduletree_moduletree1 BEFORE UPDATE ON moduletree FOR EACH ROW BEGIN SELECT CASE WHEN ((NEW.parent_module IS NOT NULL) AND ((SELECT (module_id) as value FROM moduletree WHERE module_id = NEW.parent_module) IS NULL)) THEN RAISE(ABORT, 'insert on table "moduletree" violates foreign key constraint "fk_moduletree_moduletree1"') END; END;
CREATE TRIGGER UPD_fk_otherhhcpperiods_otherhhcp1 BEFORE UPDATE ON otherhhcpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM otherhhcp WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhcpperiods" violates foreign key constraint "fk_otherhhcpperiods_otherhhcp1"') END; END;
CREATE TRIGGER UPD_fk_otherhhcpperiods_periods1 BEFORE UPDATE ON otherhhcpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhcpperiods" violates foreign key constraint "fk_otherhhcpperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_otherhhexpperiods_otherhhexp1 BEFORE UPDATE ON otherhhexpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM otherhhexp WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhexpperiods" violates foreign key constraint "fk_otherhhexpperiods_otherhhexp1"') END; END;
CREATE TRIGGER UPD_fk_otherhhexpperiods_periods1 BEFORE UPDATE ON otherhhexpperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherhhexpperiods" violates foreign key constraint "fk_otherhhexpperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_otherincomeperiods_otherincome1 BEFORE UPDATE ON otherincomeperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PROD_COD) as value FROM otherincome WHERE SYS_COD = NEW.SYS_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherincomeperiods" violates foreign key constraint "fk_otherincomeperiods_otherincome1"') END; END;
CREATE TRIGGER UPD_fk_otherincomeperiods_periods1 BEFORE UPDATE ON otherincomeperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherincomeperiods" violates foreign key constraint "fk_otherincomeperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_othermanlabour_labforce1 BEFORE UPDATE ON othermanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "othermanlabour" violates foreign key constraint "fk_othermanlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_othermanlabour_otherman1 BEFORE UPDATE ON othermanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || ACTY_COD) as value FROM otherman WHERE SYS_COD = NEW.SYS_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "othermanlabour" violates foreign key constraint "fk_othermanlabour_otherman1"') END; END;
CREATE TRIGGER UPD_fk_othermantim_periods BEFORE UPDATE ON othermantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "othermantim" violates foreign key constraint "fk_othermantim_periods"') END; END;
CREATE TRIGGER UPD_fk_otherprodperiods_otherprod1 BEFORE UPDATE ON otherprodperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || PROD_COD) as value FROM otherprod WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "otherprodperiods" violates foreign key constraint "fk_otherprodperiods_otherprod1"') END; END;
CREATE TRIGGER UPD_fk_otherprodperiods_periods1 BEFORE UPDATE ON otherprodperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "otherprodperiods" violates foreign key constraint "fk_otherprodperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_owneduselabour_labforce1 BEFORE UPDATE ON owneduselabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduselabour" violates foreign key constraint "fk_owneduselabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_owneduselabour_owneduse1 BEFORE UPDATE ON owneduselabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduselabour" violates foreign key constraint "fk_owneduselabour_owneduse1"') END; END;
CREATE TRIGGER UPD_fk_owneduseperiods_owneduse1 BEFORE UPDATE ON owneduseperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD) as value FROM owneduse WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduseperiods" violates foreign key constraint "fk_owneduseperiods_owneduse1"') END; END;
CREATE TRIGGER UPD_fk_owneduseperiods_periods1 BEFORE UPDATE ON owneduseperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "owneduseperiods" violates foreign key constraint "fk_owneduseperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_ownusedvlabour_labforce1 BEFORE UPDATE ON ownusedvlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvlabour" violates foreign key constraint "fk_ownusedvlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_ownusedvlabour_ownusedv1 BEFORE UPDATE ON ownusedvlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD) as value FROM ownusedv WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvlabour" violates foreign key constraint "fk_ownusedvlabour_ownusedv1"') END; END;
CREATE TRIGGER UPD_fk_ownusedvperiods_ownusedv1 BEFORE UPDATE ON ownusedvperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD) as value FROM ownusedv WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvperiods" violates foreign key constraint "fk_ownusedvperiods_ownusedv1"') END; END;
CREATE TRIGGER UPD_fk_ownusedvperiods_periods1 BEFORE UPDATE ON ownusedvperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "ownusedvperiods" violates foreign key constraint "fk_ownusedvperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_plotlabour_labforce1 BEFORE UPDATE ON plotlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotlabour" violates foreign key constraint "fk_plotlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_plotlabour_plotmantim1 BEFORE UPDATE ON plotlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || NMONTH) as value FROM plotmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotlabour" violates foreign key constraint "fk_plotlabour_plotmantim1"') END; END;
CREATE TRIGGER UPD_fk_plotman_activity1 BEFORE UPDATE ON plotman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (ACTY_COD) as value FROM activity WHERE ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotman" violates foreign key constraint "fk_plotman_activity1"') END; END;
CREATE TRIGGER UPD_fk_plotman_plotmantim BEFORE UPDATE ON plotmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmantim" violates foreign key constraint "fk_plotman_plotmantim"') END; END;
CREATE TRIGGER UPD_fk_plotman_spadstown1 BEFORE UPDATE ON plotman FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD) as value FROM spadstown WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotman" violates foreign key constraint "fk_plotman_spadstown1"') END; END;
CREATE TRIGGER UPD_fk_plotmanfert_plotmantim1 BEFORE UPDATE ON plotmanfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || NMONTH) as value FROM plotmantim WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND NMONTH = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanfert" violates foreign key constraint "fk_plotmanfert_plotmantim1"') END; END;
CREATE TRIGGER UPD_fk_plotmanlabour_labforce1 BEFORE UPDATE ON plotmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanlabour" violates foreign key constraint "fk_plotmanlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_plotmanlabour_plotman1 BEFORE UPDATE ON plotmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanlabour" violates foreign key constraint "fk_plotmanlabour_plotman1"') END; END;
CREATE TRIGGER UPD_fk_plotmanperiods_periods1 BEFORE UPDATE ON plotmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanperiods" violates foreign key constraint "fk_plotmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_plotmanperiods_plotman1 BEFORE UPDATE ON plotmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanperiods" violates foreign key constraint "fk_plotmanperiods_plotman1"') END; END;
CREATE TRIGGER UPD_fk_plotmanprchfert_ferttype1 BEFORE UPDATE ON plotmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (FERTYP_COD) as value FROM ferttype WHERE FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfert" violates foreign key constraint "fk_plotmanprchfert_ferttype1"') END; END;
CREATE TRIGGER UPD_fk_plotmanprchfert_plotman1 BEFORE UPDATE ON plotmanprchfert FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD) as value FROM plotman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfert" violates foreign key constraint "fk_plotmanprchfert_plotman1"') END; END;
CREATE TRIGGER UPD_fk_plotmanprchfertperiods_periods1 BEFORE UPDATE ON plotmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfertperiods" violates foreign key constraint "fk_plotmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_plotmanprchfertperiods_plotmanprchfert1 BEFORE UPDATE ON plotmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || ACTY_COD || FERTYP_COD) as value FROM plotmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmanprchfertperiods" violates foreign key constraint "fk_plotmanprchfertperiods_plotmanprchfert1"') END; END;
CREATE TRIGGER UPD_fk_plotmantim_periods10 BEFORE UPDATE ON plotmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "plotmantim" violates foreign key constraint "fk_plotmantim_periods10"') END; END;
CREATE TRIGGER UPD_fk_plotpaddspelabour_labforce1 BEFORE UPDATE ON plotpaddspelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspelabour" violates foreign key constraint "fk_plotpaddspelabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_plotpaddspelabour_plotpaddspe1 BEFORE UPDATE ON plotpaddspelabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMPADD || CROP_COD) as value FROM plotpaddspe WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMPADD = NEW.NUMPADD AND CROP_COD = NEW.CROP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "plotpaddspelabour" violates foreign key constraint "fk_plotpaddspelabour_plotpaddspe1"') END; END;
CREATE TRIGGER UPD_fk_plotseasonsperiods_periods1 BEFORE UPDATE ON plotseasonsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "plotseasonsperiods" violates foreign key constraint "fk_plotseasonsperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_plotseasonsperiods_plotseasons1 BEFORE UPDATE ON plotseasonsperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON) as value FROM plotseasons WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON) IS NULL) THEN RAISE(ABORT, 'insert on table "plotseasonsperiods" violates foreign key constraint "fk_plotseasonsperiods_plotseasons1"') END; END;
CREATE TRIGGER UPD_fk_stallfeeprchperiods_periods1 BEFORE UPDATE ON stallfeeprchperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprchperiods" violates foreign key constraint "fk_stallfeeprchperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_stallfeeprchperiods_stallfeeprch1 BEFORE UPDATE ON stallfeeprchperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || FEED_COD || LIVE_ICOD || GROUP_COD) as value FROM stallfeeprch WHERE SYS_COD = NEW.SYS_COD AND FEED_COD = NEW.FEED_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "stallfeeprchperiods" violates foreign key constraint "fk_stallfeeprchperiods_stallfeeprch1"') END; END;
CREATE TRIGGER UPD_fk_sysmodulenotes_system1 BEFORE UPDATE ON sysmodulenotes FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "sysmodulenotes" violates foreign key constraint "fk_sysmodulenotes_system1"') END; END;
CREATE TRIGGER UPD_fk_systemperiod_periods1 BEFORE UPDATE ON systemperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "systemperiods" violates foreign key constraint "fk_systemperiod_periods1"') END; END;
CREATE TRIGGER UPD_fk_systemperiod_system1 BEFORE UPDATE ON systemperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD) as value FROM system WHERE SYS_COD = NEW.SYS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "systemperiods" violates foreign key constraint "fk_systemperiod_system1"') END; END;
CREATE TRIGGER UPD_fk_table1_labforce1 BEFORE UPDATE ON labforceperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "labforceperiods" violates foreign key constraint "fk_table1_labforce1"') END; END;
CREATE TRIGGER UPD_fk_table1_livemangrp1 BEFORE UPDATE ON livemangrplabourB FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || LIVE_ICOD || GROUP_COD || ACTY_COD) as value FROM livemangrp WHERE SYS_COD = NEW.SYS_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "livemangrplabourB" violates foreign key constraint "fk_table1_livemangrp1"') END; END;
CREATE TRIGGER UPD_fk_table1_periods1 BEFORE UPDATE ON labforceperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "labforceperiods" violates foreign key constraint "fk_table1_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegforamanfeedperiods_periods1 BEFORE UPDATE ON vegforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeedperiods" violates foreign key constraint "fk_vegforamanfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegforamanfeedperiods_vegforamanfeed1 BEFORE UPDATE ON vegforamanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD || LIVE_ICOD || GROUP_COD) as value FROM vegforamanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanfeedperiods" violates foreign key constraint "fk_vegforamanfeedperiods_vegforamanfeed1"') END; END;
CREATE TRIGGER UPD_fk_vegforamanperiods_periods1 BEFORE UPDATE ON vegforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanperiods" violates foreign key constraint "fk_vegforamanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegforamanperiods_vegforaman1 BEFORE UPDATE ON vegforamanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD) as value FROM vegforaman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamanperiods" violates foreign key constraint "fk_vegforamanperiods_vegforaman1"') END; END;
CREATE TRIGGER UPD_fk_vegforamansoldperiods_periods1 BEFORE UPDATE ON vegforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansoldperiods" violates foreign key constraint "fk_vegforamansoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegforamansoldperiods_vegforamansold1 BEFORE UPDATE ON vegforamansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FORA_COD || MARK_COD) as value FROM vegforamansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FORA_COD = NEW.FORA_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamansoldperiods" violates foreign key constraint "fk_vegforamansoldperiods_vegforamansold1"') END; END;
CREATE TRIGGER UPD_fk_vegforamantim_periods BEFORE UPDATE ON vegforamantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegforamantim" violates foreign key constraint "fk_vegforamantim_periods"') END; END;
CREATE TRIGGER UPD_fk_vegmanlabour_labforce1 BEFORE UPDATE ON vegmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PERS_COD) as value FROM labforce WHERE SYS_COD = NEW.SYS_COD AND PERS_COD = NEW.PERS_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanlabour" violates foreign key constraint "fk_vegmanlabour_labforce1"') END; END;
CREATE TRIGGER UPD_fk_vegmanlabour_vegman1 BEFORE UPDATE ON vegmanlabour FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanlabour" violates foreign key constraint "fk_vegmanlabour_vegman1"') END; END;
CREATE TRIGGER UPD_fk_vegmanperiods_periods1 BEFORE UPDATE ON vegmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanperiods" violates foreign key constraint "fk_vegmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegmanperiods_vegman1 BEFORE UPDATE ON vegmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD) as value FROM vegman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanperiods" violates foreign key constraint "fk_vegmanperiods_vegman1"') END; END;
CREATE TRIGGER UPD_fk_vegmanprchfertperiods_periods1 BEFORE UPDATE ON vegmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfertperiods" violates foreign key constraint "fk_vegmanprchfertperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegmanprchfertperiods_vegmanprchfert1 BEFORE UPDATE ON vegmanprchfertperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || FERTYP_COD) as value FROM vegmanprchfert WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND FERTYP_COD = NEW.FERTYP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmanprchfertperiods" violates foreign key constraint "fk_vegmanprchfertperiods_vegmanprchfert1"') END; END;
CREATE TRIGGER UPD_fk_vegmantim_periods BEFORE UPDATE ON vegmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegmantim" violates foreign key constraint "fk_vegmantim_periods"') END; END;
CREATE TRIGGER UPD_fk_vegprodmanfeedperiods_periods1 BEFORE UPDATE ON vegprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeedperiods" violates foreign key constraint "fk_vegprodmanfeedperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegprodmanfeedperiods_vegprodmanfeed1 BEFORE UPDATE ON vegprodmanfeedperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD || LIVE_ICOD || GROUP_COD) as value FROM vegprodmanfeed WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND LIVE_ICOD = NEW.LIVE_ICOD AND GROUP_COD = NEW.GROUP_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanfeedperiods" violates foreign key constraint "fk_vegprodmanfeedperiods_vegprodmanfeed1"') END; END;
CREATE TRIGGER UPD_fk_vegprodmanperiods_periods1 BEFORE UPDATE ON vegprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanperiods" violates foreign key constraint "fk_vegprodmanperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegprodmanperiods_vegprodman1 BEFORE UPDATE ON vegprodmanperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD) as value FROM vegprodman WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmanperiods" violates foreign key constraint "fk_vegprodmanperiods_vegprodman1"') END; END;
CREATE TRIGGER UPD_fk_vegprodmansoldperiods_periods1 BEFORE UPDATE ON vegprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.period_id) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansoldperiods" violates foreign key constraint "fk_vegprodmansoldperiods_periods1"') END; END;
CREATE TRIGGER UPD_fk_vegprodmansoldperiods_vegprodmansold1 BEFORE UPDATE ON vegprodmansoldperiods FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (SYS_COD || PLOT_COD || NUMSEASON || CROP_COD || VEG_COD || ACTY_COD || PROD_COD || MARK_COD) as value FROM vegprodmansold WHERE SYS_COD = NEW.SYS_COD AND PLOT_COD = NEW.PLOT_COD AND NUMSEASON = NEW.NUMSEASON AND CROP_COD = NEW.CROP_COD AND VEG_COD = NEW.VEG_COD AND ACTY_COD = NEW.ACTY_COD AND PROD_COD = NEW.PROD_COD AND MARK_COD = NEW.MARK_COD) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmansoldperiods" violates foreign key constraint "fk_vegprodmansoldperiods_vegprodmansold1"') END; END;
CREATE TRIGGER UPD_fk_vegprodmantim_periods BEFORE UPDATE ON vegprodmantim FOR EACH ROW BEGIN SELECT CASE WHEN ((SELECT (period_id) as value FROM periods WHERE period_id = NEW.NMONTH) IS NULL) THEN RAISE(ABORT, 'insert on table "vegprodmantim" violates foreign key constraint "fk_vegprodmantim_periods"') END; END;
CREATE INDEX activity_MNTIDX001 ON activity (UNIT_COD ASC);
CREATE INDEX actymethods_MNTIDX002 ON actymethods (ACTY_COD ASC);
CREATE INDEX cropfora_MNTIDX013 ON cropfora (CROP_COD ASC);
CREATE INDEX cropfora_MNTIDX014 ON cropfora (FORA_COD ASC);
CREATE INDEX croplabour_SYSIDX027 ON croplabour (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX croplabour_SYSIDX028 ON croplabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX cropman_SYSIDX020 ON cropman (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC);
CREATE INDEX cropman_SYSIDX021 ON cropman (ACTY_COD ASC);
CREATE INDEX cropmanfert_SYSIDX024 ON cropmanfert (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX cropmanfert_SYSIDX025 ON cropmanfert (FERTYP_COD ASC);
CREATE INDEX cropmanfert_SYSIDX026 ON cropmanfert (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX cropmanheap_SYSIDX157 ON cropmanheap (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX cropmanheap_SYSIDX158 ON cropmanheap (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX cropmanheap_SYSIDX159 ON cropmanheap (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX cropmanlabour_SYSIDX244 ON cropmanlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX cropmanperiods_SYSIDX189 ON cropmanperiods (period_id ASC);
CREATE INDEX cropmanprchfert_SYSIDX029 ON cropmanprchfert (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX cropmanprchfert_SYSIDX030 ON cropmanprchfert (FERTYP_COD ASC);
CREATE INDEX cropmanprchfertperiods_SYSIDX190 ON cropmanprchfertperiods (period_id ASC);
CREATE INDEX cropmantim_SYSIDX022 ON cropmantim (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX cropmantim_SYSIDX023 ON cropmantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX cropmantim_SYSIDX191 ON cropmantim (NMONTH ASC);
CREATE INDEX cropprods_MNTIDX011 ON cropprods (CROP_COD ASC);
CREATE INDEX cropprods_MNTIDX012 ON cropprods (PROD_COD ASC);
CREATE INDEX crpforalabour_SYSIDX043 ON crpforalabour (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC, NMONTH ASC);
CREATE INDEX crpforalabour_SYSIDX044 ON crpforalabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX crpforaman_SYSIDX037 ON crpforaman (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX crpforaman_SYSIDX038 ON crpforaman (CROP_COD ASC, FORA_COD ASC);
CREATE INDEX crpforamanfeed_SYSIDX109 ON crpforamanfeed (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX crpforamanfeed_SYSIDX110 ON crpforamanfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX crpforamanfeedperiods_SYSIDX221 ON crpforamanfeedperiods (period_id ASC);
CREATE INDEX crpforamanperiods_SYSIDX196 ON crpforamanperiods (period_id ASC);
CREATE INDEX crpforamansold_SYSIDX039 ON crpforamansold (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX crpforamansold_SYSIDX040 ON crpforamansold (MARK_COD ASC);
CREATE INDEX crpforamansoldperiods_SYSIDX197 ON crpforamansoldperiods (period_id ASC);
CREATE INDEX crpforamantim_SYSIDX041 ON crpforamantim (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX crpforamantim_SYSIDX042 ON crpforamantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX crpforamantim_SYSIDX195 ON crpforamantim (NMONTH ASC);
CREATE INDEX crpprodlabour_SYSIDX035 ON crpprodlabour (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC, NMONTH ASC);
CREATE INDEX crpprodlabour_SYSIDX036 ON crpprodlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX crpprodman_SYSIDX031 ON crpprodman (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX crpprodman_SYSIDX032 ON crpprodman (CROP_COD ASC, PROD_COD ASC);
CREATE INDEX crpprodmanfeed_SYSIDX107 ON crpprodmanfeed (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX crpprodmanfeed_SYSIDX108 ON crpprodmanfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX crpprodmanfeedperiods_SYSIDX220 ON crpprodmanfeedperiods (period_id ASC);
CREATE INDEX crpprodmanperiods_SYSIDX194 ON crpprodmanperiods (period_id ASC);
CREATE INDEX crpprodmansold_SYSIDX033 ON crpprodmansold (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX crpprodmansold_SYSIDX034 ON crpprodmansold (MARK_COD ASC);
CREATE INDEX crpprodmansoldperiods_SYSIDX193 ON crpprodmansoldperiods (period_id ASC);
CREATE INDEX crpprodmantim_SYSIDX033 ON crpprodmantim (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX crpprodmantim_SYSIDX034 ON crpprodmantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX crpprodmantim_SYSIDX192 ON crpprodmantim (NMONTH ASC);
CREATE INDEX farmassets_SYSIDX140 ON farmassets (SYS_COD ASC);
CREATE INDEX feedgroups_SYSIDX101 ON feedgroups (SYS_COD ASC, LIVE_ICOD ASC);
CREATE INDEX feedgroupslabour_SYSIDX248 ON feedgroupslabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX grassforalabour_SYSIDX096 ON grassforalabour (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC, NMONTH ASC);
CREATE INDEX grassforalabour_SYSIDX098 ON grassforalabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX grassforaman_SYSIDX090 ON grassforaman (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX grassforaman_SYSIDX091 ON grassforaman (CROP_COD ASC, FORA_COD ASC);
CREATE INDEX grassforamanfeed_SYSIDX117 ON grassforamanfeed (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX grassforamanfeed_SYSIDX118 ON grassforamanfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX grassforamanfeedperiods_SYSIDX225 ON grassforamanfeedperiods (period_id ASC);
CREATE INDEX grassforamanperiods_SYSIDX214 ON grassforamanperiods (period_id ASC);
CREATE INDEX grassforamansold_SYSIDX092 ON grassforamansold (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX grassforamansold_SYSIDX093 ON grassforamansold (MARK_COD ASC);
CREATE INDEX grassforamansoldperiods_SYSIDX215 ON grassforamansoldperiods (period_id ASC);
CREATE INDEX grassforamantim_SYSIDX094 ON grassforamantim (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX grassforamantim_SYSIDX095 ON grassforamantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX grassforamantim_SYSIDX213 ON grassforamantim (NMONTH ASC);
CREATE INDEX grasslabour_SYSIDX080 ON grasslabour (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX grasslabour_SYSIDX081 ON grasslabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX grassman_SYSIDX071 ON grassman (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC);
CREATE INDEX grassman_SYSIDX072 ON grassman (ACTY_COD ASC);
CREATE INDEX grassmanfert_SYSIDX075 ON grassmanfert (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX grassmanfert_SYSIDX076 ON grassmanfert (FERTYP_COD ASC);
CREATE INDEX grassmanfert_SYSIDX077 ON grassmanfert (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX grassmanheap_SYSIDX163 ON grassmanheap (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX grassmanheap_SYSIDX164 ON grassmanheap (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX grassmanheap_SYSIDX165 ON grassmanheap (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX grassmanlabour_SYSIDX246 ON grassmanlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX grassmanperiods_SYSIDX208 ON grassmanperiods (period_id ASC);
CREATE INDEX grassmanprchfert_SYSIDX078 ON grassmanprchfert (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX grassmanprchfert_SYSIDX079 ON grassmanprchfert (FERTYP_COD ASC);
CREATE INDEX grassmanprchfertperiods_SYSIDX209 ON grassmanprchfertperiods (period_id ASC);
CREATE INDEX grassmantim_SYSIDX073 ON grassmantim (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX grassmantim_SYSIDX074 ON grassmantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX grassmantim_SYSIDX207 ON grassmantim (NMONTH ASC);
CREATE INDEX grassprodlabour_SYSIDX088 ON grassprodlabour (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC, NMONTH ASC);
CREATE INDEX grassprodlabour_SYSIDX089 ON grassprodlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX grassprodman_SYSIDX082 ON grassprodman (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC);
CREATE INDEX grassprodman_SYSIDX083 ON grassprodman (CROP_COD ASC, PROD_COD ASC);
CREATE INDEX grassprodmanfeed_SYSIDX115 ON grassprodmanfeed (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX grassprodmanfeed_SYSIDX116 ON grassprodmanfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX grassprodmanfeedperiods_SYSIDX224 ON grassprodmanfeedperiods (period_id ASC);
CREATE INDEX grassprodmanperiods_SYSIDX211 ON grassprodmanperiods (period_id ASC);
CREATE INDEX grassprodmansold_SYSIDX084 ON grassprodmansold (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX grassprodmansold_SYSIDX085 ON grassprodmansold (MARK_COD ASC);
CREATE INDEX grassprodmansoldperiods_SYSIDX212 ON grassprodmansoldperiods (period_id ASC);
CREATE INDEX grassprodmantim_SYSIDX086 ON grassprodmantim (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX grassprodmantim_SYSIDX087 ON grassprodmantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX grassprodmantim_SYSIDX210 ON grassprodmantim (NMONTH ASC);
CREATE INDEX grazingman_SYSIDX105 ON grazingman (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC);
CREATE INDEX grazingman_SYSIDX106 ON grazingman (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX grazingman_SYSIDX170 ON grazingman (MLIVE_COD ASC, MPROD_COD ASC);
CREATE INDEX grazingmanperiods_SYSIDX219 ON grazingmanperiods (period_id ASC);
CREATE INDEX grpcrpforacons_fk_grpcrpforacons_periods1 ON grpcrpforacons (period_id ASC);
CREATE INDEX grpcrpforaprod_fk_grpcrpforaprod_cropfora1 ON grpcrpforaprod (CROP_COD ASC, FORA_COD ASC);
CREATE INDEX grpcrpforasold_fk_grpcrpforasold_markoutlet1 ON grpcrpforasold (MARK_COD ASC);
CREATE INDEX grpcrpforasoldperiods_fk_grpcrpforasoldperiods_periods1 ON grpcrpforasoldperiods (period_id ASC);
CREATE INDEX grpcrpprodscons_fk_grpcrpprodscons_periods1 ON grpcrpprodscons (period_id ASC);
CREATE INDEX grpcrpprodsprod_fk_grpcrpprodsprod_cropprods1 ON grpcrpprodsprod (CROP_COD ASC, PROD_COD ASC);
CREATE INDEX grpcrpprodssold_fk_grpcrpprodssold_markoutlet1 ON grpcrpprodssold (MARK_COD ASC);
CREATE INDEX grpcrpprodssoldperiods_fk_grpcrpprodssoldperiods_periods1 ON grpcrpprodssoldperiods (period_id ASC);
CREATE INDEX labforce_SYSIDX001 ON labforce (SYS_COD ASC);
CREATE INDEX labforceperiods_SYSIDX184 ON labforceperiods (period_id ASC);
CREATE INDEX liveavailres_SYSIDX099 ON liveavailres (SYS_COD ASC);
CREATE INDEX liveavailres_SYSIDX100 ON liveavailres (FEED_COD ASC);
CREATE INDEX liveavailresperiods_SYSIDX216 ON liveavailresperiods (period_id ASC);
CREATE INDEX livegroups_SYSIDX104 ON livegroups (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX livegroupsperiods_SYSIDX218 ON livegroupsperiods (period_id ASC);
CREATE INDEX livehvst_SYSIDX130 ON livehvst (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX livehvst_SYSIDX131 ON livehvst (LIVE_COD ASC, PROD_COD ASC);
CREATE INDEX livehvstcatperiods_SYSIDX251 ON livehvstcatperiods (period_id ASC);
CREATE INDEX livehvstfeed_SYSIDX166 ON livehvstfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, LIVE_COD ASC, PROD_COD ASC);
CREATE INDEX livehvstfeed_SYSIDX167 ON livehvstfeed (SYS_COD ASC, FLIVE_ICOD ASC, FGROUP_COD ASC);
CREATE INDEX livehvstfeedperiods_SYSIDX235 ON livehvstfeedperiods (period_id ASC);
CREATE INDEX livehvstlabour_SYSIDX133 ON livehvstlabour (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, LIVE_COD ASC, PROD_COD ASC, NMONTH ASC);
CREATE INDEX livehvstlabour_SYSIDX134 ON livehvstlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX livehvstperiods_SYSIDX234 ON livehvstperiods (period_id ASC);
CREATE INDEX livehvstsold_SYSIDX144 ON livehvstsold (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, LIVE_COD ASC, PROD_COD ASC);
CREATE INDEX livehvstsold_SYSIDX145 ON livehvstsold (MARK_COD ASC);
CREATE INDEX livehvstsoldcat_SYSIDX147 ON livehvstsoldcat (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, LIVE_COD ASC, PROD_COD ASC, HERD_COD ASC);
CREATE INDEX livehvstsoldcat_SYSIDX148 ON livehvstsoldcat (MARK_COD ASC);
CREATE INDEX livehvstsoldcatperiods_SYSIDX237 ON livehvstsoldcatperiods (period_id ASC);
CREATE INDEX livehvstsoldperiods_SYSIDX236 ON livehvstsoldperiods (period_id ASC);
CREATE INDEX livehvsttim_SYSIDX132 ON livehvsttim (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, LIVE_COD ASC, PROD_COD ASC);
CREATE INDEX livehvsttim_SYSIDX233 ON livehvsttim (NMONTH ASC);
CREATE INDEX livehvsttimcat_SYSIDX146 ON livehvsttimcat (NMONTH ASC);
CREATE INDEX livelabour_SYSIDX122 ON livelabour (SYS_COD ASC, LIVE_ICOD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX livelabour_SYSIDX123 ON livelabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX liveman_SYSIDX119 ON liveman (SYS_COD ASC, LIVE_ICOD ASC);
CREATE INDEX liveman_SYSIDX120 ON liveman (ACTY_COD ASC);
CREATE INDEX livemangrp_SYSIDX125 ON livemangrp (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX livemangrp_SYSIDX126 ON livemangrp (ACTY_COD ASC);
CREATE INDEX livemangrplabourB_SYSIDX250 ON livemangrplabourB (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX livemangrplabour_SYSIDX128 ON livemangrplabour (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX livemangrplabour_SYSIDX129 ON livemangrplabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX livemangrptim_SYSIDX127 ON livemangrptim (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, ACTY_COD ASC);
CREATE INDEX livemangrptim_SYSIDX228 ON livemangrptim (NMONTH ASC);
CREATE INDEX livemanlabour_SYSIDX249 ON livemanlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX livemantim_SYSIDX121 ON livemantim (SYS_COD ASC, LIVE_ICOD ASC, ACTY_COD ASC);
CREATE INDEX livemantim_SYSIDX227 ON livemantim (NMONTH ASC);
CREATE INDEX lvproducts_MNTIDX003 ON lvproducts (LIVE_COD ASC);
CREATE INDEX lvproducts_MNTIDX004 ON lvproducts (PROD_COD ASC);
CREATE INDEX lvstosys_SYSIDX007 ON lvstosys (SYS_COD ASC);
CREATE INDEX lvstosys_SYSIDX008 ON lvstosys (LIVE_COD ASC);
CREATE INDEX lvstosyslabour_SYSIDX247 ON lvstosyslabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX lvstosysperiods_SYSIDX185 ON lvstosysperiods (period_id ASC);
CREATE INDEX mnrheap_SYSIDX149 ON mnrheap (SYS_COD ASC);
CREATE INDEX mnrheapaddprods_SYSIDX153 ON mnrheapaddprods (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapaddprods_SYSIDX154 ON mnrheapaddprods (SYS_COD ASC, PROD_COD ASC);
CREATE INDEX mnrheapcrpfora_SYSIDX172 ON mnrheapcrpfora (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapcrpfora_SYSIDX173 ON mnrheapcrpfora (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX mnrheapcrpprod_SYSIDX170 ON mnrheapcrpprod (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapcrpprod_SYSIDX171 ON mnrheapcrpprod (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX mnrheapfeed_SYSIDX168 ON mnrheapfeed (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapfeed_SYSIDX169 ON mnrheapfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX mnrheapfeedperiods_SYSIDX238 ON mnrheapfeedperiods (period_id ASC);
CREATE INDEX mnrheapgrassfora_SYSIDX176 ON mnrheapgrassfora (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapgrassfora_SYSIDX177 ON mnrheapgrassfora (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX mnrheapgrassprod_SYSIDX174 ON mnrheapgrassprod (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapgrassprod_SYSIDX175 ON mnrheapgrassprod (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX mnrheaplvprod_SYSIDX150 ON mnrheaplvprod (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheaplvprod_SYSIDX151 ON mnrheaplvprod (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC, LIVE_COD ASC, PROD_COD ASC);
CREATE INDEX mnrheapprods_SYSIDX152 ON mnrheapprods (SYS_COD ASC);
CREATE INDEX mnrheapprodsperiods_SYSIDX239 ON mnrheapprodsperiods (period_id ASC);
CREATE INDEX mnrheapsold_SYSIDX155 ON mnrheapsold (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapsold_SYSIDX156 ON mnrheapsold (MARK_COD ASC);
CREATE INDEX mnrheapsoldperiods_SYSIDX240 ON mnrheapsoldperiods (period_id ASC);
CREATE INDEX mnrheapvegfora_SYSIDX180 ON mnrheapvegfora (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapvegfora_SYSIDX181 ON mnrheapvegfora (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX mnrheapvegprod_SYSIDX178 ON mnrheapvegprod (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX mnrheapvegprod_SYSIDX179 ON mnrheapvegprod (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX moduletree_MNTIDXMODULES ON moduletree (parent_module ASC);
CREATE INDEX otherhhcp_SYSIDX141 ON otherhhcp (SYS_COD ASC);
CREATE INDEX otherhhcpperiods_SYSIDX230 ON otherhhcpperiods (period_id ASC);
CREATE INDEX otherhhexp_SYSIDX142 ON otherhhexp (SYS_COD ASC);
CREATE INDEX otherhhexpperiods_SYSIDX231 ON otherhhexpperiods (period_id ASC);
CREATE INDEX otherincome_SYSIDX143 ON otherincome (SYS_COD ASC);
CREATE INDEX otherincomeperiods_SYSIDX232 ON otherincomeperiods (period_id ASC);
CREATE INDEX otherlabour_SYSIDX138 ON otherlabour (SYS_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX otherlabour_SYSIDX139 ON otherlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX otherman_SYSIDX135 ON otherman (SYS_COD ASC);
CREATE INDEX otherman_SYSIDX136 ON otherman (ACTY_COD ASC);
CREATE INDEX othermanlabour_SYSIDX250 ON othermanlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX othermantim_SYSIDX137 ON othermantim (SYS_COD ASC, ACTY_COD ASC);
CREATE INDEX othermantim_SYSIDX229 ON othermantim (NMONTH ASC);
CREATE INDEX otherprod_SYSIDX124 ON otherprod (SYS_COD ASC, LIVE_ICOD ASC);
CREATE INDEX otherprodperiods_SYSIDX226 ON otherprodperiods (period_id ASC);
CREATE INDEX owneduse_SYSIDX011 ON owneduse (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC);
CREATE INDEX owneduse_SYSIDX012 ON owneduse (CROP_COD ASC);
CREATE INDEX owneduselabour_SYSIDX141 ON owneduselabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX owneduseperiods_SYSIDX187 ON owneduseperiods (period_id ASC);
CREATE INDEX ownusedv_SYSIDX013 ON ownusedv (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC);
CREATE INDEX ownusedv_SYSIDX014 ON ownusedv (VEG_COD ASC);
CREATE INDEX ownusedvlabour_SYSIDX243 ON ownusedvlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX ownusedvperiods_SYSIDX188 ON ownusedvperiods (period_id ASC);
CREATE INDEX pastfora_MNTIDX009 ON pastfora (CROP_COD ASC);
CREATE INDEX pastfora_MNTIDX010 ON pastfora (FORA_COD ASC);
CREATE INDEX pastprods_MNTIDX007 ON pastprods (CROP_COD ASC);
CREATE INDEX pastprods_MNTIDX008 ON pastprods (PROD_COD ASC);
CREATE INDEX plotgpspos_SYSIDX009 ON plotgpspos (SYS_COD ASC, PLOT_COD ASC);
CREATE INDEX plotlabour_SYSIDX255 ON plotlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX plotman_SYSIDX252 ON plotman (ACTY_COD ASC);
CREATE INDEX plotmanfert_SYSIDX025 ON plotmanfert (FERTYP_COD ASC);
CREATE INDEX plotmanfert_SYSIDX026 ON plotmanfert (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX plotmanfert_SYSIDX257 ON plotmanfert (SYS_COD ASC, PLOT_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX plotmanheap_SYSIDX160 ON plotmanheap (SYS_COD ASC, PLOT_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX plotmanheap_SYSIDX161 ON plotmanheap (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX plotmanheap_SYSIDX162 ON plotmanheap (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX plotmanlabour_SYSIDX259 ON plotmanlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX plotmanperiods_SYSIDX253 ON plotmanperiods (period_id ASC);
CREATE INDEX plotmanprchfert_SYSIDX256 ON plotmanprchfert (FERTYP_COD ASC);
CREATE INDEX plotmanprchfertperiods_SYSIDX258 ON plotmanprchfertperiods (period_id ASC);
CREATE INDEX plotmantim_SYSIDX023 ON plotmantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX plotmantim_SYSIDX191 ON plotmantim (NMONTH ASC);
CREATE INDEX plotmantim_SYSIDX254 ON plotmantim (SYS_COD ASC, PLOT_COD ASC, ACTY_COD ASC);
CREATE INDEX plotpaddoks_SYSIDX015 ON plotpaddoks (SYS_COD ASC, PLOT_COD ASC);
CREATE INDEX plotpaddspe_SYSIDX016 ON plotpaddspe (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC);
CREATE INDEX plotpaddspe_SYSIDX017 ON plotpaddspe (CROP_COD ASC);
CREATE INDEX plotpaddspedt_SYSIDX018 ON plotpaddspedt (SYS_COD ASC, PLOT_COD ASC, NUMPADD ASC, CROP_COD ASC);
CREATE INDEX plotpaddspedt_SYSIDX019 ON plotpaddspedt (CROPD_COD ASC);
CREATE INDEX plotpaddspelabour_SYSIDX242 ON plotpaddspelabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX plotseasons_SYSIDX010 ON plotseasons (SYS_COD ASC, PLOT_COD ASC);
CREATE INDEX plotseasonsperiods_SYSIDX186 ON plotseasonsperiods (period_id ASC);
CREATE INDEX spadstown_SYSIDX002 ON spadstown (SYS_COD ASC);
CREATE INDEX spadstown_SYSIDX003 ON spadstown (SOIL_COD ASC);
CREATE INDEX spadstown_SYSIDX004 ON spadstown (DRAIN_COD ASC);
CREATE INDEX stallfeeprch_SYSIDX102 ON stallfeeprch (SYS_COD ASC, FEED_COD ASC);
CREATE INDEX stallfeeprch_SYSIDX103 ON stallfeeprch (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX stallfeeprchperiods_SYSIDX217 ON stallfeeprchperiods (period_id ASC);
CREATE INDEX system_SYSIDX005 ON system (CNTY_COD ASC);
CREATE INDEX system_SYSIDX006 ON system (SYST_COD ASC);
CREATE INDEX systemperiods_SYSIDX183 ON systemperiods (period_id ASC);
CREATE INDEX systype_MNTIDX005 ON systype (CROP_COD ASC);
CREATE INDEX systype_MNTIDX006 ON systype (LIVE_COD ASC);
CREATE INDEX vegforalabour_SYSIDX069 ON vegforalabour (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, FORA_COD ASC, NMONTH ASC);
CREATE INDEX vegforalabour_SYSIDX070 ON vegforalabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX vegforaman_SYSIDX063 ON vegforaman (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC);
CREATE INDEX vegforaman_SYSIDX064 ON vegforaman (VEG_COD ASC, FORA_COD ASC);
CREATE INDEX vegforamanfeed_SYSIDX113 ON vegforamanfeed (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX vegforamanfeed_SYSIDX114 ON vegforamanfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX vegforamanfeedperiods_SYSIDX223 ON vegforamanfeedperiods (period_id ASC);
CREATE INDEX vegforamanperiods_SYSIDX205 ON vegforamanperiods (period_id ASC);
CREATE INDEX vegforamansold_SYSIDX065 ON vegforamansold (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX vegforamansold_SYSIDX066 ON vegforamansold (MARK_COD ASC);
CREATE INDEX vegforamansoldperiods_SYSIDX206 ON vegforamansoldperiods (period_id ASC);
CREATE INDEX vegforamantim_SYSIDX067 ON vegforamantim (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, FORA_COD ASC);
CREATE INDEX vegforamantim_SYSIDX068 ON vegforamantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX vegforamantim_SYSIDX204 ON vegforamantim (NMONTH ASC);
CREATE INDEX veglabour_SYSIDX051 ON veglabour (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX veglabour_SYSIDX052 ON veglabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX vegman_SYSIDX045 ON vegman (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC);
CREATE INDEX vegman_SYSIDX046 ON vegman (ACTY_COD ASC);
CREATE INDEX vegmanfert_SYSIDX048 ON vegmanfert (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX vegmanfert_SYSIDX049 ON vegmanfert (FERTYP_COD ASC);
CREATE INDEX vegmanfert_SYSIDX050 ON vegmanfert (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX vegmanheap_SYSIDX160 ON vegmanheap (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, NMONTH ASC);
CREATE INDEX vegmanheap_SYSIDX161 ON vegmanheap (SYS_COD ASC, HEAP_COD ASC);
CREATE INDEX vegmanheap_SYSIDX162 ON vegmanheap (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX vegmanlabour_SYSIDX245 ON vegmanlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX vegmanperiods_SYSIDX198 ON vegmanperiods (period_id ASC);
CREATE INDEX vegmanprchfert_SYSIDX053 ON vegmanprchfert (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC);
CREATE INDEX vegmanprchfert_SYSIDX054 ON vegmanprchfert (FERTYP_COD ASC);
CREATE INDEX vegmanprchfertperiods_SYSIDX200 ON vegmanprchfertperiods (period_id ASC);
CREATE INDEX vegmantim_SYSIDX046 ON vegmantim (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC);
CREATE INDEX vegmantim_SYSIDX047 ON vegmantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX vegmantim_SYSIDX199 ON vegmantim (NMONTH ASC);
CREATE INDEX vegprodlabour_SYSIDX061 ON vegprodlabour (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, PROD_COD ASC, NMONTH ASC);
CREATE INDEX vegprodlabour_SYSIDX062 ON vegprodlabour (SYS_COD ASC, PERS_COD ASC);
CREATE INDEX vegprodman_SYSIDX055 ON vegprodman (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC);
CREATE INDEX vegprodman_SYSIDX056 ON vegprodman (VEG_COD ASC, PROD_COD ASC);
CREATE INDEX vegprodmanfeed_SYSIDX111 ON vegprodmanfeed (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX vegprodmanfeed_SYSIDX112 ON vegprodmanfeed (SYS_COD ASC, LIVE_ICOD ASC, GROUP_COD ASC);
CREATE INDEX vegprodmanfeedperiods_SYSIDX222 ON vegprodmanfeedperiods (period_id ASC);
CREATE INDEX vegprodmanperiods_SYSIDX202 ON vegprodmanperiods (period_id ASC);
CREATE INDEX vegprodmansold_SYSIDX057 ON vegprodmansold (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX vegprodmansold_SYSIDX058 ON vegprodmansold (MARK_COD ASC);
CREATE INDEX vegprodmansoldperiods_SYSIDX203 ON vegprodmansoldperiods (period_id ASC);
CREATE INDEX vegprodmantim_SYSIDX059 ON vegprodmantim (SYS_COD ASC, PLOT_COD ASC, NUMSEASON ASC, CROP_COD ASC, VEG_COD ASC, ACTY_COD ASC, PROD_COD ASC);
CREATE INDEX vegprodmantim_SYSIDX060 ON vegprodmantim (ACTYM_COD ASC, MET_COD ASC);
CREATE INDEX vegprodmantim_SYSIDX201 ON vegprodmantim (NMONTH ASC);
CREATE INDEX wellbeing_SYSIDX182 ON wellbeing (SYS_COD ASC);
